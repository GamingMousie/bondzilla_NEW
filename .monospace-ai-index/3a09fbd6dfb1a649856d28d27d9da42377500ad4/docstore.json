[["0",{"pageContent":"File: README.md\n# Firebase Studio\n\nThis is a NextJS starter in Firebase Studio.\n\nTo get started, take a look at src/app/page.tsx.","metadata":{"source":"README.md","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":5}}}}],["1",{"pageContent":"File: components.json\n{\n  \"$schema\": \"https://ui.shadcn.com/schema.json\",\n  \"style\": \"default\",\n  \"rsc\": true,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"tailwind.config.ts\",\n    \"css\": \"src/app/globals.css\",\n    \"baseColor\": \"neutral\",\n    \"cssVariables\": true,\n    \"prefix\": \"\"\n  },\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\",\n    \"ui\": \"@/components/ui\",\n    \"lib\": \"@/lib\",\n    \"hooks\": \"@/hooks\"\n  },\n  \"iconLibrary\": \"lucide\"\n}","metadata":{"source":"components.json","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":21}}}}],["2",{"pageContent":"File: postcss.config.mjs\n/** @type {import('postcss-load-config').Config} */\nconst config = {\n  plugins: {\n    tailwindcss: {},\n  },\n};\n\nexport default config;","metadata":{"source":"postcss.config.mjs","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":8}}}}],["3",{"pageContent":"File: tailwind.config.ts\nimport type { Config } from \"tailwindcss\";","metadata":{"source":"tailwind.config.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":1}}}}],["4",{"pageContent":"File: tailwind.config.ts\nexport default {\n    darkMode: [\"class\"],\n    content: [\n    \"./src/pages/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./src/components/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./src/app/**/*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  theme: {\n  \textend: {\n  \t\tcolors: {\n  \t\t\tbackground: 'hsl(var(--background))',\n  \t\t\tforeground: 'hsl(var(--foreground))',\n  \t\t\tcard: {\n  \t\t\t\tDEFAULT: 'hsl(var(--card))',\n  \t\t\t\tforeground: 'hsl(var(--card-foreground))'\n  \t\t\t},\n  \t\t\tpopover: {\n  \t\t\t\tDEFAULT: 'hsl(var(--popover))',\n  \t\t\t\tforeground: 'hsl(var(--popover-foreground))'\n  \t\t\t},\n  \t\t\tprimary: {\n  \t\t\t\tDEFAULT: 'hsl(var(--primary))',\n  \t\t\t\tforeground: 'hsl(var(--primary-foreground))'\n  \t\t\t},\n  \t\t\tsecondary: {\n  \t\t\t\tDEFAULT: 'hsl(var(--secondary))',\n  \t\t\t\tforeground: 'hsl(var(--secondary-foreground))'\n  \t\t\t},\n  \t\t\tmuted: {\n  \t\t\t\tDEFAULT: 'hsl(var(--muted))',\n  \t\t\t\tforeground: 'hsl(var(--muted-foreground))'\n  \t\t\t},\n  \t\t\taccent: {\n  \t\t\t\tDEFAULT: 'hsl(var(--accent))',\n  \t\t\t\tforeground: 'hsl(var(--accent-foreground))'\n  \t\t\t},","metadata":{"source":"tailwind.config.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":3,"to":38}}}}],["5",{"pageContent":"File: tailwind.config.ts\n},\n  \t\t\tdestructive: {\n  \t\t\t\tDEFAULT: 'hsl(var(--destructive))',\n  \t\t\t\tforeground: 'hsl(var(--destructive-foreground))'\n  \t\t\t},\n  \t\t\tborder: 'hsl(var(--border))',\n  \t\t\tinput: 'hsl(var(--input))',\n  \t\t\tring: 'hsl(var(--ring))',\n  \t\t\tchart: {\n  \t\t\t\t'1': 'hsl(var(--chart-1))',\n  \t\t\t\t'2': 'hsl(var(--chart-2))',\n  \t\t\t\t'3': 'hsl(var(--chart-3))',\n  \t\t\t\t'4': 'hsl(var(--chart-4))',\n  \t\t\t\t'5': 'hsl(var(--chart-5))'\n  \t\t\t},\n  \t\t\tsidebar: {\n  \t\t\t\tDEFAULT: 'hsl(var(--sidebar-background))',\n  \t\t\t\tforeground: 'hsl(var(--sidebar-foreground))',\n  \t\t\t\tprimary: 'hsl(var(--sidebar-primary))',\n  \t\t\t\t'primary-foreground': 'hsl(var(--sidebar-primary-foreground))',\n  \t\t\t\taccent: 'hsl(var(--sidebar-accent))',\n  \t\t\t\t'accent-foreground': 'hsl(var(--sidebar-accent-foreground))',\n  \t\t\t\tborder: 'hsl(var(--sidebar-border))',\n  \t\t\t\tring: 'hsl(var(--sidebar-ring))'\n  \t\t\t}\n  \t\t},\n  \t\tborderRadius: {\n  \t\t\tlg: 'var(--radius)',\n  \t\t\tmd: 'calc(var(--radius) - 2px)',\n  \t\t\tsm: 'calc(var(--radius) - 4px)'\n  \t\t},","metadata":{"source":"tailwind.config.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":38,"to":68}}}}],["6",{"pageContent":"File: tailwind.config.ts\n},\n  \t\tkeyframes: {\n  \t\t\t'accordion-down': {\n  \t\t\t\tfrom: {\n  \t\t\t\t\theight: '0'\n  \t\t\t\t},\n  \t\t\t\tto: {\n  \t\t\t\t\theight: 'var(--radix-accordion-content-height)'\n  \t\t\t\t}\n  \t\t\t},\n  \t\t\t'accordion-up': {\n  \t\t\t\tfrom: {\n  \t\t\t\t\theight: 'var(--radix-accordion-content-height)'\n  \t\t\t\t},\n  \t\t\t\tto: {\n  \t\t\t\t\theight: '0'\n  \t\t\t\t}\n  \t\t\t}\n  \t\t},\n  \t\tanimation: {\n  \t\t\t'accordion-down': 'accordion-down 0.2s ease-out',\n  \t\t\t'accordion-up': 'accordion-up 0.2s ease-out'\n  \t\t}\n  \t}\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config;","metadata":{"source":"tailwind.config.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":68,"to":94}}}}],["7",{"pageContent":"File: tsconfig.json\n{\n  \"compilerOptions\": {\n    \"target\": \"ES2017\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"],\n  \"exclude\": [\"node_modules\"]\n}","metadata":{"source":"tsconfig.json","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":27}}}}],["8",{"pageContent":"File: .idx/dev.nix\n# To learn more about how to use Nix to configure your environment\n# see: https://firebase.google.com/docs/studio/customize-workspace\n{pkgs}: {\n  # Which nixpkgs channel to use.\n  channel = \"stable-24.11\"; # or \"unstable\"\n  # Use https://search.nixos.org/packages to find packages\n  packages = [\n    pkgs.nodejs_20\n    pkgs.zulu\n  ];\n  # Sets environment variables in the workspace\n  env = {};\n  idx = {\n    # Search for the extensions you want on https://open-vsx.org/ and use \"publisher.id\"\n    extensions = [\n      # \"vscodevim.vim\"\n    ];\n    workspace = {\n      onCreate = {\n        default.openFiles = [\n          \"src/app/page.tsx\"\n        ];\n      };\n    };\n    # Enable previews and customize configuration\n    previews = {\n      enable = true;\n      previews = {\n        web = {\n          command = [\"npm\" \"run\" \"dev\" \"--\" \"--port\" \"$PORT\" \"--hostname\" \"0.0.0.0\"];\n          manager = \"web\";\n        };\n      };\n    };\n  };\n}","metadata":{"source":".idx/dev.nix","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":36}}}}],["9",{"pageContent":"File: .vscode/settings.json\n{\n    \"IDX.aI.enableInlineCompletion\": true,\n    \"IDX.aI.enableCodebaseIndexing\": true\n}","metadata":{"source":".vscode/settings.json","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":4}}}}],["10",{"pageContent":"File: docs/blueprint.md\n# **App Name**: ShipShape\n\n## Core Features:\n\n- Add Trailers: Add new trailers with unique IDs.\n- Manage Shipments: Create and manage shipment information for each trailer.\n- Assign Locations: Assign shipments to specific locations within the warehouse.\n- Visual Dashboard: Visually display the status and location of each trailer and shipment.\n\n## Style Guidelines:\n\n- Primary color: White (#FFFFFF) for a clean and organized feel.\n- Secondary color: Light gray (#F0F0F0) for backgrounds and subtle accents.\n- Accent: Teal (#008080) for interactive elements and key information highlights.\n- Clear and concise labels to show data\n- Use icons to visually represent different types of shipments, trailers, and locations.\n- Well-structured and intuitive user interface for easy navigation and data management.","metadata":{"source":"docs/blueprint.md","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":17}}}}],["11",{"pageContent":"File: src/ai/dev.ts\n// Flows will be imported for their side effects in this file.","metadata":{"source":"src/ai/dev.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":1}}}}],["12",{"pageContent":"File: src/ai/genkit.ts\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});","metadata":{"source":"src/ai/genkit.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":7}}}}],["13",{"pageContent":"File: src/hooks/use-mobile.tsx\nimport * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}","metadata":{"source":"src/hooks/use-mobile.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":19}}}}],["14",{"pageContent":"File: src/hooks/use-toast.ts\n\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes","metadata":{"source":"src/hooks/use-toast.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":35}}}}],["15",{"pageContent":"File: src/hooks/use-toast.ts\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}","metadata":{"source":"src/hooks/use-toast.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":35,"to":75}}}}],["16",{"pageContent":"File: src/hooks/use-toast.ts\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }","metadata":{"source":"src/hooks/use-toast.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":77,"to":104}}}}],["17",{"pageContent":"File: src/hooks/use-toast.ts\nreturn {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()","metadata":{"source":"src/hooks/use-toast.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":106,"to":146}}}}],["18",{"pageContent":"File: src/hooks/use-toast.ts\nconst update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }","metadata":{"source":"src/hooks/use-toast.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":148,"to":194}}}}],["19",{"pageContent":"File: src/lib/utils.ts\nimport { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}","metadata":{"source":"src/lib/utils.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":6}}}}],["20",{"pageContent":"File: src/components/icons/ShipShapeLogo.tsx\nimport type { SVGProps } from 'react';\n\nexport function ShipShapeLogo(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...props}\n    >\n      <path d=\"M5 18H3c-.6 0-1-.4-1-1V7c0-.6.4-1 1-1h10c.6 0 1 .4 1 1v11\" />\n      <path d=\"M14 9h7c.6 0 1 .4 1 1v9c0 .6-.4 1-1 1h-7c-.6 0-1-.4-1-1v-9c0-.6.4-1 1-1Z\" />\n      <path d=\"M10 6V5c0-.6-.4-1-1-1H6c-.6 0-1 .4-1 1v1\" />\n      <path d=\"M17 14h.01\" />\n      <path d=\"M17 17h.01\" />\n      <circle cx=\"7.5\" cy=\"18.5\" r=\".5\" fill=\"currentColor\" />\n      <circle cx=\"10.5\" cy=\"18.5\" r=\".5\" fill=\"currentColor\" />\n    </svg>\n  );\n}","metadata":{"source":"src/components/icons/ShipShapeLogo.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":24}}}}],["21",{"pageContent":"File: src/components/shared/ConfirmationDialog.tsx\n'use client';\n\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport { buttonVariants } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ConfirmationDialogProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  onConfirm: () => void;\n  title: string;\n  description: string;\n  confirmText?: string;\n  cancelText?: string;\n  confirmButtonVariant?: \"default\" | \"destructive\";\n}","metadata":{"source":"src/components/shared/ConfirmationDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":26}}}}],["22",{"pageContent":"File: src/components/shared/ConfirmationDialog.tsx\nexport default function ConfirmationDialog({\n  isOpen,\n  setIsOpen,\n  onConfirm,\n  title,\n  description,\n  confirmText = \"Confirm\",\n  cancelText = \"Cancel\",\n  confirmButtonVariant = \"default\",\n}: ConfirmationDialogProps) {\n  return (\n    <AlertDialog open={isOpen} onOpenChange={setIsOpen}>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>{title}</AlertDialogTitle>\n          <AlertDialogDescription>{description}</AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel onClick={() => setIsOpen(false)}>\n            {cancelText}\n          </AlertDialogCancel>\n          <AlertDialogAction\n            onClick={() => {\n              onConfirm();\n              setIsOpen(false);\n            }}\n            className={cn(\n              buttonVariants({ variant: confirmButtonVariant })\n            )}\n          >\n            {confirmText}\n          </AlertDialogAction>\n        </AlertDialogFooter>","metadata":{"source":"src/components/shared/ConfirmationDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":28,"to":60}}}}],["23",{"pageContent":"File: src/components/shared/ConfirmationDialog.tsx\n</AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}","metadata":{"source":"src/components/shared/ConfirmationDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":60,"to":64}}}}],["24",{"pageContent":"File: src/components/shipment/AttachDocumentDialog.tsx\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { FileUp } from 'lucide-react';\n\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ACCEPTED_FILE_TYPES = ['application/pdf', 'image/jpeg', 'image/png', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];","metadata":{"source":"src/components/shipment/AttachDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":20}}}}],["25",{"pageContent":"File: src/components/shipment/AttachDocumentDialog.tsx\nconst attachDocumentSchema = z.object({\n  document: z\n    .any()\n    .refine((files) => files?.[0], 'Document is required.')\n    .refine((files) => files?.[0]?.size <= MAX_FILE_SIZE, `Max file size is 5MB.`)\n    .refine(\n      (files) => ACCEPTED_FILE_TYPES.includes(files?.[0]?.type),\n      \".pdf, .jpg, .png, .doc, .docx files are accepted.\"\n    ),\n});\n\ntype AttachDocumentFormData = z.infer<typeof attachDocumentSchema>;\n\ninterface AttachDocumentDialogProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  shipmentId: string;\n  shipmentIdentifier: string; // Changed from shipmentContentDescription\n  documentType: 'release' | 'clearance';\n  onDocumentAttached: (shipmentId: string, documentType: 'release' | 'clearance', documentName: string) => void;\n}","metadata":{"source":"src/components/shipment/AttachDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":23,"to":43}}}}],["26",{"pageContent":"File: src/components/shipment/AttachDocumentDialog.tsx\nexport default function AttachDocumentDialog({\n  isOpen,\n  setIsOpen,\n  shipmentId,\n  shipmentIdentifier, // Changed from shipmentContentDescription\n  documentType,\n  onDocumentAttached,\n}: AttachDocumentDialogProps) {\n  const { toast } = useToast();\n  const { register, handleSubmit, reset, formState: { errors, isSubmitting } } = useForm<AttachDocumentFormData>({\n    resolver: zodResolver(attachDocumentSchema),\n  });\n\n  const onSubmit: SubmitHandler<AttachDocumentFormData> = (data) => {\n    const documentFile = data.document[0] as File;\n    onDocumentAttached(shipmentId, documentType, documentFile.name);\n    toast({\n      title: \"Document Attached!\",\n      description: `${documentFile.name} has been associated as the ${documentType} document for shipment \"${shipmentIdentifier}\".`,\n    });\n    reset();\n    setIsOpen(false);\n  };","metadata":{"source":"src/components/shipment/AttachDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":45,"to":67}}}}],["27",{"pageContent":"File: src/components/shipment/AttachDocumentDialog.tsx\nconst dialogTitle = documentType === 'release' ? 'Attach Release Document' : 'Attach Clearance Document';\n  const dialogDescription = `Upload the ${documentType} document for shipment: ${shipmentIdentifier}.`;","metadata":{"source":"src/components/shipment/AttachDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":69,"to":70}}}}],["28",{"pageContent":"File: src/components/shipment/AttachDocumentDialog.tsx\nreturn (\n    <Dialog open={isOpen} onOpenChange={(open) => { setIsOpen(open); if (!open) reset(); }}>\n      <DialogContent className=\"sm:max-w-[480px]\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center\">\n            <FileUp className=\"mr-2 h-5 w-5\" />\n            {dialogTitle}\n          </DialogTitle>\n          <DialogDescription>{dialogDescription}</DialogDescription>\n        </DialogHeader>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6 py-4\">\n          <div>\n            <Label htmlFor=\"documentFile\" className=\"text-sm font-medium\">\n              {documentType === 'release' ? 'Release Document File' : 'Clearance Document File'}\n            </Label>\n            <Input\n              id=\"documentFile\"\n              type=\"file\"\n              {...register('document')}\n              accept={ACCEPTED_FILE_TYPES.join(',')}","metadata":{"source":"src/components/shipment/AttachDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":72,"to":91}}}}],["29",{"pageContent":"File: src/components/shipment/AttachDocumentDialog.tsx\nclassName=\"mt-1 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"\n            />\n            {errors.document && <p className=\"mt-1 text-sm text-destructive\">{(errors.document as any)?.message}</p>}\n             <p className=\"mt-1 text-xs text-muted-foreground\">Max file size: 5MB. Accepted types: PDF, JPG, PNG, DOC, DOCX.</p>\n          </div>\n          <DialogFooter className=\"pt-4\">\n            <Button type=\"button\" variant=\"outline\" onClick={() => { setIsOpen(false); reset(); }}>Cancel</Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Attaching...' : `Attach ${documentType === 'release' ? 'Release' : 'Clearance'} Doc`}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}","metadata":{"source":"src/components/shipment/AttachDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":92,"to":107}}}}],["30",{"pageContent":"File: src/components/ui/accordion.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"","metadata":{"source":"src/components/ui/accordion.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":21}}}}],["31",{"pageContent":"File: src/components/ui/accordion.tsx\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName","metadata":{"source":"src/components/ui/accordion.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":23,"to":41}}}}],["32",{"pageContent":"File: src/components/ui/accordion.tsx\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }","metadata":{"source":"src/components/ui/accordion.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":43,"to":58}}}}],["33",{"pageContent":"File: src/components/ui/alert-dialog.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName","metadata":{"source":"src/components/ui/alert-dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":28}}}}],["34",{"pageContent":"File: src/components/ui/alert-dialog.tsx\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))","metadata":{"source":"src/components/ui/alert-dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":30,"to":45}}}}],["35",{"pageContent":"File: src/components/ui/alert-dialog.tsx\n/>\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName","metadata":{"source":"src/components/ui/alert-dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":43,"to":46}}}}],["36",{"pageContent":"File: src/components/ui/alert-dialog.tsx\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName","metadata":{"source":"src/components/ui/alert-dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":48,"to":86}}}}],["37",{"pageContent":"File: src/components/ui/alert-dialog.tsx\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName","metadata":{"source":"src/components/ui/alert-dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":88,"to":111}}}}],["38",{"pageContent":"File: src/components/ui/alert-dialog.tsx\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}","metadata":{"source":"src/components/ui/alert-dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":113,"to":141}}}}],["39",{"pageContent":"File: src/components/ui/alert.tsx\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"","metadata":{"source":"src/components/ui/alert.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":33}}}}],["40",{"pageContent":"File: src/components/ui/alert.tsx\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }","metadata":{"source":"src/components/ui/alert.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":35,"to":59}}}}],["41",{"pageContent":"File: src/components/ui/avatar.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName","metadata":{"source":"src/components/ui/avatar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":33}}}}],["42",{"pageContent":"File: src/components/ui/avatar.tsx\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }","metadata":{"source":"src/components/ui/avatar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":35,"to":50}}}}],["43",{"pageContent":"File: src/components/ui/badge.tsx\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}","metadata":{"source":"src/components/ui/badge.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":28}}}}],["44",{"pageContent":"File: src/components/ui/badge.tsx\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }","metadata":{"source":"src/components/ui/badge.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":30,"to":36}}}}],["45",{"pageContent":"File: src/components/ui/button.tsx\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"","metadata":{"source":"src/components/ui/button.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":5}}}}],["46",{"pageContent":"File: src/components/ui/button.tsx\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",","metadata":{"source":"src/components/ui/button.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":7,"to":23}}}}],["47",{"pageContent":"File: src/components/ui/button.tsx\ndefault: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)","metadata":{"source":"src/components/ui/button.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":23,"to":34}}}}],["48",{"pageContent":"File: src/components/ui/button.tsx\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }","metadata":{"source":"src/components/ui/button.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":36,"to":56}}}}],["49",{"pageContent":"File: src/components/ui/calendar.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>","metadata":{"source":"src/components/ui/calendar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":10}}}}],["50",{"pageContent":"File: src/components/ui/calendar.tsx\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",","metadata":{"source":"src/components/ui/calendar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":12,"to":38}}}}],["51",{"pageContent":"File: src/components/ui/calendar.tsx\nrow: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:","metadata":{"source":"src/components/ui/calendar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":38,"to":51}}}}],["52",{"pageContent":"File: src/components/ui/calendar.tsx\nday_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"","metadata":{"source":"src/components/ui/calendar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":51,"to":68}}}}],["53",{"pageContent":"File: src/components/ui/calendar.tsx\nexport { Calendar }","metadata":{"source":"src/components/ui/calendar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":70,"to":70}}}}],["54",{"pageContent":"File: src/components/ui/card.tsx\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"","metadata":{"source":"src/components/ui/card.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":45}}}}],["55",{"pageContent":"File: src/components/ui/card.tsx\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }","metadata":{"source":"src/components/ui/card.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":47,"to":79}}}}],["56",{"pageContent":"File: src/components/ui/chart.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":35}}}}],["57",{"pageContent":"File: src/components/ui/chart.tsx\nreturn context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":34,"to":47}}}}],["58",{"pageContent":"File: src/components/ui/chart.tsx\nreturn (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":49,"to":62}}}}],["59",{"pageContent":"File: src/components/ui/chart.tsx\n{children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":62,"to":68}}}}],["60",{"pageContent":"File: src/components/ui/chart.tsx\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":70,"to":103}}}}],["61",{"pageContent":"File: src/components/ui/chart.tsx\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":105,"to":139}}}}],["62",{"pageContent":"File: src/components/ui/chart.tsx\nconst [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":141,"to":176}}}}],["63",{"pageContent":"File: src/components/ui/chart.tsx\nreturn (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":178,"to":191}}}}],["64",{"pageContent":"File: src/components/ui/chart.tsx\nreturn (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":193,"to":214}}}}],["65",{"pageContent":"File: src/components/ui/chart.tsx\n\"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":215,"to":236}}}}],["66",{"pageContent":"File: src/components/ui/chart.tsx\n<span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":237,"to":257}}}}],["67",{"pageContent":"File: src/components/ui/chart.tsx\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":259,"to":290}}}}],["68",{"pageContent":"File: src/components/ui/chart.tsx\nreturn (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":292,"to":327}}}}],["69",{"pageContent":"File: src/components/ui/chart.tsx\nconst payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}","metadata":{"source":"src/components/ui/chart.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":329,"to":365}}}}],["70",{"pageContent":"File: src/components/ui/checkbox.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"","metadata":{"source":"src/components/ui/checkbox.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":7}}}}],["71",{"pageContent":"File: src/components/ui/checkbox.tsx\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }","metadata":{"source":"src/components/ui/checkbox.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":7,"to":30}}}}],["72",{"pageContent":"File: src/components/ui/dialog.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName","metadata":{"source":"src/components/ui/dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":30}}}}],["73",{"pageContent":"File: src/components/ui/dialog.tsx\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}","metadata":{"source":"src/components/ui/dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":32,"to":46}}}}],["74",{"pageContent":"File: src/components/ui/dialog.tsx\n{...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName","metadata":{"source":"src/components/ui/dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":44,"to":54}}}}],["75",{"pageContent":"File: src/components/ui/dialog.tsx\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName","metadata":{"source":"src/components/ui/dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":56,"to":97}}}}],["76",{"pageContent":"File: src/components/ui/dialog.tsx\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}","metadata":{"source":"src/components/ui/dialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":99,"to":122}}}}],["77",{"pageContent":"File: src/components/ui/dropdown-menu.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup","metadata":{"source":"src/components/ui/dropdown-menu.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":19}}}}],["78",{"pageContent":"File: src/components/ui/dropdown-menu.tsx\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName","metadata":{"source":"src/components/ui/dropdown-menu.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":21,"to":41}}}}],["79",{"pageContent":"File: src/components/ui/dropdown-menu.tsx\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName","metadata":{"source":"src/components/ui/dropdown-menu.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":43,"to":57}}}}],["80",{"pageContent":"File: src/components/ui/dropdown-menu.tsx\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName","metadata":{"source":"src/components/ui/dropdown-menu.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":59,"to":75}}}}],["81",{"pageContent":"File: src/components/ui/dropdown-menu.tsx\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName","metadata":{"source":"src/components/ui/dropdown-menu.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":77,"to":93}}}}],["82",{"pageContent":"File: src/components/ui/dropdown-menu.tsx\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName","metadata":{"source":"src/components/ui/dropdown-menu.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":95,"to":117}}}}],["83",{"pageContent":"File: src/components/ui/dropdown-menu.tsx\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName","metadata":{"source":"src/components/ui/dropdown-menu.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":119,"to":139}}}}],["84",{"pageContent":"File: src/components/ui/dropdown-menu.tsx\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName","metadata":{"source":"src/components/ui/dropdown-menu.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":141,"to":169}}}}],["85",{"pageContent":"File: src/components/ui/dropdown-menu.tsx\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}","metadata":{"source":"src/components/ui/dropdown-menu.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":171,"to":200}}}}],["86",{"pageContent":"File: src/components/ui/form.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)","metadata":{"source":"src/components/ui/form.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":29}}}}],["87",{"pageContent":"File: src/components/ui/form.tsx\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}","metadata":{"source":"src/components/ui/form.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":31,"to":69}}}}],["88",{"pageContent":"File: src/components/ui/form.tsx\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"","metadata":{"source":"src/components/ui/form.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":71,"to":104}}}}],["89",{"pageContent":"File: src/components/ui/form.tsx\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"","metadata":{"source":"src/components/ui/form.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":106,"to":143}}}}],["90",{"pageContent":"File: src/components/ui/form.tsx\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}","metadata":{"source":"src/components/ui/form.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":145,"to":178}}}}],["91",{"pageContent":"File: src/components/ui/input.tsx\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }","metadata":{"source":"src/components/ui/input.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":22}}}}],["92",{"pageContent":"File: src/components/ui/label.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }","metadata":{"source":"src/components/ui/label.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":26}}}}],["93",{"pageContent":"File: src/components/ui/menubar.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":37}}}}],["94",{"pageContent":"File: src/components/ui/menubar.tsx\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":39,"to":52}}}}],["95",{"pageContent":"File: src/components/ui/menubar.tsx\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":54,"to":67}}}}],["96",{"pageContent":"File: src/components/ui/menubar.tsx\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":69,"to":88}}}}],["97",{"pageContent":"File: src/components/ui/menubar.tsx\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":90,"to":103}}}}],["98",{"pageContent":"File: src/components/ui/menubar.tsx\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":105,"to":127}}}}],["99",{"pageContent":"File: src/components/ui/menubar.tsx\n</MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":125,"to":128}}}}],["100",{"pageContent":"File: src/components/ui/menubar.tsx\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":130,"to":146}}}}],["101",{"pageContent":"File: src/components/ui/menubar.tsx\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":148,"to":169}}}}],["102",{"pageContent":"File: src/components/ui/menubar.tsx\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":171,"to":191}}}}],["103",{"pageContent":"File: src/components/ui/menubar.tsx\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":193,"to":221}}}}],["104",{"pageContent":"File: src/components/ui/menubar.tsx\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}","metadata":{"source":"src/components/ui/menubar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":223,"to":256}}}}],["105",{"pageContent":"File: src/components/ui/popover.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger","metadata":{"source":"src/components/ui/popover.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":10}}}}],["106",{"pageContent":"File: src/components/ui/popover.tsx\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName","metadata":{"source":"src/components/ui/popover.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":12,"to":29}}}}],["107",{"pageContent":"File: src/components/ui/popover.tsx\nexport { Popover, PopoverTrigger, PopoverContent }","metadata":{"source":"src/components/ui/popover.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":31,"to":31}}}}],["108",{"pageContent":"File: src/components/ui/progress.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }","metadata":{"source":"src/components/ui/progress.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":28}}}}],["109",{"pageContent":"File: src/components/ui/radio-group.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName","metadata":{"source":"src/components/ui/radio-group.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":21}}}}],["110",{"pageContent":"File: src/components/ui/radio-group.tsx\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }","metadata":{"source":"src/components/ui/radio-group.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":23,"to":44}}}}],["111",{"pageContent":"File: src/components/ui/scroll-area.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName","metadata":{"source":"src/components/ui/scroll-area.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":24}}}}],["112",{"pageContent":"File: src/components/ui/scroll-area.tsx\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }","metadata":{"source":"src/components/ui/scroll-area.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":26,"to":48}}}}],["113",{"pageContent":"File: src/components/ui/select.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value","metadata":{"source":"src/components/ui/select.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":13}}}}],["114",{"pageContent":"File: src/components/ui/select.tsx\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName","metadata":{"source":"src/components/ui/select.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":15,"to":33}}}}],["115",{"pageContent":"File: src/components/ui/select.tsx\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName","metadata":{"source":"src/components/ui/select.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":35,"to":50}}}}],["116",{"pageContent":"File: src/components/ui/select.tsx\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName","metadata":{"source":"src/components/ui/select.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":52,"to":68}}}}],["117",{"pageContent":"File: src/components/ui/select.tsx\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}","metadata":{"source":"src/components/ui/select.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":70,"to":82}}}}],["118",{"pageContent":"File: src/components/ui/select.tsx\nclassName\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName","metadata":{"source":"src/components/ui/select.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":81,"to":100}}}}],["119",{"pageContent":"File: src/components/ui/select.tsx\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName","metadata":{"source":"src/components/ui/select.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":102,"to":112}}}}],["120",{"pageContent":"File: src/components/ui/select.tsx\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName","metadata":{"source":"src/components/ui/select.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":114,"to":135}}}}],["121",{"pageContent":"File: src/components/ui/select.tsx\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}","metadata":{"source":"src/components/ui/select.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":137,"to":160}}}}],["122",{"pageContent":"File: src/components/ui/separator.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }","metadata":{"source":"src/components/ui/separator.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":31}}}}],["123",{"pageContent":"File: src/components/ui/sheet.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName","metadata":{"source":"src/components/ui/sheet.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":31}}}}],["124",{"pageContent":"File: src/components/ui/sheet.tsx\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)","metadata":{"source":"src/components/ui/sheet.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":33,"to":50}}}}],["125",{"pageContent":"File: src/components/ui/sheet.tsx\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName","metadata":{"source":"src/components/ui/sheet.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":52,"to":75}}}}],["126",{"pageContent":"File: src/components/ui/sheet.tsx\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName","metadata":{"source":"src/components/ui/sheet.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":77,"to":115}}}}],["127",{"pageContent":"File: src/components/ui/sheet.tsx\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}","metadata":{"source":"src/components/ui/sheet.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":117,"to":140}}}}],["128",{"pageContent":"File: src/components/ui/sidebar.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":27}}}}],["129",{"pageContent":"File: src/components/ui/sidebar.tsx\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":29,"to":71}}}}],["130",{"pageContent":"File: src/components/ui/sidebar.tsx\n// This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":73,"to":97}}}}],["131",{"pageContent":"File: src/components/ui/sidebar.tsx\n// Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":99,"to":130}}}}],["132",{"pageContent":"File: src/components/ui/sidebar.tsx\nreturn (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":132,"to":157}}}}],["133",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":159,"to":193}}}}],["134",{"pageContent":"File: src/components/ui/sidebar.tsx\nif (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":195,"to":213}}}}],["135",{"pageContent":"File: src/components/ui/sidebar.tsx\nreturn (\n      <div\n        ref={ref}\n        className=\"group peer hidden md:block text-sidebar-foreground\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":215,"to":236}}}}],["136",{"pageContent":"File: src/components/ui/sidebar.tsx\n<div\n          className={cn(\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":235,"to":250}}}}],["137",{"pageContent":"File: src/components/ui/sidebar.tsx\ndata-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":250,"to":260}}}}],["138",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":262,"to":292}}}}],["139",{"pageContent":"File: src/components/ui/sidebar.tsx\nreturn (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":294,"to":310}}}}],["140",{"pageContent":"File: src/components/ui/sidebar.tsx\nclassName\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":309,"to":315}}}}],["141",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":317,"to":333}}}}],["142",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":335,"to":366}}}}],["143",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":368,"to":396}}}}],["144",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":398,"to":435}}}}],["145",{"pageContent":"File: src/components/ui/sidebar.tsx\nreturn (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":437,"to":456}}}}],["146",{"pageContent":"File: src/components/ui/sidebar.tsx\nreturn (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":458,"to":486}}}}],["147",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":488,"to":512}}}}],["148",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":514,"to":520}}}}],["149",{"pageContent":"File: src/components/ui/sidebar.tsx\noutline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":520,"to":534}}}}],["150",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":536,"to":578}}}}],["151",{"pageContent":"File: src/components/ui/sidebar.tsx\nreturn (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":580,"to":602}}}}],["152",{"pageContent":"File: src/components/ui/sidebar.tsx\nreturn (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":604,"to":618}}}}],["153",{"pageContent":"File: src/components/ui/sidebar.tsx\nclassName\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":618,"to":624}}}}],["154",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":626,"to":645}}}}],["155",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":647,"to":683}}}}],["156",{"pageContent":"File: src/components/ui/sidebar.tsx\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":685,"to":716}}}}],["157",{"pageContent":"File: src/components/ui/sidebar.tsx\nreturn (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":718,"to":736}}}}],["158",{"pageContent":"File: src/components/ui/sidebar.tsx\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}","metadata":{"source":"src/components/ui/sidebar.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":738,"to":763}}}}],["159",{"pageContent":"File: src/components/ui/skeleton.tsx\nimport { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }","metadata":{"source":"src/components/ui/skeleton.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":15}}}}],["160",{"pageContent":"File: src/components/ui/slider.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"","metadata":{"source":"src/components/ui/slider.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":6}}}}],["161",{"pageContent":"File: src/components/ui/slider.tsx\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }","metadata":{"source":"src/components/ui/slider.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":6,"to":28}}}}],["162",{"pageContent":"File: src/components/ui/switch.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"","metadata":{"source":"src/components/ui/switch.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":6}}}}],["163",{"pageContent":"File: src/components/ui/switch.tsx\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName","metadata":{"source":"src/components/ui/switch.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":8,"to":27}}}}],["164",{"pageContent":"File: src/components/ui/switch.tsx\nexport { Switch }","metadata":{"source":"src/components/ui/switch.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":29,"to":29}}}}],["165",{"pageContent":"File: src/components/ui/table.tsx\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"","metadata":{"source":"src/components/ui/table.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":37}}}}],["166",{"pageContent":"File: src/components/ui/table.tsx\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"","metadata":{"source":"src/components/ui/table.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":39,"to":67}}}}],["167",{"pageContent":"File: src/components/ui/table.tsx\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"","metadata":{"source":"src/components/ui/table.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":69,"to":106}}}}],["168",{"pageContent":"File: src/components/ui/table.tsx\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}","metadata":{"source":"src/components/ui/table.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":108,"to":117}}}}],["169",{"pageContent":"File: src/components/ui/tabs.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName","metadata":{"source":"src/components/ui/tabs.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":23}}}}],["170",{"pageContent":"File: src/components/ui/tabs.tsx\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName","metadata":{"source":"src/components/ui/tabs.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":25,"to":38}}}}],["171",{"pageContent":"File: src/components/ui/tabs.tsx\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }","metadata":{"source":"src/components/ui/tabs.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":40,"to":55}}}}],["172",{"pageContent":"File: src/components/ui/textarea.tsx\nimport * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};","metadata":{"source":"src/components/ui/textarea.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":21}}}}],["173",{"pageContent":"File: src/components/ui/toast.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName","metadata":{"source":"src/components/ui/toast.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":25}}}}],["174",{"pageContent":"File: src/components/ui/toast.tsx\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)","metadata":{"source":"src/components/ui/toast.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":27,"to":41}}}}],["175",{"pageContent":"File: src/components/ui/toast.tsx\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName","metadata":{"source":"src/components/ui/toast.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":43,"to":56}}}}],["176",{"pageContent":"File: src/components/ui/toast.tsx\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName","metadata":{"source":"src/components/ui/toast.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":58,"to":71}}}}],["177",{"pageContent":"File: src/components/ui/toast.tsx\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName","metadata":{"source":"src/components/ui/toast.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":73,"to":89}}}}],["178",{"pageContent":"File: src/components/ui/toast.tsx\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>","metadata":{"source":"src/components/ui/toast.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":91,"to":117}}}}],["179",{"pageContent":"File: src/components/ui/toast.tsx\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}","metadata":{"source":"src/components/ui/toast.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":119,"to":129}}}}],["180",{"pageContent":"File: src/components/ui/toaster.tsx\n\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}","metadata":{"source":"src/components/ui/toaster.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":35}}}}],["181",{"pageContent":"File: src/components/ui/tooltip.tsx\n\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger","metadata":{"source":"src/components/ui/tooltip.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":12}}}}],["182",{"pageContent":"File: src/components/ui/tooltip.tsx\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }","metadata":{"source":"src/components/ui/tooltip.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":14,"to":30}}}}],["183",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\nimport { useState, useEffect } from 'react';\nimport { useForm, type SubmitHandler, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { TrailerStatus, TrailerFormData as ExternalTrailerFormData } from '@/types';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { CalendarIcon, Weight, Tag } from \"lucide-react\";\nimport { format } from \"date-fns\";\nimport { cn } from \"@/lib/utils\";","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":23}}}}],["184",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\nimport { cn } from \"@/lib/utils\";\nimport { useToast } from '@/hooks/use-toast';","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":23,"to":24}}}}],["185",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\n// Internal form data type to handle Date objects from picker and new custom fields\ntype TrailerFormData = Omit<ExternalTrailerFormData, 'arrivalDate' | 'storageExpiryDate' | 'weight' | 'customField1' | 'customField2'> & {\n  arrivalDate?: Date | null;\n  storageExpiryDate?: Date | null;\n  weight?: number | null;\n  customField1?: string;\n  customField2?: string;\n};\n\nconst allStatuses: TrailerStatus[] = ['Scheduled', 'Arrived', 'Loading', 'Offloading', 'Devanned'];","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":26,"to":35}}}}],["186",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\nconst trailerSchema = z.object({\n  id: z.string().min(1, 'Trailer ID is required').max(20, 'Trailer ID too long'),\n  name: z.string().min(1, 'Trailer Name is required').max(50, 'Trailer Name too long'),\n  company: z.string().max(50, 'Company name too long').optional(),\n  status: z.enum(allStatuses as [TrailerStatus, ...TrailerStatus[]]).default('Scheduled'),\n  arrivalDate: z.date().nullable().optional(),\n  storageExpiryDate: z.date().nullable().optional(),\n  weight: z.coerce.number().positive('Weight must be a positive number').optional().nullable(),\n  customField1: z.string().max(50, 'T1.1 value too long').optional(),\n  customField2: z.string().max(50, 'T1.2 value too long').optional(),\n}).refine(data => {\n  if (data.arrivalDate && data.storageExpiryDate && data.storageExpiryDate < data.arrivalDate) {\n    return false;\n  }\n  return true;\n}, {\n  message: \"Storage expiry date cannot be before arrival date.\",\n  path: [\"storageExpiryDate\"],\n});","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":37,"to":55}}}}],["187",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\ninterface AddTrailerDialogProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n}\n\n\nexport default function AddTrailerDialog({ isOpen, setIsOpen }: AddTrailerDialogProps) {\n  const { addTrailer, trailers } = useWarehouse();\n  const { toast } = useToast();\n  const { register, handleSubmit, reset, formState: { errors, isSubmitting }, setValue, watch, control } = useForm<TrailerFormData>({\n    resolver: zodResolver(trailerSchema),\n    defaultValues: {\n      status: 'Scheduled', \n      company: '',\n      arrivalDate: null,\n      storageExpiryDate: null,\n      weight: null,\n      customField1: '',\n      customField2: '',\n    }\n  });\n  \n  useEffect(() => {\n    register('status');\n  }, [register]);\n\n  const selectedStatus = watch('status');","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":58,"to":84}}}}],["188",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\nconst onSubmit: SubmitHandler<TrailerFormData> = (data) => {\n    if (trailers.some(t => t.id === data.id)) {\n      toast({\n        title: \"Error\",\n        description: \"Trailer ID already exists. Please use a unique ID.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    addTrailer({\n      id: data.id,\n      name: data.name,\n      company: data.company,\n      status: data.status,\n      arrivalDate: data.arrivalDate ? data.arrivalDate.toISOString() : undefined,\n      storageExpiryDate: data.storageExpiryDate ? data.storageExpiryDate.toISOString() : undefined,\n      weight: data.weight ?? undefined,\n      customField1: data.customField1 || undefined,\n      customField2: data.customField2 || undefined,\n    });\n    toast({\n      title: \"Success!\",\n      description: `Trailer \"${data.name}\" (ID: ${data.id}) added.`,\n    });\n    reset();\n    setIsOpen(false);\n  };","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":86,"to":112}}}}],["189",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\nreturn (\n    <Dialog open={isOpen} onOpenChange={(open) => { setIsOpen(open); if (!open) reset(); }}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Add New Trailer</DialogTitle>\n          <DialogDescription>\n            Enter the details for the new trailer. Trailer ID must be unique.\n          </DialogDescription>\n        </DialogHeader>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4 py-4 max-h-[70vh] overflow-y-auto pr-2\">\n          <div>\n            <Label htmlFor=\"id\">Trailer ID</Label>\n            <Input id=\"id\" {...register('id')} placeholder=\"e.g., T-101\" />\n            {errors.id && <p className=\"text-sm text-destructive mt-1\">{errors.id.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"name\">Trailer Name</Label>\n            <Input id=\"name\" {...register('name')} placeholder=\"e.g., Main Hauler\" />","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":114,"to":131}}}}],["190",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\n{errors.name && <p className=\"text-sm text-destructive mt-1\">{errors.name.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"company\">Company (Optional)</Label>\n            <Input id=\"company\" {...register('company')} placeholder=\"e.g., Logistics Inc.\" />\n            {errors.company && <p className=\"text-sm text-destructive mt-1\">{errors.company.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"weight\" className=\"flex items-center\">\n              <Weight className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Weight (kg) (Optional)\n            </Label>\n            <Input id=\"weight\" type=\"number\" step=\"any\" {...register('weight')} placeholder=\"e.g., 3500\" />\n            {errors.weight && <p className=\"text-sm text-destructive mt-1\">{errors.weight.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"customField1\" className=\"flex items-center\">","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":132,"to":147}}}}],["191",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\n<Tag className=\"mr-2 h-4 w-4 text-muted-foreground\" /> T1.1 (Optional)\n            </Label>\n            <Input id=\"customField1\" {...register('customField1')} placeholder=\"Value for T1.1\" />\n            {errors.customField1 && <p className=\"text-sm text-destructive mt-1\">{errors.customField1.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"customField2\" className=\"flex items-center\">\n              <Tag className=\"mr-2 h-4 w-4 text-muted-foreground\" /> T1.2 (Optional)\n            </Label>\n            <Input id=\"customField2\" {...register('customField2')} placeholder=\"Value for T1.2\" />\n            {errors.customField2 && <p className=\"text-sm text-destructive mt-1\">{errors.customField2.message}</p>}\n          </div>\n           <div>\n            <Label htmlFor=\"status\">Initial Status</Label>\n            <Select \n              value={selectedStatus}","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":148,"to":163}}}}],["192",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\nvalue={selectedStatus} \n              onValueChange={(value) => setValue('status', value as TrailerStatus, { shouldValidate: true })}\n            >\n              <SelectTrigger id=\"status\">\n                <SelectValue placeholder=\"Select status\" />\n              </SelectTrigger>\n              <SelectContent>\n                {allStatuses.map(status => (\n                  <SelectItem key={status} value={status}>{status}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            {errors.status && <p className=\"text-sm text-destructive mt-1\">{errors.status.message}</p>}\n          </div>","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":163,"to":176}}}}],["193",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\n<div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"arrivalDate\">Arrival Date (Optional)</Label>\n              <Controller\n                name=\"arrivalDate\"\n                control={control}\n                render={({ field }) => (\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant={\"outline\"}\n                        className={cn(\n                          \"w-full justify-start text-left font-normal\",\n                          !field.value && \"text-muted-foreground\"\n                        )}\n                      >\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {field.value ? format(field.value, \"PPP\") : <span>Pick a date</span>}\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\">\n                      <Calendar","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":178,"to":199}}}}],["194",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\n<Calendar\n                        mode=\"single\"\n                        selected={field.value || undefined}\n                        onSelect={(date) => field.onChange(date || null)}\n                        initialFocus\n                      />\n                    </PopoverContent>\n                  </Popover>\n                )}\n              />\n              {errors.arrivalDate && <p className=\"text-sm text-destructive mt-1\">{errors.arrivalDate.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"storageExpiryDate\">Storage Expiry Date (Optional)</Label>\n               <Controller\n                name=\"storageExpiryDate\"\n                control={control}\n                render={({ field }) => (\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant={\"outline\"}\n                        className={cn(","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":199,"to":221}}}}],["195",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\nclassName={cn(\n                          \"w-full justify-start text-left font-normal\",\n                          !field.value && \"text-muted-foreground\"\n                        )}\n                      >\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {field.value ? format(field.value, \"PPP\") : <span>Pick a date</span>}\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={field.value || undefined}\n                        onSelect={(date) => field.onChange(date || null)}\n                        disabled={(date) =>\n                          watch(\"arrivalDate\") ? date < watch(\"arrivalDate\")! : false\n                        }\n                        initialFocus\n                      />\n                    </PopoverContent>","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":221,"to":240}}}}],["196",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\n</PopoverContent>\n                  </Popover>\n                )}\n              />\n              {errors.storageExpiryDate && <p className=\"text-sm text-destructive mt-1\">{errors.storageExpiryDate.message}</p>}\n            </div>\n          </div>","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":240,"to":246}}}}],["197",{"pageContent":"File: src/components/trailer/AddTrailerDialog.tsx\n<DialogFooter>\n            <Button type=\"button\" variant=\"outline\" onClick={() => { setIsOpen(false); reset(); }}>Cancel</Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Adding...' : 'Add Trailer'}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}","metadata":{"source":"src/components/trailer/AddTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":249,"to":259}}}}],["198",{"pageContent":"File: src/hooks/useLocalStorageState.ts\nimport { useState, useEffect, useCallback } from 'react';\n\nfunction useLocalStorageState<T>(key: string, defaultValue: T): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [state, setState] = useState<T>(() => {\n    if (typeof window === 'undefined') {\n      return defaultValue;\n    }\n    try {\n      const storedValue = window.localStorage.getItem(key);\n      if (storedValue === null) { // Key not found\n        return defaultValue;\n      }\n      // Attempt to parse, will fall back to defaultValue on error via outer catch\n      return JSON.parse(storedValue);\n    } catch (error) {\n      console.error(`Error reading/parsing localStorage key \"${key}\":`, error);\n      return defaultValue;\n    }\n  });","metadata":{"source":"src/hooks/useLocalStorageState.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":20}}}}],["199",{"pageContent":"File: src/hooks/useLocalStorageState.ts\n// Effect to update localStorage when state changes\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      try {\n        // If state is undefined, store \"null\" to avoid storing the string \"undefined\"\n        // JSON.stringify(undefined) is undefined, localStorage.setItem(key, undefined) stores \"undefined\"\n        if (state === undefined) {\n          window.localStorage.setItem(key, JSON.stringify(null));\n        } else {\n          window.localStorage.setItem(key, JSON.stringify(state));\n        }\n      } catch (error) {\n        console.error(`Error setting localStorage key \"${key}\":`, error);\n      }\n    }\n  }, [key, state]);\n\n  // Effect to listen for storage changes from other tabs/windows\n  useEffect(() => {\n    if (typeof window === 'undefined') {\n      return;\n    }","metadata":{"source":"src/hooks/useLocalStorageState.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":22,"to":43}}}}],["200",{"pageContent":"File: src/hooks/useLocalStorageState.ts\nconst handleStorageChange = (event: StorageEvent) => {\n      if (event.key === key && event.storageArea === window.localStorage) {\n        if (event.newValue) {\n          try {\n            setState(JSON.parse(event.newValue));\n          } catch (error) {\n            console.error(`Error parsing stored value on storage event for key \"${key}\":`, error);\n            // Optionally revert to defaultValue or handle error appropriately\n            // setState(defaultValue); \n          }\n        } else {\n          // Value was removed or set to null in another tab\n          setState(defaultValue);\n        }\n      }\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [key, defaultValue]); // Include defaultValue in dependencies for correctness if it could change\n\n  return [state, setState];\n}\n\nexport default useLocalStorageState;","metadata":{"source":"src/hooks/useLocalStorageState.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":45,"to":72}}}}],["201",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\nimport { useEffect, useRef, useState } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { Camera, AlertTriangle, MapPin, XIcon, PlusCircle, Box } from 'lucide-react';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport type { Shipment, LocationInfo } from '@/types';\nimport { useWarehouse } from '@/contexts/WarehouseContext';","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":22}}}}],["202",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\nconst newLocationSchema = z.object({\n  newLocationName: z.string().min(1, 'Location name cannot be empty').max(30, 'Location name too long'),\n  newLocationPallets: z.coerce.number().int('Plt spaces must be a whole number.').min(0, 'Plt spaces cannot be negative.').optional().nullable(),\n});\ntype NewLocationFormData = z.infer<typeof newLocationSchema>;\n\ninterface ManageLocationsDialogProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  shipmentToManage: Shipment;\n}","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":24,"to":34}}}}],["203",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\nexport default function ManageLocationsDialog({\n  isOpen,\n  setIsOpen,\n  shipmentToManage,\n}: ManageLocationsDialogProps) {\n  const { updateShipment } = useWarehouse();\n  const { toast } = useToast();\n  \n  const { register, handleSubmit: handleNewLocationSubmit, reset: resetNewLocationForm, setValue: setNewLocationValue, formState: { errors: newLocationErrors } } = useForm<NewLocationFormData>({\n    resolver: zodResolver(newLocationSchema),\n    defaultValues: {\n      newLocationName: \"\",\n      newLocationPallets: null,\n    }\n  });\n\n  const [currentEditedLocations, setCurrentEditedLocations] = useState<LocationInfo[]>([]);\n  \n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isScanning, setIsScanning] = useState(false);\n  const [hasCameraPermission, setHasCameraPermission] = useState<boolean | null>(null);\n  const [activeStream, setActiveStream] = useState<MediaStream | null>(null);","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":36,"to":57}}}}],["204",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\nuseEffect(() => {\n    if (isOpen && shipmentToManage) {\n      const initialLocations = shipmentToManage.locations || [{ name: 'Pending Assignment' }];\n      if (initialLocations.length > 1 && initialLocations.some(loc => loc.name === 'Pending Assignment')) {\n        setCurrentEditedLocations(initialLocations.filter(loc => loc.name !== 'Pending Assignment'));\n      } else {\n        setCurrentEditedLocations(initialLocations);\n      }\n      resetNewLocationForm({ newLocationName: \"\", newLocationPallets: null });\n    } else {\n      setIsScanning(false); \n      setHasCameraPermission(null); \n    }\n  }, [isOpen, shipmentToManage, resetNewLocationForm]);","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":59,"to":72}}}}],["205",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\nuseEffect(() => {\n    if (isScanning) {\n      const getCameraPermission = async () => {\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n          console.error('getUserMedia not supported');\n          toast({\n            variant: 'destructive',\n            title: 'Camera Error',\n            description: 'Your browser does not support camera access. Please ensure you are using a secure (HTTPS) connection.',\n          });\n          setHasCameraPermission(false);\n          setIsScanning(false);\n          return;\n        }\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n          setActiveStream(stream);\n          setHasCameraPermission(true);\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        } catch (error) {\n          console.error('Error accessing camera:', error);\n          setHasCameraPermission(false);\n          toast({","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":74,"to":98}}}}],["206",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\ntoast({\n            variant: 'destructive',\n            title: 'Camera Access Denied',\n            description: 'Please enable camera permissions in your browser settings.',\n          });\n        }\n      };\n      getCameraPermission();\n    } else {\n      if (activeStream) {\n        activeStream.getTracks().forEach(track => track.stop());\n        setActiveStream(null);\n        if (videoRef.current) {\n          videoRef.current.srcObject = null;\n        }\n      }\n    }\n    return () => { \n      if (activeStream) {\n        activeStream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [isScanning, toast, activeStream]);","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":98,"to":120}}}}],["207",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\nconst handleAddLocationToList = (data: NewLocationFormData) => {\n    const nameToAdd = data.newLocationName.trim();\n    const pallets = data.newLocationPallets ?? undefined;\n\n    if (nameToAdd && !currentEditedLocations.some(loc => loc.name === nameToAdd)) {\n      let newLocationsList = [...currentEditedLocations];\n      if (newLocationsList.length === 1 && newLocationsList[0].name === 'Pending Assignment') {\n        newLocationsList = [];\n      }\n      newLocationsList.push({ name: nameToAdd, pallets });\n      setCurrentEditedLocations(newLocationsList);\n    }\n    resetNewLocationForm({ newLocationName: \"\", newLocationPallets: null });\n  };\n\n  const handleRemoveLocationFromList = (locationNameToRemove: string) => {\n    setCurrentEditedLocations(currentEditedLocations.filter(loc => loc.name !== locationNameToRemove));\n  };","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":122,"to":139}}}}],["208",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\nconst handleSimulateScan = () => {\n    const scannedValue = `SCANNED-${Math.random().toString(36).substring(2, 7).toUpperCase()}`;\n    setNewLocationValue('newLocationName', scannedValue, { shouldValidate: true });\n    setNewLocationValue('newLocationPallets', Math.floor(Math.random() * 5) + 1); // Simulate 1-5 pallets\n    toast({\n      title: \"Barcode Scanned (Simulated)\",\n      description: `Location \"${scannedValue}\" ready to be added.`,\n    });\n    setIsScanning(false); \n  };","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":141,"to":150}}}}],["209",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\nconst handleSaveChanges = () => {\n    const finalLocations = currentEditedLocations.length > 0 ? currentEditedLocations : [{ name: 'Pending Assignment' }];\n    updateShipment(shipmentToManage.id, { locations: finalLocations });\n    toast({\n      title: \"Locations Updated!\",\n      description: `Locations for shipment STS Job: ${shipmentToManage.stsJob} have been saved.`,\n    });\n    closeDialogCleanup();\n  };\n  \n  const closeDialogCleanup = () => {\n    setIsOpen(false);\n    setIsScanning(false);\n    resetNewLocationForm({ newLocationName: \"\", newLocationPallets: null });\n  }","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":152,"to":166}}}}],["210",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\nreturn (\n    <Dialog open={isOpen} onOpenChange={(open) => { if (!open) closeDialogCleanup(); else setIsOpen(true); }}>\n      <DialogContent className=\"sm:max-w-lg\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center\">\n            <MapPin className=\"mr-2 h-5 w-5\" /> \n            {isScanning ? 'Scan Location Barcode' : 'Manage Shipment Locations'}\n          </DialogTitle>\n          {!isScanning && (\n            <DialogDescription>\n              For Shipment STS Job: <span className=\"font-semibold\">{shipmentToManage.stsJob}</span>. Add or remove locations and specify pallet counts.\n            </DialogDescription>\n          )}\n        </DialogHeader>","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":168,"to":181}}}}],["211",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\n{isScanning ? (\n          <div className=\"space-y-4 py-4\">\n            {hasCameraPermission === null && <p className=\"text-muted-foreground text-center\">Requesting camera access...</p>}\n            {hasCameraPermission === false && (\n              <Alert variant=\"destructive\">\n                <AlertTriangle className=\"h-4 w-4\" />\n                <AlertTitle>Camera Access Required</AlertTitle>\n                <AlertDescription>\n                  Camera access denied or unavailable. Check browser permissions or enter manually.\n                </AlertDescription>\n              </Alert>\n            )}\n            \n            <div className=\"relative w-full aspect-[4/3] bg-muted rounded-md overflow-hidden\">\n              <video ref={videoRef} className=\"w-full h-full object-cover\" autoPlay playsInline muted />\n              {hasCameraPermission && (\n                  <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":183,"to":199}}}}],["212",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\n<div className=\"w-3/4 h-1/3 border-2 border-dashed border-background/70 rounded-lg opacity-75\"></div>\n                  </div>\n              )}\n            </div>\n            <Button onClick={handleSimulateScan} className=\"w-full\" disabled={hasCameraPermission !== true}>\n              Simulate Successful Scan\n            </Button>\n            <Button variant=\"outline\" onClick={() => setIsScanning(false)} className=\"w-full\">\n              Cancel Scan & Enter Manually\n            </Button>\n          </div>\n        ) : (\n          <div className=\"py-4 space-y-6\">\n            <div>\n              <Label className=\"text-sm font-medium\">Current Locations:</Label>\n              <div className=\"mt-2 flex flex-wrap gap-2 p-2 border rounded-md min-h-[40px] bg-muted/50 max-h-40 overflow-y-auto\">\n                {currentEditedLocations.length === 0 || (currentEditedLocations.length === 1 && currentEditedLocations[0].name === 'Pending Assignment') ? (","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":200,"to":216}}}}],["213",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\n<Badge variant=\"outline\">Pending Assignment</Badge>\n                ) : (\n                  currentEditedLocations.filter(loc => loc.name !== 'Pending Assignment').map((loc, index) => (\n                    <Badge key={index} variant=\"secondary\" className=\"flex items-center gap-1.5 py-1 px-2\">\n                      <span>{loc.name}</span>\n                      {loc.pallets !== undefined && <span className=\"text-xs text-muted-foreground\">({loc.pallets} plts)</span>}\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        className=\"h-4 w-4 rounded-full hover:bg-destructive/20\"\n                        onClick={() => handleRemoveLocationFromList(loc.name)}\n                      >\n                        <XIcon className=\"h-3 w-3\" />\n                      </Button>\n                    </Badge>\n                  ))\n                )}\n              </div>\n            </div>","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":217,"to":235}}}}],["214",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\n<form onSubmit={handleNewLocationSubmit(handleAddLocationToList)} className=\"space-y-3\">\n              <div className=\"grid grid-cols-1 sm:grid-cols-[2fr_1fr_auto] gap-2 items-end\">\n                <div>\n                  <Label htmlFor=\"newLocationName\">New Location Name</Label>\n                  <Input\n                    id=\"newLocationName\"\n                    {...register('newLocationName')}\n                    placeholder=\"e.g., Shelf A1 or scan\"\n                    className=\"mt-1\"\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"newLocationPallets\" className=\"flex items-center\">\n                    <Box className=\"mr-1 h-3 w-3 text-muted-foreground\" /> Plt Spaces\n                  </Label>\n                  <Input\n                    id=\"newLocationPallets\"\n                    type=\"number\"\n                    {...register('newLocationPallets')}\n                    placeholder=\"No.\"","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":237,"to":256}}}}],["215",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\nplaceholder=\"No.\"\n                    className=\"mt-1\"\n                  />\n                </div>\n                <Button type=\"submit\" size=\"icon\" variant=\"outline\" className=\"self-end mb-px sm:mb-0\"> {/* Adjusted margin for alignment */}\n                  <PlusCircle className=\"h-4 w-4\" />\n                </Button>\n              </div>\n               <div className=\"grid grid-cols-1 sm:grid-cols-[2fr_1fr_auto] gap-2\">\n                {newLocationErrors.newLocationName && <p className=\"text-sm text-destructive mt-0 sm:col-span-1\">{newLocationErrors.newLocationName.message}</p>}\n                <div className={newLocationErrors.newLocationName ? \"sm:col-start-2\" : \"sm:col-start-1 sm:col-span-1\"}> {/* Adjust based on first error */}\n                 {newLocationErrors.newLocationPallets && <p className=\"text-sm text-destructive mt-0\">{newLocationErrors.newLocationPallets.message}</p>}\n                </div>\n              </div>","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":256,"to":269}}}}],["216",{"pageContent":"File: src/components/shipment/ManageLocationsDialog.tsx\n<Button type=\"button\" variant=\"outline\" onClick={() => setIsScanning(true)} className=\"w-full\">\n                <Camera className=\"mr-2 h-4 w-4\" /> Scan Barcode for Location Name\n              </Button>\n            </form>\n            \n            <DialogFooter className=\"pt-4\">\n              <Button type=\"button\" variant=\"outline\" onClick={closeDialogCleanup}>Cancel</Button>\n              <Button onClick={handleSaveChanges}>\n                Save Changes\n              </Button>\n            </DialogFooter>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}","metadata":{"source":"src/components/shipment/ManageLocationsDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":272,"to":288}}}}],["217",{"pageContent":"File: src/app/page.tsx\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport TrailerCard from '@/components/trailer/TrailerCard';\nimport AddTrailerDialog from '@/components/trailer/AddTrailerDialog';\nimport { Button } from '@/components/ui/button';\nimport { PlusCircle, ListFilter, LayoutGrid, Search, Briefcase } from 'lucide-react'; // Added Briefcase\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport type { TrailerStatus } from '@/types';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Card, CardContent, CardFooter, CardHeader } from '@/components/ui/card';","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":14}}}}],["218",{"pageContent":"File: src/app/page.tsx\nexport default function HomePage() {\n  const { trailers, deleteTrailer, updateTrailerStatus } = useWarehouse();\n  const [isClient, setIsClient] = useState(false);\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<TrailerStatus | 'all'>('all');\n  const [companyFilter, setCompanyFilter] = useState<string>('all'); // New state for company filter\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  const uniqueCompanies = useMemo(() => {\n    if (!isClient) return [];\n    const companies = new Set<string>();\n    trailers.forEach(trailer => {\n      if (trailer.company) {\n        companies.add(trailer.company);\n      }\n    });\n    return Array.from(companies).sort();\n  }, [trailers, isClient]);","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":16,"to":38}}}}],["219",{"pageContent":"File: src/app/page.tsx\nconst filteredTrailers = useMemo(() => {\n    return trailers.filter(trailer => {\n      const searchLower = searchTerm.toLowerCase();\n      const matchesSearch = trailer.id.toLowerCase().includes(searchLower) ||\n                            trailer.name.toLowerCase().includes(searchLower) ||\n                            (trailer.company && trailer.company.toLowerCase().includes(searchLower));\n      const matchesStatus = statusFilter === 'all' || trailer.status === statusFilter;\n      const matchesCompany = companyFilter === 'all' || (trailer.company?.toLowerCase() === companyFilter.toLowerCase());\n      return matchesSearch && matchesStatus && matchesCompany;\n    });\n  }, [trailers, searchTerm, statusFilter, companyFilter]);\n  \n  const allStatuses: TrailerStatus[] = ['Scheduled', 'Arrived', 'Loading', 'Offloading', 'Devanned'];","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":40,"to":52}}}}],["220",{"pageContent":"File: src/app/page.tsx\nconst TrailerListSkeleton = () => (\n    <div className={viewMode === 'grid' ? \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\" : \"space-y-4\"}>\n      {[1, 2, 3].map(i => (\n        viewMode === 'grid' ? (\n          <Card className=\"shadow-md flex flex-col h-full\" key={i}>\n            <CardHeader className=\"pb-2\">\n              <Skeleton className=\"h-5 w-20 self-start\" />\n            </CardHeader>\n            <CardContent className=\"flex-grow\">\n              <div className=\"flex items-center justify-between\">\n                <Skeleton className=\"h-6 w-3/4\" />\n                <Skeleton className=\"h-8 w-8 rounded-full\" />\n              </div>\n              <Skeleton className=\"h-4 w-1/2 mt-1 mb-1\" /> {/* ID */}\n              <Skeleton className=\"h-4 w-1/3 mt-1 mb-1\" /> {/* Company */}\n              <Skeleton className=\"h-3 w-2/5 mt-1 mb-1\" /> {/* Arrival Date */}\n              <Skeleton className=\"h-3 w-2/5 mt-1 mb-1\" /> {/* Storage Expiry Date */}","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":54,"to":70}}}}],["221",{"pageContent":"File: src/app/page.tsx\n<Skeleton className=\"h-3 w-1/4 mt-1 mb-4\" /> {/* Weight */}\n              \n              <div className=\"mt-4 space-y-2\">\n                <div className=\"flex items-center justify-between text-sm\">\n                  <Skeleton className=\"h-4 w-1/4\" />\n                  <Skeleton className=\"h-8 w-[130px]\" />\n                </div>\n                <div className=\"flex items-center justify-between text-sm\">\n                  <Skeleton className=\"h-4 w-1/3\" />\n                  <Skeleton className=\"h-4 w-10\" />\n                </div>\n                <div className=\"flex items-center justify-between text-sm\">\n                  <Skeleton className=\"h-4 w-1/3\" /> {/* Label for pieces */}\n                  <Skeleton className=\"h-4 w-10\" /> {/* Value for pieces */}\n                </div>\n              </div>\n            </CardContent>\n            <CardFooter className=\"pt-4\">\n              <div className=\"flex items-center justify-between w-full\">","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":71,"to":89}}}}],["222",{"pageContent":"File: src/app/page.tsx\n<Skeleton className=\"h-9 w-2/5\" />\n                <Skeleton className=\"h-8 w-8\" />\n              </div>\n            </CardFooter>\n          </Card>\n        ) : (\n          <Card className=\"shadow-md w-full\" key={i}>\n            <div className=\"p-4 flex items-center justify-between\">\n              <div className=\"flex-grow\">\n                <Skeleton className=\"h-6 w-3/5 mb-1\" />\n                <Skeleton className=\"h-4 w-2/5 mb-1\" /> {/* ID */}\n                <Skeleton className=\"h-3 w-1/3 mt-1 mb-1\" /> {/* Company */}\n                <Skeleton className=\"h-3 w-1/4 mt-1 mb-1\" /> {/* Arrival Date */}\n                <Skeleton className=\"h-3 w-1/4 mt-1 mb-1\" /> {/* Storage Expiry Date */}\n                <Skeleton className=\"h-3 w-1/5 mt-1 mb-2\" /> {/* Weight */}\n                <div className=\"mt-2 flex items-center gap-4 text-sm\">\n                  <Skeleton className=\"h-5 w-20\" /> {/* Status Badge */}","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":90,"to":106}}}}],["223",{"pageContent":"File: src/app/page.tsx\n<Skeleton className=\"h-4 w-28\" /> {/* Shipment Count */}\n                  <Skeleton className=\"h-4 w-24\" /> {/* Pieces Count */}\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Skeleton className=\"h-9 w-[130px] hidden sm:flex\" /> {/* Status Select */}\n                <Skeleton className=\"h-9 w-32\" /> {/* Manage Shipments button */}\n                <Skeleton className=\"h-8 w-8\" /> {/* MoreVertical Dropdown */}\n              </div>\n            </div>\n          </Card>\n        )\n      ))}\n    </div>\n  );","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":107,"to":121}}}}],["224",{"pageContent":"File: src/app/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow\">\n        <h1 className=\"text-3xl font-bold text-foreground\">Trailer Dashboard</h1>\n        <Button onClick={() => setIsAddDialogOpen(true)} className=\"w-full sm:w-auto\">\n          <PlusCircle className=\"mr-2 h-5 w-5\" /> Add New Trailer\n        </Button>\n      </div>","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":123,"to":130}}}}],["225",{"pageContent":"File: src/app/page.tsx\n<div className=\"p-4 bg-card rounded-lg shadow space-y-4\">\n        <div className=\"flex flex-col md:flex-row gap-4\">\n          <div className=\"relative flex-grow\">\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n            <Input \n              placeholder=\"Search by ID, Name, or Company...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n          <Select value={statusFilter} onValueChange={(value) => setStatusFilter(value as TrailerStatus | 'all')}>\n            <SelectTrigger className=\"w-full md:w-[180px]\">\n              <SelectValue placeholder=\"Filter by status\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Statuses</SelectItem>\n              {allStatuses.map(status => (\n                <SelectItem key={status} value={status}>{status}</SelectItem>","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":132,"to":150}}}}],["226",{"pageContent":"File: src/app/page.tsx\n))}\n            </SelectContent>\n          </Select>\n          <Select value={companyFilter} onValueChange={(value) => setCompanyFilter(value)}>\n            <SelectTrigger className=\"w-full md:w-[200px]\">\n               <div className=\"flex items-center\">\n                 <Briefcase className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                 <SelectValue placeholder=\"Filter by company\" />\n               </div>\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Companies</SelectItem>\n              {isClient && uniqueCompanies.map(company => (\n                <SelectItem key={company} value={company.toLowerCase()}>{company}</SelectItem>\n              ))}\n              {!isClient && <Skeleton className=\"h-8 w-full my-1\" />}\n            </SelectContent>\n          </Select>\n          <div className=\"flex gap-2\">","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":151,"to":169}}}}],["227",{"pageContent":"File: src/app/page.tsx\n<div className=\"flex gap-2\">\n            <Button variant={viewMode === 'grid' ? 'default' : 'outline'} size=\"icon\" onClick={() => setViewMode('grid')} aria-label=\"Grid view\">\n              <LayoutGrid className=\"h-5 w-5\" />\n            </Button>\n            <Button variant={viewMode === 'list' ? 'default' : 'outline'} size=\"icon\" onClick={() => setViewMode('list')} aria-label=\"List view\">\n              <ListFilter className=\"h-5 w-5\" />\n            </Button>\n          </div>\n        </div>\n      </div>","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":169,"to":178}}}}],["228",{"pageContent":"File: src/app/page.tsx\n{!isClient ? (\n        <TrailerListSkeleton />\n      ) : filteredTrailers.length === 0 ? (\n        <div className=\"text-center py-10 bg-card rounded-lg shadow\">\n          <p className=\"text-xl text-muted-foreground\">No trailers found.</p>\n          <p className=\"text-muted-foreground\">Try adjusting your search or filter, or add a new trailer.</p>\n        </div>\n      ) : (\n        <div className={viewMode === 'grid' ? \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\" : \"space-y-4\"}>\n          {filteredTrailers.map((trailer) => (\n            <TrailerCard \n              key={trailer.id} \n              trailer={trailer} \n              viewMode={viewMode}\n              onDelete={() => deleteTrailer(trailer.id)}\n              onStatusChange={(newStatus) => updateTrailerStatus(trailer.id, newStatus)}\n            />\n          ))}\n        </div>\n      )}\n\n      <AddTrailerDialog isOpen={isAddDialogOpen} setIsOpen={setIsAddDialogOpen} />\n    </div>\n  );\n}","metadata":{"source":"src/app/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":180,"to":204}}}}],["229",{"pageContent":"File: src/components/trailer/AttachTrailerDocumentDialog.tsx\n\"use client\";\n\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { FileUp, Trash2 } from 'lucide-react';\nimport type { TrailerUpdateData } from '@/types';\n\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ACCEPTED_FILE_TYPES = ['application/pdf'];","metadata":{"source":"src/components/trailer/AttachTrailerDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":23}}}}],["230",{"pageContent":"File: src/components/trailer/AttachTrailerDocumentDialog.tsx\nconst attachDocumentSchema = z.object({\n  documentFile: z\n    .any()\n    .optional() // Optional because user might only want to clear the existing doc\n    .refine(\n      (files) => !files || files?.[0]?.size <= MAX_FILE_SIZE,\n      `Max file size is 5MB.`\n    )\n    .refine(\n      (files) => !files || ACCEPTED_FILE_TYPES.includes(files?.[0]?.type),\n      \"Only .pdf files are accepted.\"\n    ),\n});\n\ntype AttachDocumentFormData = z.infer<typeof attachDocumentSchema>;\n\ninterface AttachTrailerDocumentDialogProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  trailerId: string;\n  trailerIdentifier: string;\n  documentTypeField: keyof TrailerUpdateData; // e.g., 'outturnReportDocumentName'\n  documentFriendlyName: string; // e.g., \"Out-turn Report\"\n  currentDocumentName?: string | null;\n  onDocumentAction: (\n    trailerId: string,\n    docField: keyof TrailerUpdateData,\n    newDocumentName: string | null // string if new/changed, null if cleared\n  ) => void;\n}","metadata":{"source":"src/components/trailer/AttachTrailerDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":25,"to":54}}}}],["231",{"pageContent":"File: src/components/trailer/AttachTrailerDocumentDialog.tsx\nexport default function AttachTrailerDocumentDialog({\n  isOpen,\n  setIsOpen,\n  trailerId,\n  trailerIdentifier,\n  documentTypeField,\n  documentFriendlyName,\n  currentDocumentName,\n  onDocumentAction,\n}: AttachTrailerDocumentDialogProps) {\n  const { toast } = useToast();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitting },\n  } = useForm<AttachDocumentFormData>({\n    resolver: zodResolver(attachDocumentSchema),\n  });","metadata":{"source":"src/components/trailer/AttachTrailerDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":56,"to":74}}}}],["232",{"pageContent":"File: src/components/trailer/AttachTrailerDocumentDialog.tsx\nconst onSubmit: SubmitHandler<AttachDocumentFormData> = (data) => {\n    const newFile = data.documentFile?.[0] as File | undefined;\n    if (newFile) {\n      onDocumentAction(trailerId, documentTypeField, newFile.name);\n      toast({\n        title: `${documentFriendlyName} Updated!`,\n        description: `'${newFile.name}' has been associated with trailer ${trailerIdentifier}.`,\n      });\n    } else if (!newFile && !currentDocumentName) {\n      // No new file and no current document, likely an erroneous submit, but do nothing.\n      // Or, if user just clicks save without selecting new file or clearing.\n       toast({\n        title: \"No Changes\",\n        description: `No new ${documentFriendlyName.toLowerCase()} was selected.`,\n        variant: \"default\",\n      });\n    } else {\n        // This case implies currentDocumentName exists, and no new file was selected.\n        // The action here depends on whether a \"clear\" button was pressed or just save.","metadata":{"source":"src/components/trailer/AttachTrailerDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":76,"to":94}}}}],["233",{"pageContent":"File: src/components/trailer/AttachTrailerDocumentDialog.tsx\n// We assume the \"Save\" button implies keeping the current if no new file.\n        // Clearing is handled by a separate button.\n         toast({\n            title: `${documentFriendlyName} Unchanged`,\n            description: `The existing ${documentFriendlyName.toLowerCase()} '${currentDocumentName}' remains associated.`,\n         });\n    }\n    reset();\n    setIsOpen(false);\n  };","metadata":{"source":"src/components/trailer/AttachTrailerDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":95,"to":104}}}}],["234",{"pageContent":"File: src/components/trailer/AttachTrailerDocumentDialog.tsx\nconst handleClearDocument = () => {\n    onDocumentAction(trailerId, documentTypeField, null); // Pass null to indicate clearing\n    toast({\n      title: `${documentFriendlyName} Cleared!`,\n      description: `The ${documentFriendlyName.toLowerCase()} has been disassociated from trailer ${trailerIdentifier}.`,\n      variant: 'destructive',\n    });\n    reset();\n    setIsOpen(false);\n  };\n\n  const dialogTitle = currentDocumentName\n    ? `Manage ${documentFriendlyName}`\n    : `Attach ${documentFriendlyName}`;\n  const dialogDescription = `Upload or clear the ${documentFriendlyName.toLowerCase()} for trailer: ${trailerIdentifier}.`;","metadata":{"source":"src/components/trailer/AttachTrailerDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":106,"to":120}}}}],["235",{"pageContent":"File: src/components/trailer/AttachTrailerDocumentDialog.tsx\nreturn (\n    <Dialog\n      open={isOpen}\n      onOpenChange={(open) => {\n        setIsOpen(open);\n        if (!open) reset();\n      }}\n    >\n      <DialogContent className=\"sm:max-w-[480px]\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center\">\n            <FileUp className=\"mr-2 h-5 w-5\" />\n            {dialogTitle}\n          </DialogTitle>\n          <DialogDescription>{dialogDescription}</DialogDescription>\n        </DialogHeader>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6 py-4\">\n          {currentDocumentName && (\n            <div className=\"text-sm\">\n              Current Document: <span className=\"font-semibold\">{currentDocumentName}</span>\n            </div>\n          )}\n          <div>\n            <Label htmlFor=\"documentFile\" className=\"text-sm font-medium\">\n              {currentDocumentName ? `Replace ${documentFriendlyName} (PDF)` : `Upload ${documentFriendlyName} (PDF)`}\n            </Label>\n            <Input","metadata":{"source":"src/components/trailer/AttachTrailerDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":122,"to":148}}}}],["236",{"pageContent":"File: src/components/trailer/AttachTrailerDocumentDialog.tsx\n</Label>\n            <Input\n              id=\"documentFile\"\n              type=\"file\"\n              {...register('documentFile')}\n              accept={ACCEPTED_FILE_TYPES.join(',')}\n              className=\"mt-1 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"\n            />\n            {errors.documentFile && (\n              <p className=\"mt-1 text-sm text-destructive\">\n                {(errors.documentFile as any)?.message}\n              </p>\n            )}\n            <p className=\"mt-1 text-xs text-muted-foreground\">\n              Max file size: 5MB. Accepted type: PDF.\n            </p>\n          </div>\n          <DialogFooter className=\"pt-4 flex justify-between sm:justify-between w-full\">\n            <div className=\"flex gap-2\">\n              <Button type=\"button\" variant=\"outline\" onClick={() => { setIsOpen(false); reset(); }}>\n                Cancel","metadata":{"source":"src/components/trailer/AttachTrailerDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":147,"to":167}}}}],["237",{"pageContent":"File: src/components/trailer/AttachTrailerDocumentDialog.tsx\nCancel\n              </Button>\n              {currentDocumentName && (\n                <Button\n                  type=\"button\"\n                  variant=\"destructive\"\n                  onClick={handleClearDocument}\n                  className=\"flex items-center\"\n                >\n                  <Trash2 className=\"mr-2 h-4 w-4\" /> Clear Current\n                </Button>\n              )}\n            </div>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Saving...' : 'Save Changes'}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}","metadata":{"source":"src/components/trailer/AttachTrailerDocumentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":167,"to":188}}}}],["238",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nimport { useEffect } from 'react';\nimport { useForm, type SubmitHandler, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Trailer, TrailerStatus, TrailerUpdateData } from '@/types';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { CalendarIcon, Edit, Weight, Tag, FileText, UploadCloud, BookOpen, FileBadge, FileSignature } from \"lucide-react\"; // Added FileSignature","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":22}}}}],["239",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nimport { format, parseISO } from \"date-fns\";\nimport { cn } from \"@/lib/utils\";\nimport { useToast } from '@/hooks/use-toast';","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":23,"to":25}}}}],["240",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n// Internal form data type to handle Date objects from picker and new custom fields\ntype EditTrailerFormDataInternal = {\n  name: string;\n  company?: string;\n  status: TrailerStatus;\n  arrivalDate?: Date | null;\n  storageExpiryDate?: Date | null;\n  weight?: number | null;\n  customField1?: string;\n  customField2?: string;\n  outturnReportDocument?: FileList | File | null;\n  t1SummaryDocument?: FileList | File | null;\n  manifestDocument?: FileList | File | null;\n  acpDocument?: FileList | File | null; // Added ACP document\n};\n\nconst allStatuses: TrailerStatus[] = ['Scheduled', 'Arrived', 'Loading', 'Offloading', 'Devanned'];","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":27,"to":43}}}}],["241",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nconst editTrailerSchema = z.object({\n  name: z.string().min(1, 'Trailer Name is required').max(50, 'Trailer Name too long'),\n  company: z.string().max(50, 'Company name too long').optional(),\n  status: z.enum(allStatuses as [TrailerStatus, ...TrailerStatus[]]),\n  arrivalDate: z.date().nullable().optional(),\n  storageExpiryDate: z.date().nullable().optional(),\n  weight: z.coerce.number().positive('Weight must be a positive number').optional().nullable(),\n  customField1: z.string().max(50, 'T1.1 value too long').optional(),\n  customField2: z.string().max(50, 'T1.2 value too long').optional(),\n  outturnReportDocument: z.any().optional(),\n  t1SummaryDocument: z.any().optional(),\n  manifestDocument: z.any().optional(),\n  acpDocument: z.any().optional(), // Added ACP document schema\n}).refine(data => {\n  if (data.arrivalDate && data.storageExpiryDate && data.storageExpiryDate < data.arrivalDate) {\n    return false;\n  }\n  return true;\n}, {","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":45,"to":63}}}}],["242",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n}\n  return true;\n}, {\n  message: \"Storage expiry date cannot be before arrival date.\",\n  path: [\"storageExpiryDate\"],\n});","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":61,"to":66}}}}],["243",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\ninterface EditTrailerDialogProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  trailerToEdit: Trailer;\n}\n\n\nexport default function EditTrailerDialog({ isOpen, setIsOpen, trailerToEdit }: EditTrailerDialogProps) {\n  const { updateTrailer } = useWarehouse();\n  const { toast } = useToast();\n\n  const { register, handleSubmit, reset, setValue, watch, control, formState: { errors, isSubmitting } } = useForm<EditTrailerFormDataInternal>({\n    resolver: zodResolver(editTrailerSchema),\n  });","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":69,"to":82}}}}],["244",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nuseEffect(() => {\n    if (trailerToEdit && isOpen) {\n      reset({\n        name: trailerToEdit.name,\n        company: trailerToEdit.company || '',\n        status: trailerToEdit.status,\n        arrivalDate: trailerToEdit.arrivalDate ? parseISO(trailerToEdit.arrivalDate) : null,\n        storageExpiryDate: trailerToEdit.storageExpiryDate ? parseISO(trailerToEdit.storageExpiryDate) : null,\n        weight: trailerToEdit.weight ?? null,\n        customField1: trailerToEdit.customField1 || '',\n        customField2: trailerToEdit.customField2 || '',\n        outturnReportDocument: null,\n        t1SummaryDocument: null,\n        manifestDocument: null,\n        acpDocument: null, // Reset ACP document\n      });\n    }\n  }, [trailerToEdit, isOpen, reset]);\n\n   useEffect(() => {\n    register('status');\n  }, [register]);","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":84,"to":105}}}}],["245",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nconst selectedStatus = watch('status');\n  const currentOutturnReportDocumentName = trailerToEdit?.outturnReportDocumentName;\n  const newOutturnDocumentFile = watch('outturnReportDocument');\n  const currentT1SummaryDocumentName = trailerToEdit?.t1SummaryDocumentName;\n  const newT1SummaryDocumentFile = watch('t1SummaryDocument');\n  const currentManifestDocumentName = trailerToEdit?.manifestDocumentName;\n  const newManifestDocumentFile = watch('manifestDocument');\n  const currentAcpDocumentName = trailerToEdit?.acpDocumentName; // For ACP Document\n  const newAcpDocumentFile = watch('acpDocument'); // For ACP Document","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":107,"to":115}}}}],["246",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nconst onSubmit: SubmitHandler<EditTrailerFormDataInternal> = (data) => {\n    let outturnDocName: string | null | undefined = trailerToEdit.outturnReportDocumentName;\n    if (data.outturnReportDocument && data.outturnReportDocument.length > 0) {\n      outturnDocName = data.outturnReportDocument[0].name;\n    } else if (data.outturnReportDocument === null) {\n        outturnDocName = null;\n    }\n\n    let t1SummaryDocName: string | null | undefined = trailerToEdit.t1SummaryDocumentName;\n    if (data.t1SummaryDocument && data.t1SummaryDocument.length > 0) {\n      t1SummaryDocName = data.t1SummaryDocument[0].name;\n    } else if (data.t1SummaryDocument === null) {\n        t1SummaryDocName = null;\n    }","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":118,"to":131}}}}],["247",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nlet manifestDocName: string | null | undefined = trailerToEdit.manifestDocumentName;\n    if (data.manifestDocument && data.manifestDocument.length > 0) {\n      manifestDocName = data.manifestDocument[0].name;\n    } else if (data.manifestDocument === null) {\n        manifestDocName = null;\n    }\n\n    let acpDocName: string | null | undefined = trailerToEdit.acpDocumentName; // For ACP Document\n    if (data.acpDocument && data.acpDocument.length > 0) {\n      acpDocName = data.acpDocument[0].name;\n    } else if (data.acpDocument === null) {\n      acpDocName = null;\n    }","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":133,"to":145}}}}],["248",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nconst updateData: TrailerUpdateData = {\n      name: data.name,\n      company: data.company || undefined,\n      status: data.status,\n      arrivalDate: data.arrivalDate ? data.arrivalDate.toISOString() : null,\n      storageExpiryDate: data.storageExpiryDate ? data.storageExpiryDate.toISOString() : null,\n      weight: data.weight ?? undefined,\n      customField1: data.customField1 || undefined,\n      customField2: data.customField2 || undefined,\n      outturnReportDocumentName: outturnDocName,\n      t1SummaryDocumentName: t1SummaryDocName,\n      manifestDocumentName: manifestDocName,\n      acpDocumentName: acpDocName, // Include ACP document name\n    };\n\n    updateTrailer(trailerToEdit.id, updateData);\n    toast({\n      title: \"Success!\",\n      description: `Trailer \"${data.name}\" (ID: ${trailerToEdit.id}) updated.`,\n    });\n    setIsOpen(false);\n  };","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":148,"to":169}}}}],["249",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nconst handleClose = () => {\n    setIsOpen(false);\n     if (trailerToEdit) {\n      reset({\n        name: trailerToEdit.name,\n        company: trailerToEdit.company || '',\n        status: trailerToEdit.status,\n        arrivalDate: trailerToEdit.arrivalDate ? parseISO(trailerToEdit.arrivalDate) : null,\n        storageExpiryDate: trailerToEdit.storageExpiryDate ? parseISO(trailerToEdit.storageExpiryDate) : null,\n        weight: trailerToEdit.weight ?? null,\n        customField1: trailerToEdit.customField1 || '',\n        customField2: trailerToEdit.customField2 || '',\n        outturnReportDocument: null,\n        t1SummaryDocument: null,\n        manifestDocument: null,\n        acpDocument: null,\n      });\n    }\n  }\n\n  if (!trailerToEdit) return null;","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":171,"to":191}}}}],["250",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nreturn (\n    <Dialog open={isOpen} onOpenChange={(open) => { if (!open) handleClose(); else setIsOpen(true); }}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center\"><Edit className=\"mr-2 h-5 w-5\" /> Edit Trailer</DialogTitle>\n          <DialogDescription>\n            Modify the details for trailer ID: {trailerToEdit.id}.\n          </DialogDescription>\n        </DialogHeader>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4 py-4 max-h-[70vh] overflow-y-auto pr-2\">\n          <div>\n            <Label htmlFor=\"trailerIdDisplay\">Trailer ID (Read-only)</Label>\n            <Input id=\"trailerIdDisplay\" value={trailerToEdit.id} readOnly className=\"bg-muted/50 cursor-not-allowed\" />\n          </div>\n          <div>\n            <Label htmlFor=\"name\">Trailer Name</Label>\n            <Input id=\"name\" {...register('name')} placeholder=\"e.g., Main Hauler\" />","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":193,"to":209}}}}],["251",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n{errors.name && <p className=\"text-sm text-destructive mt-1\">{errors.name.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"company\">Company (Optional)</Label>\n            <Input id=\"company\" {...register('company')} placeholder=\"e.g., Logistics Inc.\" />\n            {errors.company && <p className=\"text-sm text-destructive mt-1\">{errors.company.message}</p>}\n          </div>\n           <div>\n            <Label htmlFor=\"weight\" className=\"flex items-center\">\n              <Weight className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Weight (kg) (Optional)\n            </Label>\n            <Input id=\"weight\" type=\"number\" step=\"any\" {...register('weight')} placeholder=\"e.g., 3500\" />\n            {errors.weight && <p className=\"text-sm text-destructive mt-1\">{errors.weight.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"customField1\" className=\"flex items-center\">","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":210,"to":225}}}}],["252",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<Tag className=\"mr-2 h-4 w-4 text-muted-foreground\" /> T1.1 (Optional)\n            </Label>\n            <Input id=\"customField1\" {...register('customField1')} placeholder=\"Value for T1.1\" />\n            {errors.customField1 && <p className=\"text-sm text-destructive mt-1\">{errors.customField1.message}</p>}\n          </div>\n          <div>\n            <Label htmlFor=\"customField2\" className=\"flex items-center\">\n              <Tag className=\"mr-2 h-4 w-4 text-muted-foreground\" /> T1.2 (Optional)\n            </Label>\n            <Input id=\"customField2\" {...register('customField2')} placeholder=\"Value for T1.2\" />\n            {errors.customField2 && <p className=\"text-sm text-destructive mt-1\">{errors.customField2.message}</p>}\n          </div>\n           <div>\n            <Label htmlFor=\"status\">Status</Label>\n            <Select\n              value={selectedStatus || trailerToEdit.status}","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":226,"to":241}}}}],["253",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nonValueChange={(value) => setValue('status', value as TrailerStatus, { shouldValidate: true })}\n            >\n              <SelectTrigger id=\"status\">\n                <SelectValue placeholder=\"Select status\" />\n              </SelectTrigger>\n              <SelectContent>\n                {allStatuses.map(status => (\n                  <SelectItem key={status} value={status}>{status}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            {errors.status && <p className=\"text-sm text-destructive mt-1\">{errors.status.message}</p>}\n          </div>","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":242,"to":254}}}}],["254",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"arrivalDate\">Arrival Date (Optional)</Label>\n              <Controller\n                name=\"arrivalDate\"\n                control={control}\n                render={({ field }) => (\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant={\"outline\"}\n                        className={cn(\n                          \"w-full justify-start text-left font-normal\",\n                          !field.value && \"text-muted-foreground\"\n                        )}\n                      >\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {field.value ? format(field.value, \"PPP\") : <span>Pick a date</span>}\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\">\n                      <Calendar","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":256,"to":277}}}}],["255",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<Calendar\n                        mode=\"single\"\n                        selected={field.value || undefined}\n                        onSelect={(date) => field.onChange(date || null)}\n                        initialFocus\n                      />\n                    </PopoverContent>\n                  </Popover>\n                )}\n              />\n              {errors.arrivalDate && <p className=\"text-sm text-destructive mt-1\">{errors.arrivalDate.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"storageExpiryDate\">Storage Expiry Date (Optional)</Label>\n               <Controller\n                name=\"storageExpiryDate\"\n                control={control}\n                render={({ field }) => (\n                  <Popover>\n                    <PopoverTrigger asChild>\n                      <Button\n                        variant={\"outline\"}\n                        className={cn(","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":277,"to":299}}}}],["256",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\nclassName={cn(\n                          \"w-full justify-start text-left font-normal\",\n                          !field.value && \"text-muted-foreground\"\n                        )}\n                      >\n                        <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                        {field.value ? format(field.value, \"PPP\") : <span>Pick a date</span>}\n                      </Button>\n                    </PopoverTrigger>\n                    <PopoverContent className=\"w-auto p-0\">\n                      <Calendar\n                        mode=\"single\"\n                        selected={field.value || undefined}\n                        onSelect={(date) => field.onChange(date || null)}\n                         disabled={(date) =>\n                          watch(\"arrivalDate\") ? date < watch(\"arrivalDate\")! : false\n                        }\n                        initialFocus\n                      />\n                    </PopoverContent>","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":299,"to":318}}}}],["257",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n</PopoverContent>\n                  </Popover>\n                )}\n              />\n              {errors.storageExpiryDate && <p className=\"text-sm text-destructive mt-1\">{errors.storageExpiryDate.message}</p>}\n            </div>\n          </div>","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":318,"to":324}}}}],["258",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<div className=\"space-y-2 border-t pt-4\">\n            <Label htmlFor=\"outturnReportDocument\" className=\"flex items-center\">\n              <UploadCloud className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Out-turn Report PDF (Optional)\n            </Label>\n            {currentOutturnReportDocumentName && !newOutturnDocumentFile?.[0] && (\n                <p className=\"text-xs text-muted-foreground flex items-center\">\n                  <FileText className=\"mr-1 h-3.5 w-3.5\" /> Current: {currentOutturnReportDocumentName}\n                </p>\n            )}\n            <Input id=\"outturnReportDocument\" type=\"file\" {...register('outturnReportDocument')} accept=\".pdf\" className=\"file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"/>\n            {errors.outturnReportDocument && <p className=\"text-sm text-destructive mt-1\">{(errors.outturnReportDocument as any)?.message}</p>}","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":326,"to":336}}}}],["259",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<p className=\"text-xs text-muted-foreground\">Upload a new PDF to replace. Max 5MB.</p>\n             {currentOutturnReportDocumentName && (\n              <Button\n                type=\"button\"\n                variant=\"link\"\n                size=\"sm\"\n                className=\"text-xs text-destructive p-0 h-auto\"\n                onClick={() => {\n                  setValue('outturnReportDocument', null); // Signal to remove/clear\n                  toast({ title: \"Out-turn Report Cleared\", description: \"The out-turn report association will be removed upon saving.\"});\n                }}\n              >\n                Clear Current Out-turn Report\n              </Button>\n            )}\n          </div>","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":337,"to":352}}}}],["260",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<div className=\"space-y-2 border-t pt-4\">\n            <Label htmlFor=\"t1SummaryDocument\" className=\"flex items-center\">\n              <FileBadge className=\"mr-2 h-4 w-4 text-muted-foreground\" /> T1 Summary PDF (Optional)\n            </Label>\n            {currentT1SummaryDocumentName && !newT1SummaryDocumentFile?.[0] && (\n                <p className=\"text-xs text-muted-foreground flex items-center\">\n                  <FileText className=\"mr-1 h-3.5 w-3.5\" /> Current: {currentT1SummaryDocumentName}\n                </p>\n            )}\n            <Input id=\"t1SummaryDocument\" type=\"file\" {...register('t1SummaryDocument')} accept=\".pdf\" className=\"file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"/>\n            {errors.t1SummaryDocument && <p className=\"text-sm text-destructive mt-1\">{(errors.t1SummaryDocument as any)?.message}</p>}","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":354,"to":364}}}}],["261",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<p className=\"text-xs text-muted-foreground\">Upload a new PDF to replace. Max 5MB.</p>\n             {currentT1SummaryDocumentName && (\n              <Button\n                type=\"button\"\n                variant=\"link\"\n                size=\"sm\"\n                className=\"text-xs text-destructive p-0 h-auto\"\n                onClick={() => {\n                  setValue('t1SummaryDocument', null);\n                  toast({ title: \"T1 Summary Cleared\", description: \"The T1 Summary association will be removed upon saving.\"});\n                }}\n              >\n                Clear Current T1 Summary\n              </Button>\n            )}\n          </div>","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":365,"to":380}}}}],["262",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<div className=\"space-y-2 border-t pt-4\">\n            <Label htmlFor=\"manifestDocument\" className=\"flex items-center\">\n              <BookOpen className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Manifest PDF (Optional)\n            </Label>\n            {currentManifestDocumentName && !newManifestDocumentFile?.[0] && (\n                <p className=\"text-xs text-muted-foreground flex items-center\">\n                  <FileText className=\"mr-1 h-3.5 w-3.5\" /> Current: {currentManifestDocumentName}\n                </p>\n            )}\n            <Input id=\"manifestDocument\" type=\"file\" {...register('manifestDocument')} accept=\".pdf\" className=\"file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"/>\n            {errors.manifestDocument && <p className=\"text-sm text-destructive mt-1\">{(errors.manifestDocument as any)?.message}</p>}","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":382,"to":392}}}}],["263",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<p className=\"text-xs text-muted-foreground\">Upload a new PDF to replace. Max 5MB.</p>\n             {currentManifestDocumentName && (\n              <Button\n                type=\"button\"\n                variant=\"link\"\n                size=\"sm\"\n                className=\"text-xs text-destructive p-0 h-auto\"\n                onClick={() => {\n                  setValue('manifestDocument', null);\n                  toast({ title: \"Manifest Cleared\", description: \"The Manifest association will be removed upon saving.\"});\n                }}\n              >\n                Clear Current Manifest\n              </Button>\n            )}\n          </div>","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":393,"to":408}}}}],["264",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<div className=\"space-y-2 border-t pt-4\">\n            <Label htmlFor=\"acpDocument\" className=\"flex items-center\">\n              <FileSignature className=\"mr-2 h-4 w-4 text-muted-foreground\" /> ACP Form PDF (Optional)\n            </Label>\n            {currentAcpDocumentName && !newAcpDocumentFile?.[0] && (\n                <p className=\"text-xs text-muted-foreground flex items-center\">\n                  <FileText className=\"mr-1 h-3.5 w-3.5\" /> Current: {currentAcpDocumentName}\n                </p>\n            )}\n            <Input id=\"acpDocument\" type=\"file\" {...register('acpDocument')} accept=\".pdf\" className=\"file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"/>\n            {errors.acpDocument && <p className=\"text-sm text-destructive mt-1\">{(errors.acpDocument as any)?.message}</p>}","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":410,"to":420}}}}],["265",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<p className=\"text-xs text-muted-foreground\">Upload a new PDF to replace. Max 5MB.</p>\n             {currentAcpDocumentName && (\n              <Button\n                type=\"button\"\n                variant=\"link\"\n                size=\"sm\"\n                className=\"text-xs text-destructive p-0 h-auto\"\n                onClick={() => {\n                  setValue('acpDocument', null);\n                  toast({ title: \"ACP Form Cleared\", description: \"The ACP Form association will be removed upon saving.\"});\n                }}\n              >\n                Clear Current ACP Form\n              </Button>\n            )}\n          </div>","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":421,"to":436}}}}],["266",{"pageContent":"File: src/components/trailer/EditTrailerDialog.tsx\n<DialogFooter className=\"pt-6\">\n            <Button type=\"button\" variant=\"outline\" onClick={handleClose}>Cancel</Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Saving...' : 'Save Changes'}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}","metadata":{"source":"src/components/trailer/EditTrailerDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":439,"to":449}}}}],["267",{"pageContent":"File: src/app/quiz/reports/page.tsx\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { QuizReport } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { ListChecks, FileText, User, Calendar as CalendarIcon, ArrowRightCircle, Inbox } from 'lucide-react';\nimport Link from 'next/link';\nimport { format, parseISO } from 'date-fns';\n\nexport default function QuizReportsListPage() {\n  const { quizReports } = useWarehouse();\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  const sortedReports = useMemo(() => {\n    if (!isClient) return [];\n    return [...quizReports].sort((a, b) => parseISO(b.completedAt).getTime() - parseISO(a.completedAt).getTime());\n  }, [quizReports, isClient]);","metadata":{"source":"src/app/quiz/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":25}}}}],["268",{"pageContent":"File: src/app/quiz/reports/page.tsx\nconst formatDate = (dateString: string) => {\n    try {\n      return format(parseISO(dateString), 'PPpp'); // e.g., Jul 20, 2024, 2:30 PM\n    } catch (error) {\n      return \"Invalid Date\";\n    }\n  };\n  \n  const pageTitle = \"Saved Quiz Reports\";","metadata":{"source":"src/app/quiz/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":27,"to":35}}}}],["269",{"pageContent":"File: src/app/quiz/reports/page.tsx\nif (!isClient) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow\">\n          <Skeleton className=\"h-10 w-1/3\" />\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {[...Array(3)].map((_, i) => (\n            <Card key={i} className=\"shadow-md\">\n              <CardHeader>\n                <Skeleton className=\"h-6 w-3/4\" />\n                <Skeleton className=\"h-4 w-1/2 mt-1\" />\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                <Skeleton className=\"h-4 w-2/3\" />\n                <Skeleton className=\"h-4 w-2/3\" />\n              </CardContent>\n              <CardFooter>\n                <Skeleton className=\"h-9 w-24\" />\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      </div>\n    );\n  }","metadata":{"source":"src/app/quiz/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":37,"to":62}}}}],["270",{"pageContent":"File: src/app/quiz/reports/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow\">\n        <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n          <ListChecks className=\"mr-3 h-8 w-8 text-primary\" />\n          {pageTitle}\n        </h1>\n        <Button asChild variant=\"outline\">\n          <Link href=\"/quiz/stock-check\">\n            Start New Quiz\n          </Link>\n        </Button>\n      </div>","metadata":{"source":"src/app/quiz/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":64,"to":76}}}}],["271",{"pageContent":"File: src/app/quiz/reports/page.tsx\n{sortedReports.length === 0 ? (\n        <div className=\"min-h-[400px] flex flex-col items-center justify-center text-center border-2 border-dashed border-border rounded-md p-8 bg-card shadow\">\n          <Inbox className=\"h-16 w-16 text-muted-foreground mb-4\" />\n          <p className=\"text-xl text-muted-foreground\">No quiz reports found.</p>\n          <p className=\"text-sm text-muted-foreground mt-2\">Complete a stock check quiz to see reports here.</p>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {sortedReports.map(report => (\n            <Card key={report.id} className=\"shadow-lg hover:shadow-xl transition-shadow flex flex-col\">\n              <CardHeader>\n                <CardTitle className=\"text-xl text-primary flex items-center\">\n                  <FileText className=\"mr-2 h-5 w-5\" />\n                  Report ID: ...{report.id.slice(-6)}\n                </CardTitle>","metadata":{"source":"src/app/quiz/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":78,"to":92}}}}],["272",{"pageContent":"File: src/app/quiz/reports/page.tsx\n</CardTitle>\n                <CardDescription>Completed on {formatDate(report.completedAt)}</CardDescription>\n              </CardHeader>\n              <CardContent className=\"flex-grow space-y-1 text-sm\">\n                <div className=\"flex items-center\">\n                  <User className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  <strong>Completed By:</strong>\n                  <span className=\"ml-1.5\">{report.completedBy}</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <ListChecks className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  <strong>Items Checked:</strong>\n                  <span className=\"ml-1.5\">{report.items.length}</span>\n                </div>\n              </CardContent>\n              <CardFooter>\n                <Button asChild variant=\"default\" size=\"sm\" className=\"w-full\">\n                  <Link href={`/quiz/reports/${report.id}`}>","metadata":{"source":"src/app/quiz/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":92,"to":109}}}}],["273",{"pageContent":"File: src/app/quiz/reports/page.tsx\nView Details <ArrowRightCircle className=\"ml-2 h-4 w-4\" />\n                  </Link>\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}","metadata":{"source":"src/app/quiz/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":110,"to":120}}}}],["274",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\n'use client';","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":2}}}}],["275",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\nimport { useState, useEffect, useMemo } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Trailer } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter, CardDescription } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { BarChart3, Printer, Info, Briefcase, CalendarCheck, ArrowLeft, ArrowRight, Undo2 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from '@/components/ui/chart';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip as RechartsTooltip, ResponsiveContainer, Cell } from 'recharts';\nimport {\n  format,\n  parseISO,\n  startOfMonth,\n  endOfMonth,\n  isWithinInterval,\n  addMonths,\n  subMonths,\n} from 'date-fns';\nimport type { ChartConfig } from '@/components/ui/chart';","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":4,"to":27}}}}],["276",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\ninterface CompanyTrailerCount {\n  companyName: string;\n  trailerCount: number;\n}\n\n// Function to generate distinct colors for the chart\nconst generateChartColors = (numColors: number): string[] => {\n  const colors: string[] = [];\n  for (let i = 0; i < numColors; i++) {\n    // Generate HSL colors with varying hue\n    const hue = (i * (360 / (numColors + 1))) % 360;\n    colors.push(`hsl(${hue}, 70%, 60%)`);\n  }\n  return colors;\n};\n\n\nexport default function MonthlyCompanyTrailersReportPage() {\n  const { trailers } = useWarehouse();\n  const [isClient, setIsClient] = useState(false);\n  const [displayDate, setDisplayDate] = useState(new Date()); // Date to determine the month to display\n  const [clientGeneratedDate, setClientGeneratedDate] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsClient(true);\n    setClientGeneratedDate(new Date().toLocaleDateString());\n  }, []);","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":29,"to":55}}}}],["277",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\nconst currentMonthStart = useMemo(() => startOfMonth(displayDate), [displayDate]);\n  const currentMonthEnd = useMemo(() => endOfMonth(displayDate), [displayDate]);\n\n  const reportData = useMemo((): CompanyTrailerCount[] => {\n    if (!isClient) return [];\n\n    const companyCounts: { [companyName: string]: number } = {};\n\n    trailers.forEach(trailer => {\n      if (trailer.arrivalDate) {\n        try {\n          const arrival = parseISO(trailer.arrivalDate);\n          if (isWithinInterval(arrival, { start: currentMonthStart, end: currentMonthEnd })) {\n            const companyName = trailer.company || 'Unknown Company';\n            companyCounts[companyName] = (companyCounts[companyName] || 0) + 1;\n          }\n        } catch (error) {\n          console.error(\"Error processing trailer for company report:\", trailer.id, error);\n        }\n      }\n    });","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":57,"to":77}}}}],["278",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\nreturn Object.entries(companyCounts)\n      .map(([companyName, trailerCount]) => ({ companyName, trailerCount }))\n      .sort((a, b) => b.trailerCount - a.trailerCount); // Sort by most trailers first\n  }, [trailers, isClient, currentMonthStart, currentMonthEnd]);\n  \n  const chartColors = useMemo(() => generateChartColors(reportData.length), [reportData.length]);\n\n  const chartConfig = useMemo((): ChartConfig => {\n    const config: ChartConfig = {};\n    reportData.forEach((item, index) => {\n      config[item.companyName] = {\n        label: item.companyName,\n        color: chartColors[index % chartColors.length],\n      };\n    });\n    return config;\n  }, [reportData, chartColors]);\n\n\n  const handlePrintReport = () => {\n    window.print();\n  };\n  \n  const handlePreviousMonth = () => {\n    setDisplayDate(prev => subMonths(prev, 1));\n  };\n\n  const handleNextMonth = () => {\n    setDisplayDate(prev => addMonths(prev, 1));\n  };","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":79,"to":108}}}}],["279",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\nconst handleThisMonth = () => {\n    setDisplayDate(new Date());\n  };\n\n  const displayedMonthFormatted = format(displayDate, 'MMMM yyyy');\n\n  const pageTitle = `Monthly Trailer Arrivals by Company`;\n  const cardTitleText = `Trailer Arrivals per Company - ${displayedMonthFormatted}`;\n  const cardDescriptionText = `Summary of trailers that arrived in ${displayedMonthFormatted}, grouped by company.`;\n  const printTitleText = 'Monthly Trailer Arrivals by Company Report';\n  const printPeriodText = `For month: ${displayedMonthFormatted}`;","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":110,"to":120}}}}],["280",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\nconst ReportSkeleton = () => (\n    <div className=\"space-y-4\">\n      <Skeleton className=\"h-[300px] w-full\" />\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>Company Name</TableHead>\n            <TableHead className=\"text-right\">Trailers Arrived</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {[...Array(3)].map((_, i) => (\n            <TableRow key={i}>\n              <TableCell><Skeleton className=\"h-4 w-[150px]\" /></TableCell>\n              <TableCell className=\"text-right\"><Skeleton className=\"h-4 w-[50px] ml-auto\" /></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  );","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":122,"to":142}}}}],["281",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow no-print\">\n        <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n          <BarChart3 className=\"mr-3 h-8 w-8 text-primary\" />\n          {pageTitle}\n        </h1>\n        <div className=\"flex items-center gap-1 sm:gap-2 flex-wrap justify-center\">\n           <Button variant=\"outline\" onClick={handlePreviousMonth} aria-label=\"Previous month\">\n            <ArrowLeft className=\"h-4 w-4 mr-0 sm:mr-2\" /> <span className=\"hidden sm:inline\">Prev Month</span>\n          </Button>\n          <Button variant=\"outline\" onClick={handleThisMonth}>\n             <Undo2 className=\"mr-0 sm:mr-2 h-4 w-4\" /> <span className=\"hidden sm:inline\">This Month</span>\n          </Button>\n          <Button variant=\"outline\" onClick={handleNextMonth} aria-label=\"Next month\">","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":144,"to":158}}}}],["282",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\n<span className=\"hidden sm:inline\">Next Month</span><ArrowRight className=\"h-4 w-4 ml-0 sm:ml-2\" />\n          </Button>\n          <Button onClick={handlePrintReport} variant=\"outline\">\n            <Printer className=\"mr-2 h-4 w-4\" />\n            Print Report\n          </Button>\n        </div>\n      </div>","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":159,"to":166}}}}],["283",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\n<Card className=\"shadow-lg printable-area\">\n        <CardHeader className=\"no-print\">\n          <CardTitle className=\"text-xl sm:text-2xl text-primary\">{cardTitleText}</CardTitle>\n          <CardDescription>{cardDescriptionText}</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"print-only-block mb-4\">\n            <h2 className=\"text-xl font-semibold text-foreground\">{printTitleText}</h2>\n            <p className=\"text-sm text-muted-foreground\">{printPeriodText}</p>\n            {clientGeneratedDate && <p className=\"text-xs text-muted-foreground\">Date Generated: {clientGeneratedDate}</p>}\n          </div>","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":168,"to":178}}}}],["284",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\n{!isClient ? (\n            <ReportSkeleton />\n          ) : reportData.length === 0 ? (\n            <div className=\"min-h-[200px] flex flex-col items-center justify-center text-center border-2 border-dashed border-border rounded-md p-8\">\n              <CalendarCheck className=\"h-16 w-16 text-muted-foreground mb-4\" />\n              <p className=\"text-xl text-muted-foreground\">\n                No trailer arrivals recorded for any company in {displayedMonthFormatted}.\n              </p>\n            </div>\n          ) : (\n            <div className=\"space-y-8\">\n              {/* Chart Section */}\n              <div className=\"h-[350px] w-full\">\n                <ChartContainer config={chartConfig} className=\"min-h-[200px] w-full\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart data={reportData} margin={{ top: 5, right: 20, left: -20, bottom: 60 }}>\n                      <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":180,"to":196}}}}],["285",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\n<XAxis \n                        dataKey=\"companyName\" \n                        angle={-45}\n                        textAnchor=\"end\"\n                        height={70}\n                        interval={0}\n                        tick={{ fontSize: 10 }}\n                      />\n                      <YAxis allowDecimals={false} />\n                      <RechartsTooltip\n                        cursor={{ fill: 'hsl(var(--muted))', fillOpacity: 0.5 }}\n                        content={<ChartTooltipContent />}\n                      />\n                      <Bar dataKey=\"trailerCount\" radius={[4, 4, 0, 0]}>\n                        {reportData.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={chartColors[index % chartColors.length]} />\n                        ))}\n                      </Bar>\n                    </BarChart>\n                  </ResponsiveContainer>\n                </ChartContainer>\n              </div>","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":197,"to":218}}}}],["286",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\n{/* Table Section */}\n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead className=\"whitespace-nowrap\"><Briefcase className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Company Name</TableHead>\n                      <TableHead className=\"text-right whitespace-nowrap\"><BarChart3 className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Trailers Arrived</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {reportData.map((item) => (\n                      <TableRow key={item.companyName}>\n                        <TableCell className=\"font-medium\">{item.companyName}</TableCell>\n                        <TableCell className=\"text-right font-semibold text-primary\">{item.trailerCount}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":220,"to":236}}}}],["287",{"pageContent":"File: src/app/reports/monthly-company-trailers/page.tsx\n</TableBody>\n                </Table>\n              </div>\n            </div>\n          )}\n        </CardContent>\n        {isClient && reportData.length > 0 && (\n          <CardFooter className=\"text-sm text-muted-foreground border-t pt-4 no-print\">\n            <Info className=\"h-4 w-4 mr-2 text-primary\" />\n            Displaying trailer arrival counts for {reportData.length} companies in {displayedMonthFormatted}.\n          </CardFooter>\n        )}\n      </Card>\n    </div>\n  );\n}","metadata":{"source":"src/app/reports/monthly-company-trailers/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":236,"to":251}}}}],["288",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Shipment, Trailer } from '@/types'; \nimport { Card, CardContent, CardHeader, CardTitle, CardFooter, CardDescription } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { AlertOctagon, PackageSearch, Printer, Info, Truck, CalendarDays, Hash, Briefcase, TrendingUp, ArrowLeft, ArrowRight, Undo2 } from 'lucide-react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport {\n  format,\n  parseISO,\n  startOfMonth,\n  endOfMonth,\n  isWithinInterval,\n  differenceInDays,\n  addMonths,\n  subMonths,\n} from 'date-fns';","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":23}}}}],["289",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\ninterface OverdueReleasedReportItem {\n  shipmentId: string;\n  stsJob: number;\n  customerJobNumber?: string;\n  trailerId: string;\n  trailerName?: string;\n  trailerCompany?: string;\n  storageExpiryDate: string; \n  storageExpiryDateFormatted: string;\n  releasedAt: string; \n  releasedAtFormatted: string;\n  daysOverdue: number;\n}\n\nexport default function MonthlyOverdueReleasedReportPage() {\n  const { shipments, getTrailerById, trailers: allTrailers } = useWarehouse();\n  const [isClient, setIsClient] = useState(false);\n  const [displayDate, setDisplayDate] = useState(new Date());\n  const [companyFilter, setCompanyFilter] = useState<string>('all');\n  const [clientGeneratedDate, setClientGeneratedDate] = useState<string | null>(null);","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":25,"to":44}}}}],["290",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\nuseEffect(() => {\n    setIsClient(true);\n    setClientGeneratedDate(new Date().toLocaleDateString());\n  }, []);\n  \n  const currentMonthStart = useMemo(() => startOfMonth(displayDate), [displayDate]);\n  const currentMonthEnd = useMemo(() => endOfMonth(displayDate), [displayDate]);\n\n  const formatDateSafe = (dateString?: string, dateFormat = 'PP') => {\n    if (!dateString) return 'N/A';\n    try {\n      return format(parseISO(dateString), dateFormat);\n    } catch (error) {\n      return \"Invalid Date\";\n    }\n  };\n\n  const uniqueCompanies = useMemo(() => {\n    if (!isClient) return [];\n    const companies = new Set<string>();\n    allTrailers.forEach(trailer => {\n      if (trailer.company) {\n        companies.add(trailer.company);\n      }\n    });\n    return Array.from(companies).sort();\n  }, [allTrailers, isClient]);\n\n  const reportData = useMemo((): OverdueReleasedReportItem[] => {\n    if (!isClient) return [];","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":46,"to":75}}}}],["291",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\nreturn shipments\n      .filter(shipment => {\n        if (!shipment.releasedAt) return false;\n        try {\n          const releasedDate = parseISO(shipment.releasedAt);\n          return isWithinInterval(releasedDate, { start: currentMonthStart, end: currentMonthEnd });\n        } catch (error) {\n          return false;\n        }\n      })\n      .map(shipment => {\n        const trailer = getTrailerById(shipment.trailerId);\n        if (!trailer || !trailer.storageExpiryDate || !shipment.releasedAt) {\n          return null; \n        }\n        \n        if (companyFilter !== 'all' && trailer.company?.toLowerCase() !== companyFilter.toLowerCase()) {\n          return null;\n        }\n\n        try {\n          const releasedDate = parseISO(shipment.releasedAt);\n          const expiryDate = parseISO(trailer.storageExpiryDate);","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":77,"to":99}}}}],["292",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\nif (releasedDate > expiryDate) {\n            const daysOverdue = differenceInDays(releasedDate, expiryDate);\n            return {\n              shipmentId: shipment.id,\n              stsJob: shipment.stsJob,\n              customerJobNumber: shipment.customerJobNumber,\n              trailerId: shipment.trailerId,\n              trailerName: trailer.name,\n              trailerCompany: trailer.company,\n              storageExpiryDate: trailer.storageExpiryDate,\n              storageExpiryDateFormatted: formatDateSafe(trailer.storageExpiryDate),\n              releasedAt: shipment.releasedAt,\n              releasedAtFormatted: formatDateSafe(shipment.releasedAt, 'PPpp'),\n              daysOverdue,\n            };\n          }\n        } catch (error) {\n          console.error(\"Error processing shipment for overdue report:\", shipment.id, error);\n          return null;\n        }\n        return null;\n      })\n      .filter((item): item is OverdueReleasedReportItem => item !== null)","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":101,"to":123}}}}],["293",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n.sort((a, b) => b.daysOverdue - a.daysOverdue); \n  }, [shipments, getTrailerById, isClient, currentMonthStart, currentMonthEnd, companyFilter]);","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":124,"to":125}}}}],["294",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\nconst handlePrintReport = () => {\n    window.print();\n  };\n\n  const handlePreviousMonth = () => {\n    setDisplayDate(prev => subMonths(prev, 1));\n  };\n\n  const handleNextMonth = () => {\n    setDisplayDate(prev => addMonths(prev, 1));\n  };\n\n  const handleThisMonth = () => {\n    setDisplayDate(new Date());\n  };\n\n  const displayedMonthFormatted = format(displayDate, 'MMMM yyyy');\n  const selectedCompanyName = companyFilter === 'all' ? 'All Companies' : uniqueCompanies.find(c => c.toLowerCase() === companyFilter) || companyFilter;","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":127,"to":144}}}}],["295",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\nconst pageTitle = 'Monthly Overdue Released Shipments';\n  const cardTitleText = `Overdue Shipments Released in ${displayedMonthFormatted}`;\n  const cardDescriptionText = `Shipments released in ${displayedMonthFormatted} after their trailer's storage expiry date. ${companyFilter !== 'all' ? `Filtered by company: ${selectedCompanyName}.` : ''}`;\n  const printTitleText = 'Monthly Overdue Released Shipments Report';\n  const printPeriodText = `For month: ${displayedMonthFormatted}`;","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":147,"to":151}}}}],["296",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\nconst ReportSkeleton = () => (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Trailer ID</TableHead>\n          <TableHead>STS Job</TableHead>\n          <TableHead>Trailer Name</TableHead>\n          <TableHead>Company</TableHead>\n          <TableHead>Free Storage Expiry</TableHead>\n          <TableHead>Released At</TableHead>\n          <TableHead className=\"text-right\">Days Overdue</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {[...Array(5)].map((_, i) => (\n          <TableRow key={i}>\n            <TableCell><Skeleton className=\"h-4 w-[80px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[60px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell> {/* Storage Expiry Skeleton */}","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":154,"to":174}}}}],["297",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n<TableCell><Skeleton className=\"h-4 w-[150px]\" /></TableCell>\n            <TableCell className=\"text-right\"><Skeleton className=\"h-4 w-[70px] ml-auto\" /></TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":175,"to":181}}}}],["298",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow no-print\">\n        <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n          <AlertOctagon className=\"mr-3 h-8 w-8 text-primary\" />\n          {pageTitle}\n        </h1>\n        <div className=\"flex items-center gap-1 sm:gap-2 flex-wrap justify-center\">\n          <Button variant=\"outline\" onClick={handlePreviousMonth} aria-label=\"Previous month\">\n            <ArrowLeft className=\"h-4 w-4 mr-0 sm:mr-2\" /> <span className=\"hidden sm:inline\">Prev Month</span>\n          </Button>\n          <Button variant=\"outline\" onClick={handleThisMonth}>\n             <Undo2 className=\"mr-0 sm:mr-2 h-4 w-4\" /> <span className=\"hidden sm:inline\">This Month</span>\n          </Button>\n          <Button variant=\"outline\" onClick={handleNextMonth} aria-label=\"Next month\">","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":183,"to":197}}}}],["299",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n<span className=\"hidden sm:inline\">Next Month</span><ArrowRight className=\"h-4 w-4 ml-0 sm:ml-2\" />\n          </Button>\n           <Select value={companyFilter} onValueChange={(value) => setCompanyFilter(value)}>\n            <SelectTrigger className=\"w-full sm:w-auto min-w-[180px]\">\n               <div className=\"flex items-center\">\n                 <Briefcase className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                 <SelectValue placeholder=\"Filter by company\" />\n               </div>\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Companies</SelectItem>\n              {isClient && uniqueCompanies.map(company => (\n                <SelectItem key={company} value={company.toLowerCase()}>{company}</SelectItem>\n              ))}\n              {!isClient && <Skeleton className=\"h-8 w-full my-1\" />}\n            </SelectContent>\n          </Select>\n          <Button onClick={handlePrintReport} variant=\"outline\">","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":198,"to":215}}}}],["300",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n<Printer className=\"mr-2 h-4 w-4\" />\n            Print Report\n          </Button>\n        </div>\n      </div>","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":216,"to":220}}}}],["301",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n<Card className=\"shadow-lg printable-area\">\n        <CardHeader className=\"no-print\">\n          <CardTitle className=\"text-xl sm:text-2xl text-primary\">{cardTitleText}</CardTitle>\n          <CardDescription>\n            {cardDescriptionText}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"print-only-block mb-4\">\n            <h2 className=\"text-xl font-semibold text-foreground\">{printTitleText}</h2>\n            <p className=\"text-sm text-muted-foreground\">\n              {printPeriodText}\n            </p>\n            {companyFilter !== 'all' && <p className=\"text-sm text-muted-foreground\">Filtered by Company: {selectedCompanyName}</p>}\n             {clientGeneratedDate && <p className=\"text-xs text-muted-foreground\">Date Generated: {clientGeneratedDate}</p>}\n          </div>","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":222,"to":237}}}}],["302",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n{!isClient ? (\n            <ReportSkeleton />\n          ) : reportData.length === 0 ? (\n            <div className=\"min-h-[200px] flex flex-col items-center justify-center text-center border-2 border-dashed border-border rounded-md p-8\">\n              <PackageSearch className=\"h-16 w-16 text-muted-foreground mb-4\" />\n              <p className=\"text-xl text-muted-foreground\">\n                No overdue shipments found released in {displayedMonthFormatted} {companyFilter !== 'all' ? `for ${selectedCompanyName}` : ''}.\n              </p>\n              <p className=\"text-sm text-muted-foreground mt-2\">\n                This means all shipments released this month {companyFilter !== 'all' ? `for ${selectedCompanyName}` : ''} were done so before their storage expiry date, or no shipments met the criteria.\n              </p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":239,"to":254}}}}],["303",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n<TableHeader>\n                  <TableRow>\n                    <TableHead className=\"whitespace-nowrap\"><Truck className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Trailer ID</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Hash className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>STS Job</TableHead>\n                    <TableHead className=\"whitespace-nowrap\">Trailer Name</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Briefcase className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Trailer Company</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Briefcase className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Cust. Job No.</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><CalendarDays className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Free Storage Expiry</TableHead>","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":254,"to":261}}}}],["304",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n<TableHead className=\"whitespace-nowrap\"><CalendarDays className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Released At</TableHead>\n                    <TableHead className=\"text-right whitespace-nowrap\"><TrendingUp className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Days Overdue</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {reportData.map((item) => (\n                    <TableRow key={item.shipmentId}>\n                       <TableCell>\n                        <Link href={`/trailers/${item.trailerId}`} className=\"text-primary hover:underline print:text-foreground print:no-underline\">\n                          {item.trailerId}\n                        </Link>\n                      </TableCell>\n                      <TableCell className=\"font-medium\">","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":262,"to":274}}}}],["305",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n<Link href={`/shipments/${item.shipmentId}`} className=\"text-primary hover:underline print:text-foreground print:no-underline\">\n                          {item.stsJob}\n                        </Link>\n                      </TableCell>\n                      <TableCell>{item.trailerName || 'N/A'}</TableCell>\n                      <TableCell>{item.trailerCompany || 'N/A'}</TableCell>\n                      <TableCell>{item.customerJobNumber || 'N/A'}</TableCell>\n                      <TableCell className=\"text-destructive font-medium\">{item.storageExpiryDateFormatted}</TableCell>\n                      <TableCell>{item.releasedAtFormatted}</TableCell>\n                      <TableCell className=\"text-right font-bold text-destructive\">{item.daysOverdue}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":275,"to":291}}}}],["306",{"pageContent":"File: src/app/reports/monthly-overdue-released/page.tsx\n)}\n        </CardContent>\n         {isClient && reportData.length > 0 && (\n            <CardFooter className=\"text-sm text-muted-foreground border-t pt-4 no-print\">\n                <Info className=\"h-4 w-4 mr-2 text-primary\" />\n                Displaying {reportData.length} overdue shipment(s) released in {displayedMonthFormatted} {companyFilter !== 'all' ? `for ${selectedCompanyName}` : ''}.\n            </CardFooter>\n        )}\n      </Card>\n    </div>\n  );\n}","metadata":{"source":"src/app/reports/monthly-overdue-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":290,"to":301}}}}],["307",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Shipment, Trailer } from '@/types'; // LocationInfo is part of Shipment\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter, CardDescription } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Warehouse, PackageSearch, Printer, Info, Truck, CalendarDays, Hash, Briefcase, MapPin, Box as BoxIcon } from 'lucide-react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { format, parseISO } from 'date-fns';","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":13}}}}],["308",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\ninterface UnreleasedStockLocationItem {\n  shipmentId: string;\n  stsJob: number;\n  customerJobNumber?: string;\n  trailerId: string;\n  trailerName?: string;\n  trailerCompany?: string;\n  trailerArrivalDateRaw?: string; // Store raw date for sorting\n  trailerArrivalDateFormatted: string; // Formatted for display\n  shipmentQuantity: number;\n  locationName: string;\n  locationPallets?: number;\n}\n\nexport default function UnreleasedStockLocationsReportPage() {\n  const { shipments, getTrailerById } = useWarehouse();\n  const [isClient, setIsClient] = useState(false);\n  const [clientGeneratedDate, setClientGeneratedDate] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsClient(true);\n    setClientGeneratedDate(new Date().toLocaleDateString());\n  }, []);\n\n  const formatDateSafe = (dateString?: string, dateFormat = 'PP') => {\n    if (!dateString) return 'N/A';\n    try {\n      return format(parseISO(dateString), dateFormat);\n    } catch (error) {\n      return \"Invalid Date\";\n    }\n  };","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":15,"to":46}}}}],["309",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\nconst reportData = useMemo((): UnreleasedStockLocationItem[] => {\n    if (!isClient) return [];\n\n    const expandedReportItems: UnreleasedStockLocationItem[] = [];\n\n    shipments\n      .filter(shipment => !shipment.releasedAt) // Filter for unreleased shipments\n      .forEach(shipment => {\n        const trailer = getTrailerById(shipment.trailerId);\n        const shipmentLocations = shipment.locations && shipment.locations.length > 0\n          ? shipment.locations\n          : [{ name: 'Pending Assignment', pallets: undefined }];","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":48,"to":59}}}}],["310",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\nshipmentLocations.forEach(loc => {\n          expandedReportItems.push({\n            shipmentId: shipment.id,\n            stsJob: shipment.stsJob,\n            customerJobNumber: shipment.customerJobNumber,\n            trailerId: shipment.trailerId,\n            trailerName: trailer?.name,\n            trailerCompany: trailer?.company,\n            trailerArrivalDateRaw: trailer?.arrivalDate, // Store raw date\n            trailerArrivalDateFormatted: formatDateSafe(trailer?.arrivalDate),\n            shipmentQuantity: shipment.quantity,\n            locationName: loc.name,\n            locationPallets: loc.pallets,\n          });\n        });\n      });","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":61,"to":76}}}}],["311",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\nreturn expandedReportItems.sort((a, b) => {\n      // Sort \"Pending Assignment\" to the end\n      if (a.locationName === 'Pending Assignment' && b.locationName !== 'Pending Assignment') return 1;\n      if (a.locationName !== 'Pending Assignment' && b.locationName === 'Pending Assignment') return -1;\n      \n      // Primary sort by locationName (A-Z)\n      if (a.locationName.toLowerCase() < b.locationName.toLowerCase()) return -1;\n      if (a.locationName.toLowerCase() > b.locationName.toLowerCase()) return 1;\n      \n      // Secondary sort by trailerArrivalDateRaw (newest first)\n      const dateA = a.trailerArrivalDateRaw ? parseISO(a.trailerArrivalDateRaw).getTime() : 0;\n      const dateB = b.trailerArrivalDateRaw ? parseISO(b.trailerArrivalDateRaw).getTime() : 0;\n      if (dateB !== dateA) return dateB - dateA;","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":78,"to":90}}}}],["312",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\n// Tertiary sort by trailerId (A-Z)\n      if (a.trailerId.toLowerCase() < b.trailerId.toLowerCase()) return -1;\n      if (a.trailerId.toLowerCase() > b.trailerId.toLowerCase()) return 1;\n\n      // Quaternary sort by stsJob (ascending)\n      return a.stsJob - b.stsJob;\n    });\n  }, [shipments, getTrailerById, isClient]);\n\n  const handlePrintReport = () => {\n    window.print();\n  };\n\n  const pageTitle = 'Unreleased Warehouse Stock by Location';\n  const cardDescriptionText = 'Detailed view of all unreleased shipments, their current locations, quantities, and associated trailer arrival dates. Each location is listed separately and sorted by location name.';\n  const printTitleText = 'Unreleased Warehouse Stock by Location Report';","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":92,"to":107}}}}],["313",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\nconst ReportSkeleton = () => (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Location</TableHead>\n          <TableHead>Trailer ID</TableHead>\n          <TableHead>STS Job</TableHead>\n          <TableHead>Trailer Company</TableHead>\n          <TableHead>Trailer Arrival</TableHead>\n          <TableHead>Cust. Job No.</TableHead>\n          <TableHead className=\"text-right\">Pieces</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {[...Array(7)].map((_, i) => (\n          <TableRow key={i}>\n            <TableCell><Skeleton className=\"h-4 w-[150px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[80px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[60px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":109,"to":130}}}}],["314",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\n<TableCell className=\"text-right\"><Skeleton className=\"h-4 w-[50px] ml-auto\" /></TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":131,"to":136}}}}],["315",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow no-print\">\n        <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n          <Warehouse className=\"mr-3 h-8 w-8 text-primary\" />\n          {pageTitle}\n        </h1>\n        <div className=\"flex items-center gap-2\">\n          <Button onClick={handlePrintReport} variant=\"outline\">\n            <Printer className=\"mr-2 h-4 w-4\" />\n            Print Report\n          </Button>\n          <Button variant=\"outline\" asChild>\n            <Link href=\"/reports\">\n                Back to Reports\n            </Link>\n          </Button>\n        </div>\n      </div>","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":138,"to":156}}}}],["316",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\n<Card className=\"shadow-lg printable-area\">\n        <CardHeader className=\"no-print\">\n          <CardTitle className=\"text-xl sm:text-2xl text-primary\">{pageTitle}</CardTitle>\n          <CardDescription>{cardDescriptionText}</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"print-only-block mb-4\">\n            <h2 className=\"text-xl font-semibold text-foreground\">{printTitleText}</h2>\n            {clientGeneratedDate && <p className=\"text-xs text-muted-foreground\">Date Generated: {clientGeneratedDate}</p>}\n          </div>","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":158,"to":167}}}}],["317",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\n{!isClient ? (\n            <ReportSkeleton />\n          ) : reportData.length === 0 ? (\n            <div className=\"min-h-[200px] flex flex-col items-center justify-center text-center border-2 border-dashed border-border rounded-md p-8\">\n              <PackageSearch className=\"h-16 w-16 text-muted-foreground mb-4\" />\n              <p className=\"text-xl text-muted-foreground\">\n                No unreleased shipments found in the warehouse.\n              </p>\n              <p className=\"text-sm text-muted-foreground mt-2\">\n                All current stock has been marked as released.\n              </p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead className=\"whitespace-nowrap\"><MapPin className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Location</TableHead>","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":169,"to":186}}}}],["318",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\n<TableHead className=\"whitespace-nowrap\"><Truck className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Trailer ID</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Hash className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>STS Job</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Briefcase className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Trailer Company</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><CalendarDays className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Trailer Arrival</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Briefcase className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Cust. Job No.</TableHead>\n                    <TableHead className=\"text-right whitespace-nowrap\"><BoxIcon className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Pieces</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":187,"to":195}}}}],["319",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\n<TableBody>\n                  {reportData.map((item, index) => ( \n                    <TableRow key={`${item.shipmentId}-${item.locationName}-${index}`}>\n                      <TableCell className=\"font-semibold\">\n                        {item.locationName}\n                        {item.locationPallets !== undefined ? ` (${item.locationPallets} plts)` : ''}\n                      </TableCell>\n                      <TableCell>\n                        <Link href={`/trailers/${item.trailerId}`} className=\"text-primary hover:underline print:text-foreground print:no-underline\">\n                          {item.trailerId}\n                        </Link>\n                      </TableCell>\n                      <TableCell className=\"font-medium\">\n                        <Link href={`/shipments/${item.shipmentId}`} className=\"text-primary hover:underline print:text-foreground print:no-underline\">\n                          {item.stsJob}\n                        </Link>","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":195,"to":210}}}}],["320",{"pageContent":"File: src/app/reports/unreleased-stock-locations/page.tsx\n</Link>\n                      </TableCell>\n                      <TableCell>{item.trailerCompany || 'N/A'}</TableCell>\n                      <TableCell>{item.trailerArrivalDateFormatted}</TableCell>\n                      <TableCell>{item.customerJobNumber || 'N/A'}</TableCell>\n                      <TableCell className=\"text-right font-semibold\">{item.shipmentQuantity}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n         {isClient && reportData.length > 0 && (\n            <CardFooter className=\"text-sm text-muted-foreground border-t pt-4 no-print\">\n                <Info className=\"h-4 w-4 mr-2 text-primary\" />\n                Displaying {reportData.length} unreleased shipment location entries.\n            </CardFooter>\n        )}\n      </Card>\n    </div>\n  );\n}","metadata":{"source":"src/app/reports/unreleased-stock-locations/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":210,"to":232}}}}],["321",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Shipment } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter, CardDescription } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Clock, PackageSearch, Printer, Info, Truck, CalendarDays, Users, Send, Hash, Briefcase, ArrowLeft, ArrowRight, Undo2, Fingerprint, CalendarClock } from 'lucide-react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport {\n  format,\n  parseISO,\n  startOfMonth,\n  endOfMonth,\n  isWithinInterval,\n  addMonths,\n  subMonths,\n} from 'date-fns';","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":21}}}}],["322",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\ninterface MonthlyReleasedReportItem {\n  shipmentId: string;\n  stsJob: number;\n  customerJobNumber?: string;\n  trailerId: string;\n  trailerName?: string;\n  trailerCompany?: string;\n  releasedAt: string; // ISO string\n  releasedAtFormatted: string;\n  importer: string;\n  exporter: string;\n  clearanceDate?: string | null; // ISO string or null\n  clearanceDateFormatted?: string;\n  mrn?: string;\n}\n\nexport default function MonthlyReleasedReportPage() {\n  const { shipments, getTrailerById } = useWarehouse();\n  const [isClient, setIsClient] = useState(false);\n  const [displayDate, setDisplayDate] = useState(new Date()); // Date to determine the month to display\n  const [clientGeneratedDate, setClientGeneratedDate] = useState<string | null>(null);\n\n\n  useEffect(() => {\n    setIsClient(true);\n    setClientGeneratedDate(new Date().toLocaleDateString());\n  }, []);\n  \n  const currentPeriodStart = useMemo(() => {\n    return startOfMonth(displayDate);\n  }, [displayDate]);","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":23,"to":53}}}}],["323",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\nconst currentPeriodEnd = useMemo(() => {\n    return endOfMonth(displayDate);\n  }, [displayDate]);\n\n  const formatDateSafe = (dateString?: string | null, dateFormat = 'PPpp') => {\n    if (!dateString) return 'N/A';\n    try {\n      return format(parseISO(dateString), dateFormat);\n    } catch (error) {\n      return \"Invalid Date\";\n    }\n  };\n\n  const reportData = useMemo((): MonthlyReleasedReportItem[] => {\n    if (!isClient) return [];","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":55,"to":69}}}}],["324",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\nreturn shipments\n      .filter(shipment => {\n        if (!shipment.releasedAt) return false;\n        try {\n          const releasedDate = parseISO(shipment.releasedAt);\n          return isWithinInterval(releasedDate, { start: currentPeriodStart, end: currentPeriodEnd });\n        } catch (error) {\n          return false;\n        }\n      })\n      .map(shipment => {\n        const trailer = getTrailerById(shipment.trailerId);\n        return {\n          shipmentId: shipment.id,\n          stsJob: shipment.stsJob,\n          customerJobNumber: shipment.customerJobNumber,\n          trailerId: shipment.trailerId,\n          trailerName: trailer?.name,\n          trailerCompany: trailer?.company,\n          releasedAt: shipment.releasedAt!,\n          releasedAtFormatted: formatDateSafe(shipment.releasedAt),\n          importer: shipment.importer,\n          exporter: shipment.exporter,\n          clearanceDate: shipment.clearanceDate,","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":71,"to":94}}}}],["325",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\nclearanceDateFormatted: formatDateSafe(shipment.clearanceDate, 'PP'),\n          mrn: shipment.mrn,\n        };\n      })\n      .sort((a, b) => parseISO(b.releasedAt).getTime() - parseISO(a.releasedAt).getTime()); // Sort by most recent first\n  }, [shipments, getTrailerById, isClient, currentPeriodStart, currentPeriodEnd]);","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":95,"to":100}}}}],["326",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\nconst handlePrintReport = () => {\n    window.print();\n  };\n\n  const handlePreviousMonth = () => {\n    setDisplayDate(prev => subMonths(prev, 1));\n  };\n\n  const handleNextMonth = () => {\n    setDisplayDate(prev => addMonths(prev, 1));\n  };\n\n  const handleThisMonth = () => {\n    setDisplayDate(new Date());\n  };\n\n  const displayedMonthFormatted = format(displayDate, 'MMMM yyyy');\n\n  const pageTitle = 'Monthly Released Shipments';\n  const cardTitleText = `Released in ${displayedMonthFormatted}`;\n  const cardDescriptionText = `Shipments released during ${displayedMonthFormatted}.`;\n  const printTitleText = 'Monthly Released Shipments Report';\n  const printPeriodText = `For month: ${displayedMonthFormatted}`;","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":102,"to":124}}}}],["327",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\nconst ReportSkeleton = () => (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Trailer ID</TableHead>\n          <TableHead>STS Job</TableHead>\n          <TableHead>Trailer Name</TableHead>\n          <TableHead>Customer Job No.</TableHead>\n          <TableHead>Importer</TableHead>\n          <TableHead>Exporter</TableHead>\n          <TableHead>Released At</TableHead>\n          <TableHead>Clearance Date</TableHead>\n          <TableHead>MRN</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {[...Array(5)].map((_, i) => (\n          <TableRow key={i}>\n            <TableCell><Skeleton className=\"h-4 w-[80px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[60px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[120px]\" /></TableCell>","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":127,"to":149}}}}],["328",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\n<TableCell><Skeleton className=\"h-4 w-[120px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[150px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":150,"to":158}}}}],["329",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow no-print\">\n        <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n          <Clock className=\"mr-3 h-8 w-8 text-primary\" />\n          {pageTitle}\n        </h1>\n        <div className=\"flex items-center gap-1 sm:gap-2 flex-wrap justify-center\">\n          <Button variant=\"outline\" onClick={handlePreviousMonth} aria-label=\"Previous month\">\n            <ArrowLeft className=\"h-4 w-4 mr-0 sm:mr-2\" /> <span className=\"hidden sm:inline\">Prev Month</span>\n          </Button>\n          <Button variant=\"outline\" onClick={handleThisMonth}>\n             <Undo2 className=\"mr-0 sm:mr-2 h-4 w-4\" /> <span className=\"hidden sm:inline\">This Month</span>\n          </Button>\n          <Button variant=\"outline\" onClick={handleNextMonth} aria-label=\"Next month\">","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":160,"to":174}}}}],["330",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\n<span className=\"hidden sm:inline\">Next Month</span><ArrowRight className=\"h-4 w-4 ml-0 sm:ml-2\" />\n          </Button>\n          <Button onClick={handlePrintReport} variant=\"outline\">\n            <Printer className=\"mr-2 h-4 w-4\" />\n            Print Report\n          </Button>\n        </div>\n      </div>","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":175,"to":182}}}}],["331",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\n<Card className=\"shadow-lg printable-area\">\n        <CardHeader className=\"no-print\">\n          <CardTitle className=\"text-xl sm:text-2xl text-primary\">{cardTitleText}</CardTitle>\n          <CardDescription>\n            {cardDescriptionText}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"print-only-block mb-4\">\n            <h2 className=\"text-xl font-semibold text-foreground\">{printTitleText}</h2>\n            <p className=\"text-sm text-muted-foreground\">\n              {printPeriodText}\n            </p>\n             {clientGeneratedDate && <p className=\"text-xs text-muted-foreground\">Date Generated: {clientGeneratedDate}</p>}\n          </div>","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":184,"to":198}}}}],["332",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\n{!isClient ? (\n            <ReportSkeleton />\n          ) : reportData.length === 0 ? (\n            <div className=\"min-h-[200px] flex flex-col items-center justify-center text-center border-2 border-dashed border-border rounded-md p-8\">\n              <PackageSearch className=\"h-16 w-16 text-muted-foreground mb-4\" />\n              <p className=\"text-xl text-muted-foreground\">\n                No shipments were released in {displayedMonthFormatted}.\n              </p>\n              <p className=\"text-sm text-muted-foreground mt-2\">\n                Try navigating to a different month or check back later.\n              </p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead className=\"whitespace-nowrap\"><Truck className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Trailer ID</TableHead>","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":200,"to":217}}}}],["333",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\n<TableHead className=\"whitespace-nowrap\"><Hash className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>STS Job</TableHead>\n                    <TableHead className=\"whitespace-nowrap\">Trailer Name</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Briefcase className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Cust. Job No.</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Users className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Importer</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Send className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Exporter</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><CalendarDays className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Released At</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><CalendarClock className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Clearance Date</TableHead>","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":218,"to":224}}}}],["334",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\n<TableHead className=\"whitespace-nowrap\"><Fingerprint className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>MRN</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {reportData.map((item) => (\n                    <TableRow key={item.shipmentId}>\n                       <TableCell>\n                        <Link href={`/trailers/${item.trailerId}`} className=\"text-primary hover:underline print:text-foreground print:no-underline\">\n                          {item.trailerId}\n                        </Link>\n                      </TableCell>\n                      <TableCell className=\"font-medium\">\n                        <Link href={`/shipments/${item.shipmentId}`} className=\"text-primary hover:underline print:text-foreground print:no-underline\">\n                          {item.stsJob}\n                        </Link>\n                      </TableCell>","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":225,"to":240}}}}],["335",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\n</TableCell>\n                      <TableCell>{item.trailerName || 'N/A'}</TableCell>\n                      <TableCell>{item.customerJobNumber || 'N/A'}</TableCell>\n                      <TableCell>{item.importer}</TableCell>\n                      <TableCell>{item.exporter}</TableCell>\n                      <TableCell>{item.releasedAtFormatted}</TableCell>\n                      <TableCell>{item.clearanceDateFormatted}</TableCell>\n                      <TableCell>{item.mrn || 'N/A'}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n         {isClient && reportData.length > 0 && (\n            <CardFooter className=\"text-sm text-muted-foreground border-t pt-4 no-print\">\n                <Info className=\"h-4 w-4 mr-2 text-primary\" />\n                Displaying {reportData.length} shipment(s) released in {displayedMonthFormatted}.","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":240,"to":258}}}}],["336",{"pageContent":"File: src/app/reports/weekly-released/page.tsx\n</CardFooter>\n        )}\n      </Card>\n    </div>\n  );\n}","metadata":{"source":"src/app/reports/weekly-released/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":259,"to":264}}}}],["337",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\n'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Trailer, Shipment, TrailerUpdateData } from '@/types';\nimport ShipmentCard from '@/components/shipment/ShipmentCard';\nimport AddShipmentDialog from '@/components/shipment/AddShipmentDialog';\nimport EditTrailerDialog from '@/components/trailer/EditTrailerDialog';\nimport AttachTrailerDocumentDialog from '@/components/trailer/AttachTrailerDocumentDialog';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ArrowLeft, PlusCircle, Package, Truck, Briefcase, CalendarDays, Weight, Tag, Printer, FileText, Eye, Edit, UploadCloud, BookOpen, FileBadge, Mail, FileSignature, Download } from 'lucide-react';\nimport Link from 'next/link';\nimport { format, parseISO } from 'date-fns';","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":16}}}}],["338",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\n// Define a type for the document fields we can manage\ntype TrailerDocumentField = 'outturnReportDocumentName' | 't1SummaryDocumentName' | 'manifestDocumentName' | 'acpDocumentName';\n\n\nexport default function TrailerShipmentsPage() {\n  const router = useRouter();\n  const params = useParams();\n  const trailerId = params.trailerId as string;\n\n  const {\n    getShipmentsByTrailerId,\n    deleteShipment,\n    trailers: trailersFromContext,\n    updateTrailer,\n  } = useWarehouse();\n\n  const [trailer, setTrailer] = useState<Trailer | null>(null);\n  const [isAddShipmentDialogOpen, setIsAddShipmentDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isTrailerFound, setIsTrailerFound] = useState<boolean | null>(null);","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":18,"to":37}}}}],["339",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\nconst [isAttachTrailerDocDialogOpen, setIsAttachTrailerDocDialogOpen] = useState(false);\n  const [documentToManageInfo, setDocumentToManageInfo] = useState<{\n    field: TrailerDocumentField;\n    currentName?: string | null;\n    friendlyName: string;\n  } | null>(null);\n\n\n  useEffect(() => {\n    if (typeof trailerId === 'string' && trailerId.trim() !== '') {\n      const currentTrailer = trailersFromContext.find(t => t.id === trailerId);\n      if (currentTrailer) {\n        setTrailer(currentTrailer);\n        setIsTrailerFound(true);\n      } else {\n        setIsTrailerFound(false);\n        setTrailer(null);\n      }\n    } else {\n      setIsTrailerFound(false);\n      setTrailer(null);\n    }\n  }, [trailerId, trailersFromContext]);\n\n  const shipmentsForCurrentTrailer = useMemo(() => {\n    if (!trailerId || !isTrailerFound || !trailer) return [];\n    return getShipmentsByTrailerId(trailerId);\n  }, [trailerId, isTrailerFound, trailer, getShipmentsByTrailerId]);","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":39,"to":66}}}}],["340",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\nconst formatDate = (dateString?: string) => {\n    if (!dateString) return 'N/A';\n    try {\n      return format(parseISO(dateString), 'PPpp');\n    } catch (error) {\n      console.error(\"Error formatting date:\", dateString, error);\n      return \"Invalid Date\";\n    }\n  };","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":68,"to":76}}}}],["341",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\nconst handleViewDocument = (documentName?: string) => {\n    if (documentName) {\n      const newWindow = window.open(\"\", \"_blank\");\n      if (newWindow) {\n        newWindow.document.write(`\n          <html>\n            <head>\n              <title>Viewing Document: ${documentName}</title>\n              <style>\n                body { font-family: sans-serif; padding: 20px; display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; margin: 0; background-color: #f0f0f0; }\n                .container { background-color: white; padding: 30px; border-radius: 8px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); text-align: center; }\n                h1 { color: #333; }\n                p { color: #666; }\n              </style>\n            </head>\n            <body>\n              <div class=\"container\">\n                <h1>Viewing Document: ${documentName}</h1>","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":78,"to":95}}}}],["342",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\n<p>(This is a placeholder. In a real application, the document content for \"${documentName}\" would be displayed here.)</p>\n              </div>\n            </body>\n          </html>\n        `);\n        newWindow.document.close();\n      } else {\n        alert(`Could not open new window to view document: ${documentName}. Please check your popup blocker settings.`);\n      }\n    }\n  };\n  \n  const handleDownloadDocument = (documentName?: string) => {\n    if (documentName) {\n      const newWindow = window.open(\"\", \"_blank\");\n      if (newWindow) {\n        newWindow.document.write(`\n          <html>\n            <head>\n              <title>Downloading Document: ${documentName}</title>\n              <style>\n                body { font-family: sans-serif; padding: 20px; display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; margin: 0; background-color: #f0f0f0; }","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":96,"to":117}}}}],["343",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\n.container { background-color: white; padding: 30px; border-radius: 8px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); text-align: center; }\n                h1 { color: #333; }\n                p { color: #666; }\n              </style>\n            </head>\n            <body>\n              <div class=\"container\">\n                <h1>Simulating Download: ${documentName}</h1>\n                <p>(This is a placeholder. In a real application, the file \"${documentName}\" would start downloading.)</p>\n                <p>Current system only stores document names, not the files themselves.</p>\n              </div>\n            </body>\n          </html>\n        `);\n        newWindow.document.close();\n      } else {\n        alert(`Could not open new window to simulate download for: ${documentName}. Please check your popup blocker settings.`);\n      }\n    }\n  };","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":118,"to":137}}}}],["344",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\nconst handleEmailDocuments = () => {\n    if (!trailer) return;\n    const subject = `${trailer.id} // ${trailer.name}`;\n    const emailTo = 'klaudia@mail.com';\n    let body = \"Good morning,\\n\\nPlease see attached:\\n\\n\";\n    body += \"- ACP Form (Please generate from 'Print Trailer ACP Form' page and attach or ensure it's associated below)\\n\";\n    if (trailer.t1SummaryDocumentName) {\n      body += `- T1 Summary: ${trailer.t1SummaryDocumentName}\\n`;\n    } else {\n      body += \"- T1 Summary (not attached to trailer record)\\n\";\n    }\n    if (trailer.manifestDocumentName) {\n      body += `- Manifest: ${trailer.manifestDocumentName}\\n`;\n    } else {\n      body += \"- Manifest (not attached to trailer record)\\n\";\n    }\n     if (trailer.acpDocumentName) {\n      body += `- Saved ACP Form: ${trailer.acpDocumentName}\\n`;\n    }\n\n    const mailtoLink = `mailto:${emailTo}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n    window.location.href = mailtoLink;\n  };","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":139,"to":161}}}}],["345",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\nconst handleOpenAttachDialog = (field: TrailerDocumentField, friendlyName: string, currentName?: string | null) => {\n    setDocumentToManageInfo({ field, currentName, friendlyName });\n    setIsAttachTrailerDocDialogOpen(true);\n  };\n\n  const handleTrailerDocumentAction = (\n    affectedTrailerId: string,\n    docField: keyof TrailerUpdateData,\n    newDocumentName: string | null\n  ) => {\n    if (affectedTrailerId === trailer?.id) {\n        const updatePayload: TrailerUpdateData = {};\n        (updatePayload as any)[docField] = newDocumentName;\n        updateTrailer(affectedTrailerId, updatePayload);\n    }\n  };\n\n\n  if (isTrailerFound === null) {\n    return (\n      <div className=\"flex justify-center items-center h-[calc(100vh-200px)]\">\n        <p className=\"text-xl text-muted-foreground\">Loading trailer details...</p>\n      </div>\n    );\n  }","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":163,"to":187}}}}],["346",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\nif (isTrailerFound === false || !trailer) {\n     return (\n        <div className=\"flex flex-col justify-center items-center h-[calc(100vh-200px)] space-y-4\">\n          <Truck className=\"h-16 w-16 text-muted-foreground\" />\n          <p className=\"text-2xl font-semibold text-destructive\">Trailer Not Found</p>\n          <p className=\"text-xl text-muted-foreground\">Could not find trailer with ID: {trailerId}</p>\n          <Button variant=\"outline\" asChild>\n            <Link href=\"/\">\n              <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Dashboard\n            </Link>\n          </Button>\n        </div>\n     );\n  }","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":189,"to":202}}}}],["347",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\nconst DocumentSection = ({ \n    title, \n    documentName, \n    icon: Icon, \n    documentField \n  }: { \n    title: string, \n    documentName?: string | null, \n    icon: React.ElementType, \n    documentField: TrailerDocumentField \n  }) => (\n    <div className=\"py-4 border-t\">\n      <h3 className=\"text-lg font-semibold flex items-center mb-2\">\n        <Icon className=\"mr-2 h-5 w-5 text-primary\" />\n        {title}\n      </h3>\n      {documentName ? (\n        <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between p-3 bg-muted/50 rounded-md mb-2 gap-2\">\n          <div className=\"flex items-center\">\n            <FileText className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n            <span className=\"text-sm font-medium break-all\">{documentName}</span>\n          </div>\n          <div className=\"flex gap-2 flex-shrink-0\">\n            <Button\n              variant=\"link\"\n              size=\"sm\"\n              onClick={() => handleViewDocument(documentName)}","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":204,"to":230}}}}],["348",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\naria-label={`View ${title.toLowerCase()} ${documentName}`}\n              className=\"p-0 h-auto\"\n            >\n              <Eye className=\"mr-1 h-4 w-4\" /> View\n            </Button>\n            <Button\n              variant=\"link\"\n              size=\"sm\"\n              onClick={() => handleDownloadDocument(documentName)}\n              aria-label={`Download ${title.toLowerCase()} ${documentName}`}\n              className=\"p-0 h-auto text-primary\"\n            >\n              <Download className=\"mr-1 h-4 w-4\" /> Download\n            </Button>\n          </div>\n        </div>\n      ) : (\n        <p className=\"text-sm text-muted-foreground mb-2\">No {title.toLowerCase()} attached.</p>\n      )}\n      <Button\n        variant=\"outline\"\n        size=\"sm\"\n        onClick={() => handleOpenAttachDialog(documentField, title, documentName)}\n      >\n        {documentName ? <Edit className=\"mr-2 h-4 w-4\" /> : <UploadCloud className=\"mr-2 h-4 w-4\" />}","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":231,"to":255}}}}],["349",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\n{documentName ? `Change/Remove ${title}` : `Add ${title}`}\n      </Button>\n      <p className=\"text-xs text-muted-foreground mt-1\">Manage the {title.toLowerCase()} PDF.</p>\n    </div>\n  );","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":256,"to":260}}}}],["350",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-2\">\n        <Button variant=\"outline\" size=\"sm\" asChild>\n          <Link href=\"/\">\n            <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Dashboard\n          </Link>\n        </Button>\n        <div className=\"flex gap-2 flex-wrap justify-center sm:justify-end\">\n          <Button variant=\"outline\" size=\"sm\" onClick={() => setIsEditDialogOpen(true)}>\n            <Edit className=\"mr-2 h-4 w-4\" /> Edit Trailer Details\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" onClick={handleEmailDocuments}>\n            <Mail className=\"mr-2 h-4 w-4\" /> Email Trailer Documents\n          </Button>\n          <Button variant=\"outline\" size=\"sm\" asChild>\n            <Link href={`/trailers/${trailer.id}/print`}>\n              <Printer className=\"mr-2 h-4 w-4\" /> Print Trailer ACP Form\n            </Link>\n          </Button>\n        </div>\n      </div>","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":262,"to":283}}}}],["351",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\n<Card className=\"shadow-lg\">\n        <CardHeader>\n          <div className=\"flex items-start gap-4\">\n            <Truck className=\"h-12 w-12 text-primary mt-1\" />\n            <div>\n              <CardTitle className=\"text-3xl\">{trailer.name}</CardTitle>\n              <CardDescription>\n                ID: {trailer.id} | Status: <span className=\"font-semibold\">{trailer.status}</span>\n              </CardDescription>\n              {trailer.company && (\n                <CardDescription className=\"mt-1 flex items-center\">\n                  <Briefcase className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  Company: <span className=\"font-semibold ml-1\">{trailer.company}</span>\n                </CardDescription>\n              )}\n              {trailer.weight !== undefined && trailer.weight !== null && (\n                <CardDescription className=\"mt-1 flex items-center\">\n                  <Weight className=\"mr-2 h-4 w-4 text-muted-foreground\" />","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":285,"to":302}}}}],["352",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\nWeight: <span className=\"font-semibold ml-1\">{trailer.weight} kg</span>\n                </CardDescription>\n              )}\n               {trailer.arrivalDate && (\n                <CardDescription className=\"mt-1 flex items-center\">\n                  <CalendarDays className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  Arrival: <span className=\"font-semibold ml-1\">{formatDate(trailer.arrivalDate)}</span>\n                </CardDescription>\n              )}\n              {trailer.storageExpiryDate && (\n                <CardDescription className=\"mt-1 flex items-center\">\n                  <CalendarDays className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  Storage Expiry: <span className=\"font-semibold ml-1\">{formatDate(trailer.storageExpiryDate)}</span>\n                </CardDescription>\n              )}\n              {trailer.customField1 && (\n                <CardDescription className=\"mt-1 flex items-center\">","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":303,"to":319}}}}],["353",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\n<Tag className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  T1.1: <span className=\"font-semibold ml-1\">{trailer.customField1}</span>\n                </CardDescription>\n              )}\n              {trailer.customField2 && (\n                <CardDescription className=\"mt-1 flex items-center\">\n                  <Tag className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                  T1.2: <span className=\"font-semibold ml-1\">{trailer.customField2}</span>\n                </CardDescription>\n              )}\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <DocumentSection\n            title=\"Out-turn Report\"\n            documentName={trailer.outturnReportDocumentName}\n            icon={FileText}\n            documentField=\"outturnReportDocumentName\"\n          />\n          <DocumentSection\n            title=\"T1 Summary\"\n            documentName={trailer.t1SummaryDocumentName}\n            icon={FileBadge}","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":320,"to":343}}}}],["354",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\nicon={FileBadge}\n            documentField=\"t1SummaryDocumentName\"\n          />\n          <DocumentSection\n            title=\"Manifest\"\n            documentName={trailer.manifestDocumentName}\n            icon={BookOpen}\n            documentField=\"manifestDocumentName\"\n          />\n          <DocumentSection\n            title=\"ACP Form\"\n            documentName={trailer.acpDocumentName}\n            icon={FileSignature}\n            documentField=\"acpDocumentName\"\n          />","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":343,"to":357}}}}],["355",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\n<div className=\"flex justify-between items-center mb-6 pt-4 border-t mt-4\">\n            <h2 className=\"text-2xl font-semibold flex items-center\">\n              <Package className=\"mr-3 h-7 w-7 text-primary\" />\n              Shipments ({shipmentsForCurrentTrailer.length})\n            </h2>\n            <Button onClick={() => setIsAddShipmentDialogOpen(true)}>\n              <PlusCircle className=\"mr-2 h-5 w-5\" /> Add Shipment\n            </Button>\n          </div>","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":359,"to":367}}}}],["356",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\n{shipmentsForCurrentTrailer.length === 0 ? (\n            <div className=\"text-center py-10 border rounded-md bg-muted/20\">\n              <p className=\"text-xl text-muted-foreground\">No shipments for this trailer yet.</p>\n              <p className=\"text-sm text-muted-foreground\">Click \"Add Shipment\" to get started.</p>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {shipmentsForCurrentTrailer.map((shipment) => (\n                <ShipmentCard\n                  key={shipment.id}\n                  shipment={shipment}\n                  onDelete={() => deleteShipment(shipment.id)}\n                />\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      <AddShipmentDialog\n        isOpen={isAddShipmentDialogOpen}\n        setIsOpen={setIsAddShipmentDialogOpen}\n        trailerId={trailer.id}\n      />","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":369,"to":392}}}}],["357",{"pageContent":"File: src/app/trailers/[trailerId]/page.tsx\n{isEditDialogOpen && trailer && (\n        <EditTrailerDialog\n          isOpen={isEditDialogOpen}\n          setIsOpen={setIsEditDialogOpen}\n          trailerToEdit={trailer}\n        />\n      )}\n\n      {isAttachTrailerDocDialogOpen && documentToManageInfo && trailer && (\n        <AttachTrailerDocumentDialog\n          isOpen={isAttachTrailerDocDialogOpen}\n          setIsOpen={setIsAttachTrailerDocDialogOpen}\n          trailerId={trailer.id}\n          trailerIdentifier={`${trailer.name} (ID: ${trailer.id})`}\n          documentTypeField={documentToManageInfo.field}\n          documentFriendlyName={documentToManageInfo.friendlyName}\n          currentDocumentName={documentToManageInfo.currentName}\n          onDocumentAction={handleTrailerDocumentAction}\n        />\n      )}\n    </div>\n  );\n}","metadata":{"source":"src/app/trailers/[trailerId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":394,"to":416}}}}],["358",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { QuizReport, AnsweredQuizItem } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { ArrowLeft, FileText, User, Calendar as CalendarIcon, PackageSearch, Check, X, Truck, Box as BoxIcon, MapPin, Briefcase, Printer } from 'lucide-react';\nimport Link from 'next/link';\nimport { format, parseISO } from 'date-fns';\n\nexport default function QuizReportDetailsPage() {\n  const router = useRouter();\n  const params = useParams();\n  const reportId = params.reportId as string;","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":19}}}}],["359",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\nconst { quizReports } = useWarehouse();\n  const [isClient, setIsClient] = useState(false);\n  const [clientGeneratedDate, setClientGeneratedDate] = useState<string | null>(null);\n\n  useEffect(() => {\n    setIsClient(true);\n    setClientGeneratedDate(new Date().toLocaleDateString());\n  }, []);\n\n  const report = useMemo(() => {\n    if (!isClient || !reportId) return undefined;\n    return quizReports.find(r => r.id === reportId);\n  }, [quizReports, reportId, isClient]);\n\n  const formatDate = (dateString: string, dateFormat = 'PPpp') => {\n    try {\n      return format(parseISO(dateString), dateFormat);\n    } catch (error) {\n      return \"Invalid Date\";\n    }\n  };\n  \n  const pageTitle = \"Quiz Report Details\";\n  const printTitleText = \"Stock Check Quiz Report\";\n\n  const handlePrintReport = () => {\n    window.print();\n  };","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":21,"to":48}}}}],["360",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\nif (!isClient || report === undefined && isClient) { // Show skeleton if loading or report becomes undefined after client mount\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex justify-between items-center\">\n          <Skeleton className=\"h-10 w-1/4\" />\n          <Skeleton className=\"h-9 w-28\" />\n        </div>\n        <Card className=\"shadow-lg\">\n          <CardHeader>\n            <Skeleton className=\"h-8 w-3/4\" />\n            <Skeleton className=\"h-4 w-1/2 mt-1\" />\n            <Skeleton className=\"h-4 w-1/2 mt-1\" />\n          </CardHeader>\n          <CardContent>\n            <Skeleton className=\"h-64 w-full\" /> {/* For table skeleton */}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":50,"to":69}}}}],["361",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\nif (!report && isClient) { // Report truly not found after client check\n    return (\n      <div className=\"flex flex-col justify-center items-center h-[calc(100vh-200px)] space-y-4 p-4\">\n        <PackageSearch className=\"h-16 w-16 text-muted-foreground\" />\n        <p className=\"text-2xl font-semibold text-destructive\">Quiz Report Not Found</p>\n        <p className=\"text-xl text-muted-foreground\">Could not find report with ID: {reportId}</p>\n        <Button variant=\"outline\" onClick={() => router.push('/quiz/reports')}>\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Reports List\n        </Button>\n      </div>\n    );\n  }\n  \n  if (!report) return null;","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":71,"to":84}}}}],["362",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow no-print\">\n        <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n          <FileText className=\"mr-3 h-8 w-8 text-primary\" />\n          {pageTitle}\n        </h1>\n        <div className=\"flex items-center gap-2\">\n          <Button variant=\"outline\" asChild>\n            <Link href=\"/quiz/reports\">\n              <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to Reports List\n            </Link>\n          </Button>\n          <Button onClick={handlePrintReport} variant=\"outline\">\n            <Printer className=\"mr-2 h-4 w-4\" /> Print Report\n          </Button>\n        </div>\n      </div>","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":87,"to":104}}}}],["363",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\n<Card className=\"shadow-lg printable-area\">\n        <CardHeader className=\"border-b pb-4 no-print\">\n          <CardTitle className=\"text-2xl text-primary\">Report ID: ...{report.id.slice(-6)}</CardTitle>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-1 text-sm mt-2\">\n            <div className=\"flex items-center\">\n              <User className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n              <strong>Completed By:</strong>\n              <span className=\"ml-1.5\">{report.completedBy}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <CalendarIcon className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n              <strong>Completed At:</strong>\n              <span className=\"ml-1.5\">{formatDate(report.completedAt)}</span>\n            </div>\n          </div>\n        </CardHeader>","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":106,"to":121}}}}],["364",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\n{/* Print-only Header */}\n        <div className=\"print-only-block mb-4 p-6 pb-0\">\n          <h2 className=\"text-xl font-semibold text-foreground\">{printTitleText}</h2>\n          <p className=\"text-sm text-muted-foreground\">Report ID: {report.id}</p>\n          <p className=\"text-sm text-muted-foreground\">Completed By: {report.completedBy} at {formatDate(report.completedAt)}</p>\n          {clientGeneratedDate && <p className=\"text-xs text-muted-foreground\">Date Report Generated: {clientGeneratedDate}</p>}\n        </div>\n        \n        <CardContent className=\"pt-6 card-content-print\">\n          <h3 className=\"text-lg font-semibold mb-3 text-foreground no-print\">Answered Items ({report.items.length}):</h3>\n          {report.items.length === 0 ? (\n            <p className=\"text-muted-foreground\">No items were recorded in this report.</p>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":123,"to":139}}}}],["365",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\n<TableRow>\n                    <TableHead className=\"whitespace-nowrap\"><MapPin className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Location</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Truck className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Identifier (Tr / Job)</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Briefcase className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Company</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><CalendarIcon className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Trailer Arrival</TableHead>\n                    <TableHead className=\"text-right whitespace-nowrap\"><BoxIcon className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Pieces</TableHead>\n                    <TableHead className=\"text-center whitespace-nowrap\">Answer</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":139,"to":148}}}}],["366",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\n<TableBody>\n                  {report.items.map((item) => (\n                    <TableRow key={item.id} className={`${item.userAnswer === 'no' ? 'bg-destructive/10 hover:bg-destructive/20 print:bg-transparent' : 'print:bg-transparent'} print:text-foreground`}>\n                      <TableCell className=\"font-semibold\">\n                        {item.locationName}\n                        {item.locationPallets !== undefined ? ` (${item.locationPallets} plts)` : ''}\n                      </TableCell>\n                      <TableCell>\n                        <Link href={`/trailers/${item.trailerId}`} className=\"text-primary hover:underline print:text-foreground print:no-underline\">{item.trailerId}</Link>\n                        {' / '}\n                        <Link href={`/shipments/${item.shipmentId}`} className=\"text-primary hover:underline print:text-foreground print:no-underline\">{item.stsJob}</Link>\n                      </TableCell>","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":148,"to":159}}}}],["367",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\n</TableCell>\n                      <TableCell>{item.trailerCompany || 'N/A'}</TableCell>\n                      <TableCell>{item.trailerArrivalDateFormatted}</TableCell>\n                      <TableCell className=\"text-right font-semibold\">{item.shipmentQuantity}</TableCell>\n                      <TableCell className=\"text-center\">\n                        {item.userAnswer === 'yes' ? (\n                          <>\n                            <Check className=\"h-5 w-5 text-green-600 mx-auto print:hidden\" />\n                            <span className=\"hidden print:inline\">Yes</span>\n                          </>\n                        ) : (\n                          <>\n                            <X className=\"h-5 w-5 text-red-600 mx-auto print:hidden\" />\n                            <span className=\"hidden print:inline\">No</span>\n                          </>\n                        )}\n                      </TableCell>\n                    </TableRow>","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":159,"to":176}}}}],["368",{"pageContent":"File: src/app/quiz/reports/[reportId]/page.tsx\n</TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","metadata":{"source":"src/app/quiz/reports/[reportId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":176,"to":186}}}}],["369",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n'use client';\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Trailer, Shipment } from '@/types';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { ArrowLeft, Printer, Truck, FileText, Edit2, Save } from 'lucide-react';\nimport { format, parseISO } from 'date-fns';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/hooks/use-toast';","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":16}}}}],["370",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n// Helper to create a line for data or empty space\nconst FormLine = ({ label, value, valueBold = false, fullWidthValue = false, minHeight = 'min-h-[1.5em]', className }: { label?: string, value?: string | number | null, valueBold?: boolean, fullWidthValue?: boolean, minHeight?: string, className?: string }) => {\n  const valueDisplay = value !== undefined && value !== null ? String(value) : '';\n  return (\n    <div className={`flex ${fullWidthValue && label ? 'flex-col items-start' : 'flex-row items-end'} ${minHeight} mb-1 print:mb-0.5 ${className}`}>\n      {label && <span className=\"text-xs print:text-[7pt] mr-1 whitespace-nowrap shrink-0\">{label}:</span>}\n      <span\n        className={`flex-grow border-b border-foreground ${valueBold ? 'font-semibold' : ''} text-xs print:text-[8pt] pb-px overflow-hidden text-ellipsis whitespace-nowrap`}\n      >\n        {valueDisplay}\n      </span>\n    </div>\n  );\n};","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":18,"to":31}}}}],["371",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\nexport default function PrintTrailerTransferPage() {\n  const router = useRouter();\n  const params = useParams();\n  const trailerId = params.trailerId as string;\n  const { toast } = useToast();\n\n  const { getTrailerById, getShipmentsByTrailerId, updateTrailer } = useWarehouse();\n\n  const [trailer, setTrailer] = useState<Trailer | null | undefined>(undefined);\n  const [shipments, setShipments] = useState<Shipment[]>([]);\n  const [isClient, setIsClient] = useState(false);\n  const [generatedDate, setGeneratedDate] = useState<string | null>(null);\n\n  // State for editable fields\n  const [reportingPersonName, setReportingPersonName] = useState('');\n  const [mvArrived, setMvArrived] = useState('');\n  const [mvDate, setMvDate] = useState('');\n  const [shipDateArrivalC, setShipDateArrivalC] = useState('');\n  const [countryOfOriginC, setCountryOfOriginC] = useState('');\n  const [customsSealNoC, setCustomsSealNoC] = useState('');","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":34,"to":53}}}}],["372",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\nconst [showAdditionalDetailsForm, setShowAdditionalDetailsForm] = useState(false);\n\n\n  useEffect(() => {\n    setIsClient(true);\n    if (trailerId && getTrailerById) {\n      const currentTrailer = getTrailerById(trailerId);\n      setTrailer(currentTrailer);\n      if (currentTrailer) {\n        const currentShipments = getShipmentsByTrailerId(trailerId);\n        setShipments(currentShipments);\n      }\n    }\n    setGeneratedDate(new Date().toLocaleString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' }));\n  }, [trailerId, getTrailerById, getShipmentsByTrailerId]);\n\n  const handlePrint = () => {\n    window.print();\n  };","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":55,"to":73}}}}],["373",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\nconst handleSaveACPForm = () => {\n    if (!trailer) return;\n    const now = new Date();\n    const timestamp = `${now.getFullYear()}${(now.getMonth() + 1).toString().padStart(2, '0')}${now.getDate().toString().padStart(2, '0')}_${now.getHours().toString().padStart(2, '0')}${now.getMinutes().toString().padStart(2, '0')}${now.getSeconds().toString().padStart(2, '0')}`;\n    const acpDocName = `ACP_Form_${trailer.id}_${timestamp}.pdf`;\n    updateTrailer(trailer.id, { acpDocumentName: acpDocName });\n    toast({\n      title: \"ACP Form Saved\",\n      description: `Associated '${acpDocName}' with trailer ${trailer.id}. You can manage this in 'Edit Trailer'.`,\n    });\n  };\n\n  const formatDateForForm = (dateString?: string) => {\n    if (!dateString) return '';\n    try {\n      return format(parseISO(dateString), 'dd/MM/yyyy');\n    } catch (error) {\n      return \"Invalid Date\";\n    }\n  };","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":75,"to":94}}}}],["374",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\nif (!isClient || trailer === undefined) {\n    return (\n      <div className=\"space-y-6 p-4\">\n        <div className=\"flex justify-between items-center\">\n          <Skeleton className=\"h-10 w-32\" />\n          <Skeleton className=\"h-10 w-28\" />\n        </div>\n        <Card>\n          <CardHeader>\n            <Skeleton className=\"h-8 w-3/4 mb-2\" />\n            <Skeleton className=\"h-4 w-1/2\" />\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {[...Array(8)].map((_, i) => (\n              <div key={i} className=\"flex items-center space-x-2\">\n                <Skeleton className=\"h-5 w-5 rounded-full\" />\n                <Skeleton className=\"h-4 w-1/4\" />\n                <Skeleton className=\"h-4 w-1/2\" />\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":96,"to":120}}}}],["375",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\nif (trailer === null) {\n    return (\n      <div className=\"flex flex-col justify-center items-center h-[calc(100vh-200px)] space-y-4 p-4\">\n        <Truck className=\"h-16 w-16 text-muted-foreground\" />\n        <p className=\"text-2xl font-semibold text-destructive\">Trailer Not Found</p>\n        <p className=\"text-xl text-muted-foreground\">Could not find trailer with ID: {trailerId}</p>\n        <Button variant=\"outline\" onClick={() => router.back()}>\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back\n        </Button>\n      </div>\n    );\n  }\n\n  if (!trailer) return null;\n\n  const manifestRef = trailer.id;\n  const unitContainerNumber = trailer.name;\n  const t1_1 = trailer.customField1;\n  const t1_2 = trailer.customField2;\n  const arrivalDateFormatted = formatDateForForm(trailer.arrivalDate);\n  const totalShipments = shipments.length;\n  const clearanceAgencyCompany = trailer.company;","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":122,"to":143}}}}],["376",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\nreturn (\n    <div className=\"space-y-6 p-2 md:p-4 print:p-0\">\n      <div className=\"no-print flex flex-col sm:flex-row justify-between items-center gap-4 mb-4\">\n        <Button variant=\"outline\" onClick={() => router.back()} size=\"sm\">\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back\n        </Button>","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":146,"to":151}}}}],["377",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n<div className=\"flex flex-col sm:flex-row items-center gap-2 sm:gap-4\"> {/* Grouping controls */}\n          <div className=\"flex items-center gap-2\">\n            <Label htmlFor=\"reportingPersonName\" className=\"whitespace-nowrap text-sm\">Person Signing:</Label>\n            <Input\n                id=\"reportingPersonName\"\n                value={reportingPersonName}\n                onChange={(e) => setReportingPersonName(e.target.value)}\n                placeholder=\"Name\"\n                className=\"h-9 w-full sm:w-[150px]\"\n            />\n          </div>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setShowAdditionalDetailsForm(!showAdditionalDetailsForm)}\n          >\n            <Edit2 className=\"mr-2 h-4 w-4\" />\n            {showAdditionalDetailsForm ? 'Hide Details Form' : 'Edit Print Details'}\n          </Button>\n          <Button onClick={handleSaveACPForm} size=\"sm\" variant=\"outline\">","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":153,"to":172}}}}],["378",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n<Save className=\"mr-2 h-4 w-4\" /> Save ACP Form\n          </Button>\n          <Button onClick={handlePrint} size=\"sm\">\n            <Printer className=\"mr-2 h-4 w-4\" /> Print Document\n          </Button>\n        </div>\n      </div>","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":173,"to":179}}}}],["379",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n{/* Editable fields section - no-print, conditionally rendered */}\n      {showAdditionalDetailsForm && (\n        <Card className=\"no-print mb-6 shadow-md\">\n          <CardHeader>\n            <CardTitle className=\"text-lg flex items-center\"><Edit2 className=\"mr-2 h-5 w-5 text-primary\"/>Additional Details for Print</CardTitle>\n            <CardDescription>Fill these fields before printing the document.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-6 gap-y-4\">\n            <div>\n              <Label htmlFor=\"mvArrived\" className=\"text-sm font-medium\">MV Arrived Per (Part A)</Label>\n              <Input id=\"mvArrived\" value={mvArrived} onChange={(e) => setMvArrived(e.target.value)} placeholder=\"Enter MV name\" className=\"mt-1\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"mvDate\" className=\"text-sm font-medium\">MV Arrival Date (Part A)</Label>","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":181,"to":194}}}}],["380",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n<Input id=\"mvDate\" value={mvDate} onChange={(e) => setMvDate(e.target.value)} placeholder=\"Enter MV arrival date\" className=\"mt-1\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"shipDateArrivalC\" className=\"text-sm font-medium\">Ship/Date of Arrival (Part C)</Label>\n              <Input id=\"shipDateArrivalC\" value={shipDateArrivalC} onChange={(e) => setShipDateArrivalC(e.target.value)} placeholder=\"Ship/Date\" className=\"mt-1\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"countryOfOriginC\" className=\"text-sm font-medium\">Country of Origin (Part C)</Label>\n              <Input id=\"countryOfOriginC\" value={countryOfOriginC} onChange={(e) => setCountryOfOriginC(e.target.value)} placeholder=\"Country\" className=\"mt-1\"/>\n            </div>\n            <div>\n              <Label htmlFor=\"customsSealNoC\" className=\"text-sm font-medium\">Customs Seal No. (Part C)</Label>","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":195,"to":206}}}}],["381",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n<Input id=\"customsSealNoC\" value={customsSealNoC} onChange={(e) => setCustomsSealNoC(e.target.value)} placeholder=\"Customs Seal\" className=\"mt-1\"/>\n            </div>\n          </CardContent>\n        </Card>\n      )}","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":207,"to":211}}}}],["382",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n<Card className=\"printable-area shadow-lg print:shadow-none print:border-none\">\n        <CardHeader className=\"border-b pb-2 print:pb-1 print:border-black\">\n          <div className=\"flex items-start justify-between\">\n            <div>\n              <CardTitle className=\"text-lg md:text-xl text-primary print:text-black print:font-bold flex items-center\">\n                <FileText className=\"mr-2 h-6 w-6 print:hidden\" />\n                Transfer to Authorised Temporary Storage Facility\n              </CardTitle>\n              <CardDescription className=\"mt-0.5 text-xs print:text-[7pt]\">\n                Ref: {trailer.id} / {trailer.name}\n              </CardDescription>\n            </div>\n            {generatedDate && (\n                 <p className=\"text-xs text-muted-foreground print:text-[7pt] mt-1 self-start\">Generated: {generatedDate}</p>\n            )}\n          </div>\n        </CardHeader>","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":214,"to":230}}}}],["383",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n<CardContent className=\"pt-3 text-xs print:text-[8pt] print:pt-1 space-y-3 print:space-y-1\">\n          {/* Part A */}\n          <div className=\"space-y-1 print:space-y-0.5 border border-foreground print:border-black p-2 print:p-1\">\n            <h3 className=\"font-bold text-sm print:text-[9pt] mb-1 print:mb-0.5\">Part A: (Removal Request for Direct imports from a third country)</h3>\n            <div className=\"flex items-end\">\n              <span className=\"mr-1 text-xs print:text-[7pt] whitespace-nowrap\">Customs &amp; Excise at</span>\n              <span className=\"flex-grow border-b border-foreground text-xs print:text-[8pt] pb-px mx-1 min-w-[10ch]\"></span>\n              <span className=\"font-semibold mx-1 text-xs print:text-[8pt]\">DUBLIN PORT</span>\n              <span className=\"flex-grow border-b border-foreground text-xs print:text-[8pt] pb-px mx-1 min-w-[15ch]\"></span>\n              <span className=\"text-xs print:text-[7pt] whitespace-nowrap\">(import station)</span>","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":232,"to":241}}}}],["384",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n</div>\n            <FormLine label=\"Permission is requested to remove unit/container number\" value={unitContainerNumber} valueBold/>\n            <div className=\"grid grid-cols-3 gap-x-2 items-end\">\n                <FormLine label=\"Which arrived per MV\" value={mvArrived} />\n                <FormLine label=\"date\" value={mvDate} />\n                <FormLine label=\"Manifest Ref\" value={manifestRef} valueBold />\n            </div>\n            <FormLine label=\"to the Authorised Temporary Storage Facility of\" value=\"SPRATT LOGISTICS\" valueBold />","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":242,"to":249}}}}],["385",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n<div className=\"text-xs print:text-[7pt] mt-1 print:mt-0.5\">T1 Groupage covered Under Transit MRN No(s):</div>\n            <div className=\"border border-dashed border-muted-foreground print:border-gray-400 p-1 min-h-[2.5em] print:min-h-[1.5em]\">\n                <p className=\"whitespace-pre-wrap text-xs print:text-[7pt]\">{t1_1 || ''} {t1_1 && t1_2 && ' / '} {t1_2 || ''}</p>\n            </div>\n\n            <div className=\"grid grid-cols-3 gap-x-2 mt-2 print:mt-1\">\n                <FormLine label=\"Signature\" value={reportingPersonName} />\n                <FormLine label=\"Company\" value=\"Spratt\" valueBold />\n                <FormLine label=\"Date\" value={arrivalDateFormatted} valueBold />\n            </div>\n          </div>","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":251,"to":261}}}}],["386",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n{/* Part B */}\n          <div className=\"space-y-1 print:space-y-0.5 border border-foreground print:border-black p-2 print:p-1\">\n            <h3 className=\"font-bold text-sm print:text-[9pt] mb-1 print:mb-0.5\">Part B (Official use only)</h3>\n            <div className=\"grid grid-cols-[2fr_1fr] gap-x-4 print:gap-x-2\"> {/* Adjusted grid for Part B layout */}\n              <div className=\"space-y-1 print:space-y-0.5\"> {/* Left column for fields */}\n                <FormLine label=\"Customs seal number applied\" />\n                <FormLine label=\"Lorry Reg. Number\" />\n                <FormLine label=\"Sealing Official’s signature\" />\n              </div>\n              <div className=\"space-y-1 print:space-y-0.5 flex flex-col justify-between\"> {/* Right column for Local Ref and Date Stamp */}\n                <FormLine label=\"Local Ref Number\" />","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":263,"to":273}}}}],["387",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n<div className=\"border border-foreground print:border-black flex items-center justify-center text-center min-h-[3em] print:min-h-[2.5em] p-1 text-xs print:text-[7pt]\">\n                  Date Stamp and Time\n                </div>\n              </div>\n            </div>\n          </div>","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":274,"to":279}}}}],["388",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n{/* Part C */}\n           <div className=\"space-y-1 print:space-y-0.5 border border-foreground print:border-black p-2 print:p-1\">\n            <h3 className=\"font-bold text-sm print:text-[9pt] mb-1 print:mb-0.5\">Part C: (Notification on arrival of good at T.S. Facility)</h3>\n            <div className=\"grid grid-cols-2 gap-x-4 gap-y-1 print:gap-y-0\">\n                <FormLine label=\"Ship/date of Arrival\" value={shipDateArrivalC}/>\n                <FormLine label=\"T.S. (ACP) Ref\" value={manifestRef} valueBold/>\n                <FormLine label=\"Container/Trailer Number\" value={unitContainerNumber} valueBold/>\n                <FormLine label=\"Number of T1/Non-EU consignments\" value={totalShipments} valueBold/>\n                <FormLine label=\"Country of Origin\" value={countryOfOriginC}/>\n                <FormLine label=\"Customs Seal No.\" value={customsSealNoC}/>\n                <FormLine label=\"Clearance Agency\" value={clearanceAgencyCompany} valueBold/>","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":282,"to":292}}}}],["389",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n<FormLine label=\"Person Reporting\" value={reportingPersonName} valueBold/>\n                <FormLine label=\"Contact No.\" value=\"01 8527 100\" valueBold/>\n            </div>\n          </div>","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":293,"to":296}}}}],["390",{"pageContent":"File: src/app/trailers/[trailerId]/print/page.tsx\n{/* N.B. Section */}\n          <div className=\"text-xs print:text-[7pt] mt-2 print:mt-1 space-y-0.5 print:leading-tight\">\n            <p className=\"font-bold\">N.B. On arrival of T1 goods at the Temporary Storage Facility, this completed advice note plus the groupage manifest and all associated Transit Document/s are to be emailed immediately to Customs Container Reports <span className=\"underline\">tsfreports@revenue.ie</span></p>\n            <p>Simultaneously, all associated transit MRNS are to be reported in NCTS.</p>\n            <p>The container/trailer must be delivered direct to the Temporary Storage Facility above. If seals are affixed, they are not to be broken without Customs authorisation.</p>\n            <p>Reporting is authorised —Mon to Fri 6am to 8pm & Sat 8am to 1pm only—</p>\n          </div>\n\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","metadata":{"source":"src/app/trailers/[trailerId]/print/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":298,"to":310}}}}],["391",{"pageContent":"File: src/app/shipments/page.tsx\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport ShipmentCard from '@/components/shipment/ShipmentCard';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { PackageSearch, Search, ListFilter, LayoutGrid, Package as PackageIcon, Truck } from 'lucide-react';\nimport type { Shipment } from '@/types';\nimport { Badge } from '@/components/ui/badge';","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":14}}}}],["392",{"pageContent":"File: src/app/shipments/page.tsx\nexport default function AllShipmentsPage() {\n  const { shipments, trailers, deleteShipment } = useWarehouse();\n  const [isClient, setIsClient] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [trailerIdFilter, setTrailerIdFilter] = useState<string | 'all'>('all');\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":16,"to":25}}}}],["393",{"pageContent":"File: src/app/shipments/page.tsx\nconst filteredShipments = useMemo(() => {\n    return shipments.filter(shipment => {\n      const searchLower = searchTerm.toLowerCase();\n      const matchesSearch =\n        shipment.id.toLowerCase().includes(searchLower) || \n        shipment.trailerId.toLowerCase().includes(searchLower) || \n        shipment.stsJob.toString().toLowerCase().includes(searchLower) ||\n        (shipment.customerJobNumber && shipment.customerJobNumber.toLowerCase().includes(searchLower)) ||\n        shipment.importer.toLowerCase().includes(searchLower) ||\n        shipment.exporter.toLowerCase().includes(searchLower) || \n        (shipment.locations && shipment.locations.some(loc => loc.name.toLowerCase().includes(searchLower)));\n\n      const matchesTrailerId = trailerIdFilter === 'all' || shipment.trailerId === trailerIdFilter;\n\n      return matchesSearch && matchesTrailerId;\n    });\n  }, [shipments, searchTerm, trailerIdFilter]);","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":27,"to":43}}}}],["394",{"pageContent":"File: src/app/shipments/page.tsx\nconst ShipmentListSkeleton = () => (\n    <div className={viewMode === 'grid' ? \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\" : \"space-y-4\"}>\n      {[1, 2, 3].map(i => (\n        viewMode === 'grid' ? (\n          <Card className=\"shadow-md flex flex-col h-full\" key={i}>\n            <CardContent className=\"p-6 flex-grow space-y-3\">\n              <div className=\"flex items-start justify-between\">\n                <div className='space-y-1'>\n                  <Skeleton className=\"h-5 w-3/4\" /> {/* STS Job */}\n                  <Skeleton className=\"h-4 w-1/2\" /> {/* Trailer ID */}\n                </div>\n                <Skeleton className=\"h-7 w-7 rounded-md\" />\n              </div>\n              <Skeleton className=\"h-3 w-2/5\" /> {/* Shipment ID */}\n              <Skeleton className=\"h-3 w-1/3 mt-1\" /> {/* Customer Job No. */}\n              <Skeleton className=\"h-3 w-1/4 mt-1\" /> {/* Quantity */}\n              <Skeleton className=\"h-3 w-2/5 mt-1\" /> {/* Exporter */}","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":45,"to":61}}}}],["395",{"pageContent":"File: src/app/shipments/page.tsx\n<Skeleton className=\"h-3 w-2/5 mt-1\" /> {/* Importer */}\n              <div className=\"grid grid-cols-2 gap-2 mt-1\">\n                <Skeleton className=\"h-3 w-3/4\" /> {/* Weight */}\n                <Skeleton className=\"h-3 w-3/4\" /> {/* Pallet Space */}\n              </div>\n              <div className=\"flex items-center mt-1\">\n                <Skeleton className=\"h-4 w-4 mr-1\" />\n                <Skeleton className=\"h-3 w-1/4\" />\n                <Skeleton className=\"h-5 w-20 ml-2\" /> {/* Location Badge */}\n              </div>\n              <div className=\"flex items-center mt-2 space-x-2\">\n                <Skeleton className=\"h-4 w-4\" /> <Skeleton className=\"h-3 w-20\" /> {/* Released Status */}\n              </div>\n              <div className=\"flex items-center mt-1 space-x-2\">\n                <Skeleton className=\"h-4 w-4\" /> <Skeleton className=\"h-3 w-20\" /> {/* Cleared Status */}\n              </div>\n            </CardContent>","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":62,"to":78}}}}],["396",{"pageContent":"File: src/app/shipments/page.tsx\n</CardContent>\n            <div className=\"p-4 pt-0 border-t mt-auto\">\n              <Skeleton className=\"h-9 w-full\" /> {/* Manage Locations Button */}\n            </div>\n          </Card>\n        ) : (\n           <Card className=\"shadow-md w-full\" key={i}>\n            <div className=\"p-4 flex items-center justify-between\">\n              <div className=\"flex-grow space-y-1.5\">\n                <Skeleton className=\"h-5 w-3/5\" /> {/* STS Job */}\n                <Skeleton className=\"h-4 w-2/5\" /> {/* Trailer ID */}\n                <Skeleton className=\"h-3 w-1/2\" /> {/* Shipment ID */}\n                <Skeleton className=\"h-3 w-1/3 mb-1\" /> {/* Customer Job No. */}\n                <div className=\"flex items-center gap-4 text-sm\">\n                  <Skeleton className=\"h-3 w-16\" /> {/* Quantity */}\n                  <Skeleton className=\"h-3 w-24\" /> {/* Exporter */}\n                  <Skeleton className=\"h-3 w-24\" /> {/* Importer */}","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":78,"to":94}}}}],["397",{"pageContent":"File: src/app/shipments/page.tsx\n<Skeleton className=\"h-5 w-20\" /> {/* Location */}\n                </div>\n                <div className=\"flex items-center gap-4 text-sm mt-1\">\n                  <Skeleton className=\"h-3 w-20\" /> {/* Weight */}\n                  <Skeleton className=\"h-3 w-20\" /> {/* Pallet Space */}\n                </div>\n                 <div className=\"flex items-center mt-1 space-x-2\">\n                    <Skeleton className=\"h-4 w-4\" /> <Skeleton className=\"h-3 w-24\" /> {/* Released */}\n                 </div>\n                 <div className=\"flex items-center mt-1 space-x-2\">\n                    <Skeleton className=\"h-4 w-4\" /> <Skeleton className=\"h-3 w-24\" /> {/* Cleared */}\n                 </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Skeleton className=\"h-9 w-32\" />\n                <Skeleton className=\"h-8 w-8\" />\n              </div>\n            </div>\n          </Card>\n        )\n      ))}\n    </div>\n  );","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":95,"to":117}}}}],["398",{"pageContent":"File: src/app/shipments/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow\">\n        <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n          <PackageSearch className=\"mr-3 h-8 w-8 text-primary\" /> All Shipments\n        </h1>\n        <Badge variant=\"secondary\" className=\"text-lg px-3 py-1\">\n          Total: {isClient ? shipments.length : <Skeleton className=\"h-5 w-10 inline-block\" />}\n        </Badge>\n      </div>","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":119,"to":128}}}}],["399",{"pageContent":"File: src/app/shipments/page.tsx\n<div className=\"p-4 bg-card rounded-lg shadow space-y-4\">\n        <div className=\"flex flex-col md:flex-row gap-4\">\n          <div className=\"relative flex-grow\">\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n            <Input\n              placeholder=\"Search by ID, STS Job, Cust. Job, Trailer ID, Importer, Exporter, Location...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n          <Select value={trailerIdFilter} onValueChange={(value) => setTrailerIdFilter(value)}>\n            <SelectTrigger className=\"w-full md:w-[220px]\">\n              <div className=\"flex items-center\">\n                <Truck className=\"mr-2 h-4 w-4 text-muted-foreground\" />\n                <SelectValue placeholder=\"Filter by trailer ID\" />\n              </div>\n            </SelectTrigger>\n            <SelectContent>","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":130,"to":148}}}}],["400",{"pageContent":"File: src/app/shipments/page.tsx\n<SelectContent>\n              <SelectItem value=\"all\">All Trailers</SelectItem>\n              {isClient && trailers.map(trailer => (\n                <SelectItem key={trailer.id} value={trailer.id}>\n                  {trailer.name} ({trailer.id})\n                </SelectItem>\n              ))}\n              {!isClient && <Skeleton className=\"h-8 w-full my-1\" />}\n            </SelectContent>\n          </Select>\n          <div className=\"flex gap-2\">\n            <Button variant={viewMode === 'grid' ? 'default' : 'outline'} size=\"icon\" onClick={() => setViewMode('grid')} aria-label=\"Grid view\">\n              <LayoutGrid className=\"h-5 w-5\" />\n            </Button>\n            <Button variant={viewMode === 'list' ? 'default' : 'outline'} size=\"icon\" onClick={() => setViewMode('list')} aria-label=\"List view\">\n              <ListFilter className=\"h-5 w-5\" />\n            </Button>\n          </div>\n        </div>\n      </div>","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":148,"to":167}}}}],["401",{"pageContent":"File: src/app/shipments/page.tsx\n{!isClient ? (\n        <ShipmentListSkeleton />\n      ) : filteredShipments.length === 0 ? (\n        <div className=\"text-center py-10 bg-card rounded-lg shadow\">\n          <PackageIcon className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n          <p className=\"mt-4 text-xl text-muted-foreground\">No shipments found.</p>\n          <p className=\"text-muted-foreground\">Try adjusting your search or filters.</p>\n        </div>\n      ) : (\n         <div className={viewMode === 'grid' ? \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\" : \"space-y-4\"}>\n          {filteredShipments.map((shipment) => (\n            <ShipmentCard\n              key={shipment.id}\n              shipment={shipment}\n              onDelete={() => deleteShipment(shipment.id)}\n              viewMode={viewMode}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}","metadata":{"source":"src/app/shipments/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":169,"to":191}}}}],["402",{"pageContent":"File: src/app/LabelDate.tsx\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { format, parseISO } from 'date-fns';\nimport type { Trailer } from '@/types';\n\nexport default function LabelDate({ trailer }: { trailer: Trailer | null }) {\n  const [labelDate, setLabelDate] = useState('');\n\n  useEffect(() => {\n    const dateFormat = 'dd/MM/yyyy';\n    if (trailer?.arrivalDate) {\n      try {\n        setLabelDate(format(parseISO(trailer.arrivalDate), dateFormat));\n      } catch {\n        setLabelDate(format(new Date(), dateFormat));\n      }\n    } else {\n      setLabelDate(format(new Date(), dateFormat));\n    }\n  }, [trailer]);\n\n  return <>{labelDate}</>;\n}","metadata":{"source":"src/app/LabelDate.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":24}}}}],["403",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n'use client';","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":2}}}}],["404",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nimport { useState, useEffect, useMemo } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { QuizItem, AnsweredQuizItem, QuizReport as QuizReportType } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter, CardDescription } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { ChevronLeft, ChevronRight, Check, X, PackageSearch, HelpCircle, Truck, CalendarDays, Box as BoxIcon, Briefcase, MapPin, Save, ListChecks } from 'lucide-react';\nimport { Progress } from '@/components/ui/progress';\nimport Link from 'next/link';\nimport { format, parseISO } from 'date-fns';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":4,"to":24}}}}],["405",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nAlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\nimport { useToast } from '@/hooks/use-toast';","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":24,"to":27}}}}],["406",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nexport default function StockCheckQuizPage() {\n  const { shipments, getTrailerById, addQuizReport } = useWarehouse();\n  const { toast } = useToast();\n  const [isClient, setIsClient] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<{ [itemId: string]: 'yes' | 'no' }>({});\n  const [isQuizComplete, setIsQuizComplete] = useState(false);\n  const [showNamePrompt, setShowNamePrompt] = useState(false);\n  const [completerName, setCompleterName] = useState('');\n  \n  const [sessionQuizItems, setSessionQuizItems] = useState<QuizItem[]>([]);\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":29,"to":43}}}}],["407",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nconst formatDateSafe = (dateString?: string, dateFormat = 'PP') => {\n    if (!dateString) return 'N/A';\n    try {\n      return format(parseISO(dateString), dateFormat);\n    } catch (error) {\n      return \"Invalid Date\";\n    }\n  };\n  \n  useEffect(() => {\n    if (isClient) {\n      const initialItems: QuizItem[] = [];\n      shipments\n        .filter(shipment => !shipment.releasedAt)\n        .forEach(shipment => {\n          const trailer = getTrailerById(shipment.trailerId);\n          const shipmentLocations = shipment.locations && shipment.locations.length > 0\n            ? shipment.locations\n            : []; // If no locations, it's effectively pending, treat as empty for quiz item generation","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":45,"to":63}}}}],["408",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nshipmentLocations.forEach((loc, index) => {\n            if (loc.name !== 'Pending Assignment') { // Only include items with specific locations\n              initialItems.push({\n                id: `${shipment.id}-${loc.name}-${index}`, \n                shipmentId: shipment.id,\n                stsJob: shipment.stsJob,\n                trailerId: shipment.trailerId,\n                trailerCompany: trailer?.company,\n                trailerArrivalDateFormatted: formatDateSafe(trailer?.arrivalDate),\n                shipmentQuantity: shipment.quantity,\n                locationName: loc.name,\n                locationPallets: loc.pallets,\n              });\n            }\n          });\n        });","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":65,"to":80}}}}],["409",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nconst sortedInitialItems = initialItems.sort((a, b) => {\n        // \"Pending Assignment\" items are already filtered out, so no need for specific sorting for them.\n        if (a.locationName.toLowerCase() < b.locationName.toLowerCase()) return -1;\n        if (a.locationName.toLowerCase() > b.locationName.toLowerCase()) return 1;\n        const dateAVal = a.trailerArrivalDateFormatted;\n        const dateBVal = b.trailerArrivalDateFormatted;\n        const dateA = dateAVal !== 'N/A' && dateAVal !== 'Invalid Date' ? parseISO(formatDateSafe(dateAVal, 'yyyy-MM-dd')).getTime() : 0;\n        const dateB = dateBVal !== 'N/A' && dateBVal !== 'Invalid Date' ? parseISO(formatDateSafe(dateBVal, 'yyyy-MM-dd')).getTime() : 0;\n        if (dateB !== dateA) return dateB - dateA; // Sort by date descending (newest first)\n        if (a.trailerId.toLowerCase() < b.trailerId.toLowerCase()) return -1;\n        if (a.trailerId.toLowerCase() > b.trailerId.toLowerCase()) return 1;","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":82,"to":92}}}}],["410",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nreturn a.stsJob - b.stsJob;\n      });\n      setSessionQuizItems(sortedInitialItems);\n    }\n  }, [isClient, shipments, getTrailerById]);","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":93,"to":97}}}}],["411",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nconst currentItem = sessionQuizItems[currentIndex];\n  const totalItems = sessionQuizItems.length;\n  const progressPercentage = totalItems > 0 ? ((currentIndex + 1) / totalItems) * 100 : 0;\n\n  const handleAnswer = (answer: 'yes' | 'no') => {\n    if (!currentItem) return;\n    setUserAnswers(prev => ({ ...prev, [currentItem.id]: answer }));\n    if (currentIndex < totalItems - 1) {\n      setCurrentIndex(prev => prev + 1);\n    } else {\n      setIsQuizComplete(true);\n      setShowNamePrompt(true);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentIndex < totalItems - 1) {\n      setCurrentIndex(prev => prev + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(prev => prev - 1);\n    }\n  };","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":100,"to":125}}}}],["412",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nconst resetQuiz = () => {\n    setCurrentIndex(0);\n    setUserAnswers({});\n    setIsQuizComplete(false);\n    setShowNamePrompt(false);\n    setCompleterName('');\n    if (isClient) { \n        const initialItems: QuizItem[] = [];\n        shipments\n            .filter(shipment => !shipment.releasedAt)\n            .forEach(shipment => {\n            const trailer = getTrailerById(shipment.trailerId);\n            const shipmentLocations = shipment.locations && shipment.locations.length > 0\n                ? shipment.locations\n                : [];","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":127,"to":141}}}}],["413",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nshipmentLocations.forEach((loc, index) => {\n                if (loc.name !== 'Pending Assignment') { // Only include items with specific locations\n                    initialItems.push({\n                    id: `${shipment.id}-${loc.name}-${index}`,\n                    shipmentId: shipment.id,\n                    stsJob: shipment.stsJob,\n                    trailerId: shipment.trailerId,\n                    trailerCompany: trailer?.company,\n                    trailerArrivalDateFormatted: formatDateSafe(trailer?.arrivalDate),\n                    shipmentQuantity: shipment.quantity,\n                    locationName: loc.name,\n                    locationPallets: loc.pallets,\n                    });\n                }\n            });\n            });\n        const sortedInitialItems = initialItems.sort((a, b) => {\n            if (a.locationName.toLowerCase() < b.locationName.toLowerCase()) return -1;","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":143,"to":160}}}}],["414",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nif (a.locationName.toLowerCase() > b.locationName.toLowerCase()) return 1;\n            const dateAVal = a.trailerArrivalDateFormatted;\n            const dateBVal = b.trailerArrivalDateFormatted;\n            const dateA = dateAVal !== 'N/A' && dateAVal !== 'Invalid Date' ? parseISO(formatDateSafe(dateAVal, 'yyyy-MM-dd')).getTime() : 0;\n            const dateB = dateBVal !== 'N/A' && dateBVal !== 'Invalid Date' ? parseISO(formatDateSafe(dateBVal, 'yyyy-MM-dd')).getTime() : 0;\n            if (dateB !== dateA) return dateB - dateA; // Sort by date descending (newest first)\n            if (a.trailerId.toLowerCase() < b.trailerId.toLowerCase()) return -1;\n            if (a.trailerId.toLowerCase() > b.trailerId.toLowerCase()) return 1;\n            return a.stsJob - b.stsJob;\n        });\n        setSessionQuizItems(sortedInitialItems);\n    }\n  };","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":161,"to":173}}}}],["415",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nconst handleSaveReport = () => {\n    if (!completerName.trim()) {\n      toast({\n        title: \"Name Required\",\n        description: \"Please enter the name of the person who completed the quiz.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const answeredItems: AnsweredQuizItem[] = sessionQuizItems.map(item => ({\n      ...item,\n      userAnswer: userAnswers[item.id] || 'no', \n    }));\n\n    const report: Omit<QuizReportType, 'id'> = {\n      completedAt: new Date().toISOString(),\n      completedBy: completerName.trim(),\n      items: answeredItems,\n    };\n\n    addQuizReport(report);\n    toast({\n      title: \"Quiz Report Saved!\",\n      description: `Report completed by ${completerName.trim()} has been saved.`,\n    });\n    setShowNamePrompt(false);\n  };\n  \n  const pageTitle = \"Stock Check Quiz\";","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":175,"to":204}}}}],["416",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nif (!isClient) {\n    return (\n      <div className=\"space-y-6\">\n        <Skeleton className=\"h-12 w-1/2\" />\n        <Card className=\"shadow-lg\">\n          <CardHeader><Skeleton className=\"h-8 w-3/4\" /></CardHeader>\n          <CardContent className=\"space-y-4\">\n            {[...Array(5)].map((_, i) => <Skeleton key={i} className=\"h-6 w-full\" />)}\n          </CardContent>\n          <CardFooter className=\"flex justify-between\">\n            <Skeleton className=\"h-10 w-24\" />\n            <Skeleton className=\"h-10 w-24\" />\n          </CardFooter>\n        </Card>\n      </div>\n    );\n  }","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":206,"to":222}}}}],["417",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nif (totalItems === 0 && !isQuizComplete) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow\">\n          <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n            <HelpCircle className=\"mr-3 h-8 w-8 text-primary\" />\n            {pageTitle}\n          </h1>\n        </div>\n        <div className=\"min-h-[400px] flex flex-col items-center justify-center text-center border-2 border-dashed border-border rounded-md p-8 bg-card shadow\">\n          <PackageSearch className=\"h-16 w-16 text-muted-foreground mb-4\" />\n          <p className=\"text-xl text-muted-foreground\">No unreleased stock items with specific locations found to quiz.</p>\n          <p className=\"text-sm text-muted-foreground mt-2\">All stock might be released, pending assignment, or no items in the warehouse.</p>\n           <Button asChild variant=\"outline\" className=\"mt-6\">","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":224,"to":237}}}}],["418",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n<Link href=\"/reports/unreleased-stock-locations\">View Unreleased Stock Report</Link>\n          </Button>\n        </div>\n      </div>\n    );\n  }","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":238,"to":243}}}}],["419",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow\">\n        <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n          <HelpCircle className=\"mr-3 h-8 w-8 text-primary\" />\n          {pageTitle}\n        </h1>\n        {!isQuizComplete && totalItems > 0 && (\n          <div className=\"text-sm text-muted-foreground font-medium\">\n            Item {Math.min(currentIndex + 1, totalItems)} of {totalItems}\n          </div>\n        )}\n      </div>","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":245,"to":257}}}}],["420",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n{!isQuizComplete && totalItems > 0 && (\n        <Progress value={progressPercentage} className=\"w-full h-2\" />\n      )}\n      \n      {currentItem && !isQuizComplete && (\n        <Card className=\"shadow-xl\">\n          <CardHeader>\n            <CardTitle className=\"text-2xl text-primary\">Verify Stock Item:</CardTitle>\n            <CardDescription>Please confirm if the following details match the physical stock.</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-3 text-base\">\n            <div className=\"flex items-center\">\n              <MapPin className=\"mr-2 h-5 w-5 text-muted-foreground\" />\n              <strong className=\"mr-2\">Location:</strong>\n              <span className=\"font-semibold text-lg\">\n                {currentItem.locationName}\n                {currentItem.locationPallets !== undefined ? ` (${currentItem.locationPallets} plts)` : ''}\n              </span>\n            </div>","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":259,"to":277}}}}],["421",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n</div>\n            <div className=\"flex items-center text-xl font-semibold\">\n              <Truck className=\"mr-2 h-6 w-6 text-muted-foreground\" />\n              <strong className=\"mr-2\">Identifier:</strong>\n              <span>Trailer <Link href={`/trailers/${currentItem.trailerId}`} className=\"text-primary hover:underline\">{currentItem.trailerId}</Link> / Job <Link href={`/shipments/${currentItem.shipmentId}`} className=\"text-primary hover:underline\">{currentItem.stsJob}</Link></span>\n            </div>\n             {currentItem.trailerCompany && (\n              <div className=\"flex items-center\">\n                <Briefcase className=\"mr-2 h-5 w-5 text-muted-foreground\" />\n                <strong className=\"mr-2\">Company:</strong>\n                <span>{currentItem.trailerCompany}</span>\n              </div>\n            )}\n            <div className=\"flex items-center\">\n              <CalendarDays className=\"mr-2 h-5 w-5 text-muted-foreground\" />","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":277,"to":291}}}}],["422",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n<strong className=\"mr-2\">Trailer Arrival:</strong>\n              <span>{currentItem.trailerArrivalDateFormatted}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <BoxIcon className=\"mr-2 h-5 w-5 text-muted-foreground\" />\n              <strong className=\"mr-2\">Pieces:</strong>\n              <span className=\"font-semibold text-lg\">{currentItem.shipmentQuantity}</span>\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex flex-col sm:flex-row justify-center gap-4 pt-6 border-t\">\n            <Button \n              onClick={() => handleAnswer('yes')} \n              className=\"bg-green-600 hover:bg-green-700 text-white w-full sm:w-auto text-lg px-8 py-6\"\n              disabled={!!userAnswers[currentItem.id]}\n            >\n              <Check className=\"mr-2 h-6 w-6\" /> YES\n            </Button>\n            <Button \n              onClick={() => handleAnswer('no')}","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":292,"to":310}}}}],["423",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\nclassName=\"bg-red-600 hover:bg-red-700 text-white w-full sm:w-auto text-lg px-8 py-6\"\n              disabled={!!userAnswers[currentItem.id]}\n            >\n              <X className=\"mr-2 h-6 w-6\" /> NO\n            </Button>\n          </CardFooter>\n        </Card>\n      )}","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":311,"to":318}}}}],["424",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n{isQuizComplete && !showNamePrompt && (\n        <Card className=\"shadow-lg text-center p-8 bg-secondary\">\n          <CardTitle className=\"text-2xl text-primary mb-4\">Quiz Complete & Report Saved!</CardTitle>\n          <CardDescription className=\"text-base mb-6\">\n            You have reviewed all unreleased stock items. The report by {completerName || 'N/A'} has been saved.\n          </CardDescription>\n          <div className=\"flex flex-col sm:flex-row justify-center gap-4\">\n            <Button variant=\"outline\" onClick={resetQuiz}>\n              Start New Quiz\n            </Button>\n            <Button asChild>\n              <Link href=\"/reports/unreleased-stock-locations\">View Full Stock Report</Link>\n            </Button>\n            <Button asChild>\n              <Link href=\"/quiz/reports\" className=\"flex items-center\">\n                <ListChecks className=\"mr-2 h-4 w-4\" /> View Quiz Reports\n              </Link>\n            </Button>\n          </div>\n        </Card>","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":320,"to":339}}}}],["425",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n</div>\n        </Card>\n      )}","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":338,"to":340}}}}],["426",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n{!isQuizComplete && totalItems > 0 && (\n        <div className=\"flex justify-between items-center mt-6\">\n          <Button onClick={handlePrevious} disabled={currentIndex === 0}>\n            <ChevronLeft className=\"mr-2 h-4 w-4\" /> Previous Item\n          </Button>\n          <Button onClick={handleNext} disabled={currentIndex >= totalItems - 1 || !userAnswers[currentItem?.id]}>\n            Next Item <ChevronRight className=\"ml-2 h-4 w-4\" />\n          </Button>\n        </div>\n      )}","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":342,"to":351}}}}],["427",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n<AlertDialog open={showNamePrompt} onOpenChange={setShowNamePrompt}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Quiz Complete!</AlertDialogTitle>\n            <AlertDialogDescription>\n              Please enter your name to save the quiz report.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <div className=\"py-2\">\n            <Label htmlFor=\"completerNameInput\" className=\"sr-only\">Your Name</Label>\n            <Input\n              id=\"completerNameInput\"\n              placeholder=\"Enter your name\"\n              value={completerName}\n              onChange={(e) => setCompleterName(e.target.value)}\n              autoFocus\n            />\n          </div>\n          <AlertDialogFooter>\n            <AlertDialogCancel onClick={() => {setShowNamePrompt(false); /* User chose not to save */}}>Cancel</AlertDialogCancel>\n            <AlertDialogAction onClick={handleSaveReport} disabled={!completerName.trim()}>","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":353,"to":373}}}}],["428",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n<Save className=\"mr-2 h-4 w-4\" /> Save Report\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":374,"to":378}}}}],["429",{"pageContent":"File: src/app/quiz/stock-check/page.tsx\n</div>\n  );\n}","metadata":{"source":"src/app/quiz/stock-check/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":380,"to":382}}}}],["430",{"pageContent":"File: src/lib/dom-to-image-style-utils.ts\n// src/lib/dom-to-image-style-utils.ts\n\n// Function to apply specific print-like styles to a cloned element for canvas capture\nexport function applyPrintStylesToClonedElement(clonedElement: HTMLElement, originalElement: HTMLElement): void {\n  const printClasses = Array.from(originalElement.classList).filter(cls => cls.startsWith('print:'));","metadata":{"source":"src/lib/dom-to-image-style-utils.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":5}}}}],["431",{"pageContent":"File: src/lib/dom-to-image-style-utils.ts\n// Remove Tailwind's responsive text size classes from the clone\n  const screenTextSizeClasses = ['text-xs', 'text-sm', 'text-base', 'text-lg', 'text-xl', 'text-2xl', 'text-3xl', 'text-4xl', 'text-5xl', 'text-6xl'];\n  screenTextSizeClasses.forEach(cls => clonedElement.classList.remove(cls));\n  \n  // Default styles for capture\n  clonedElement.style.color = 'black';\n  // Set a default background for the element if one isn't more specifically set by a print class\n  // For text elements, transparent is usually fine if their parent (the label) has a white background.\n  if (!clonedElement.style.backgroundColor) { \n    clonedElement.style.backgroundColor = 'transparent';\n  }","metadata":{"source":"src/lib/dom-to-image-style-utils.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":7,"to":17}}}}],["432",{"pageContent":"File: src/lib/dom-to-image-style-utils.ts\nprintClasses.forEach(pClass => {\n    if (pClass.startsWith('print:text-[')) {\n      const sizeMatch = pClass.match(/print:text-\\[(.*?)]/);\n      if (sizeMatch?.[1]) clonedElement.style.fontSize = sizeMatch[1];\n    } else if (pClass === 'print:font-bold') {\n      clonedElement.style.fontWeight = 'bold';\n    } else if (pClass === 'print:font-semibold') {\n      clonedElement.style.fontWeight = '600';\n    } else if (pClass.startsWith('print:mb-')) {\n      const mbMatch = pClass.match(/print:mb-(\\d+(\\.\\d+)?)/);\n      if (mbMatch?.[1]) clonedElement.style.marginBottom = `${parseFloat(mbMatch[1]) * 4}px`;\n    } else if (pClass.startsWith('print:mt-')) {\n      const mtMatch = pClass.match(/print:mt-(\\d+(\\.\\d+)?)/);\n      if (mtMatch?.[1]) clonedElement.style.marginTop = `${parseFloat(mtMatch[1]) * 4}px`;\n    } else if (pClass.startsWith('print:p-')) {\n      const pMatch = pClass.match(/print:p-(\\d+(\\.\\d+)?)/);","metadata":{"source":"src/lib/dom-to-image-style-utils.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":19,"to":34}}}}],["433",{"pageContent":"File: src/lib/dom-to-image-style-utils.ts\nif (pMatch?.[1]) clonedElement.style.padding = `${parseFloat(pMatch[1]) * 4}px`;\n    } else if (pClass.startsWith('print:pt-')) {\n      const ptMatch = pClass.match(/print:pt-(\\d+(\\.\\d+)?)/);\n      if (ptMatch?.[1]) clonedElement.style.paddingTop = `${parseFloat(ptMatch[1]) * 4}px`;\n    } else if (pClass.startsWith('print:pb-')) {\n      const pbMatch = pClass.match(/print:pb-(\\d+(\\.\\d+)?)/);\n      if (pbMatch?.[1]) clonedElement.style.paddingBottom = `${parseFloat(pbMatch[1]) * 4}px`;\n    } else if (pClass.startsWith('print:leading-')) {\n       const leadingMatch = pClass.match(/print:leading-(normal|relaxed|tight|snug|loose)/);\n       if (leadingMatch?.[1]) {\n         const mapping = { normal: 'normal', relaxed: '1.625', tight: '1.25', snug: '1.375', loose: '2' };\n         clonedElement.style.lineHeight = mapping[leadingMatch[1] as keyof typeof mapping] || 'normal';\n       }\n    }","metadata":{"source":"src/lib/dom-to-image-style-utils.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":35,"to":48}}}}],["434",{"pageContent":"File: src/lib/dom-to-image-style-utils.ts\n}\n    }\n    // Width/height specific to elements *within* the label (e.g., print:w-24 for a barcode container)\n    // This part of the original 'applyCaptureStyles' was complex and specific.\n    // For this utility, we'll focus on text styles primarily.\n    // If specific `print:w-[]` or `print:h-[]` are needed for child elements,\n    // they might need more targeted handling or ensuring they are directly applied.\n  });\n}","metadata":{"source":"src/lib/dom-to-image-style-utils.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":47,"to":55}}}}],["435",{"pageContent":"File: src/lib/dom-to-image-style-utils.ts\n// Recursively apply styles\nexport function applyRecursivePrintStyles(originalNode: HTMLElement, clonedNode: HTMLElement): void {\n  applyPrintStylesToClonedElement(clonedNode, originalNode);\n  const originalChildren = Array.from(originalNode.children) as HTMLElement[];\n  const clonedChildren = Array.from(clonedNode.children) as HTMLElement[];\n  originalChildren.forEach((origChild, index) => {\n    if (clonedChildren[index]) {\n      applyRecursivePrintStyles(origChild, clonedChildren[index]);\n    }\n  });\n}","metadata":{"source":"src/lib/dom-to-image-style-utils.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":57,"to":67}}}}],["436",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\n'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Shipment, Trailer } from '@/types';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ClipboardList, PackageSearch, Download } from 'lucide-react';\nimport ShipmentLabel from '@/components/label/ShipmentLabel';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { format, parseISO } from 'date-fns';\nimport { useToast } from '@/hooks/use-toast';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport { applyRecursivePrintStyles } from '@/lib/dom-to-image-style-utils';\n\n\nexport default function GenerateShipmentLabelsPage() {\n  const { getTrailerById, getShipmentsByTrailerId } = useWarehouse();\n  const { toast } = useToast();","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":23}}}}],["437",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\nconst [isClient, setIsClient] = useState(false);\n  const [trailerIdInput, setTrailerIdInput] = useState('');\n  const [selectedTrailer, setSelectedTrailer] = useState<Trailer | null>(null);\n  const [shipmentsToLabel, setShipmentsToLabel] = useState<Shipment[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const [labelDateForShipments, setLabelDateForShipments] = useState('');\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":25,"to":36}}}}],["438",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\nconst handleGenerateLabels = () => {\n    if (!trailerIdInput.trim()) {\n      setError('Please enter a Trailer ID.');\n      setSelectedTrailer(null);\n      setShipmentsToLabel([]);\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    const trailer = getTrailerById(trailerIdInput.trim());\n    if (trailer) {\n      setSelectedTrailer(trailer);\n      const shipments = getShipmentsByTrailerId(trailer.id);\n      setShipmentsToLabel(shipments);\n      if (shipments.length === 0) {\n        setError(`No shipments found for Trailer ID: ${trailer.id}`);\n      }\n      const dateFormat = 'dd/MM/yyyy';\n      if (trailer.arrivalDate) {\n        try {\n          setLabelDateForShipments(format(parseISO(trailer.arrivalDate), dateFormat));\n        } catch {\n          setLabelDateForShipments(format(new Date(), dateFormat));\n        }\n      } else {\n        setLabelDateForShipments(format(new Date(), dateFormat));\n      }\n    } else {","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":38,"to":65}}}}],["439",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\n}\n    } else {\n      setError(`Trailer with ID: ${trailerIdInput.trim()} not found.`);\n      setSelectedTrailer(null);\n      setShipmentsToLabel([]);\n    }\n    setIsLoading(false);\n  };","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":64,"to":71}}}}],["440",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\nconst handleDownloadAllLabelsAsPdf = async () => {\n    if (shipmentsToLabel.length === 0 || !selectedTrailer) {\n      toast({\n        title: \"No Labels to Process\",\n        description: \"Please generate labels first.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    toast({\n      title: \"PDF Generation Started\",\n      description: `Attempting to generate PDF with ${shipmentsToLabel.length} label(s). This may take a moment.`,\n    });\n\n    // Constants for label dimensions in mm and DPI for canvas rendering\n    const LABEL_WIDTH_MM = 150;\n    const LABEL_HEIGHT_MM = 108;\n    const DPI = 150; \n    const MM_TO_INCH = 1 / 25.4;\n\n    const targetWidthPx = Math.round(LABEL_WIDTH_MM * MM_TO_INCH * DPI);\n    const targetHeightPx = Math.round(LABEL_HEIGHT_MM * MM_TO_INCH * DPI);\n    \n    const pdf = new jsPDF({\n      orientation: 'landscape', // Since 150mm > 108mm\n      unit: 'mm',\n      format: [LABEL_WIDTH_MM, LABEL_HEIGHT_MM],\n    });","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":73,"to":101}}}}],["441",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\nconst labelElements = document.querySelectorAll('.label-item');\n\n    for (let i = 0; i < labelElements.length; i++) {\n      const labelElement = labelElements[i] as HTMLElement;\n      if (!labelElement) continue;","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":103,"to":107}}}}],["442",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\ntry {\n        const canvas = await html2canvas(labelElement, {\n          useCORS: true,\n          backgroundColor: '#ffffff',\n          width: targetWidthPx, \n          height: targetHeightPx,\n          scale: 2, // Render at higher res, then scale down to targetWidth/Height for quality\n          logging: false,\n          onclone: (documentClone) => {\n            const clonedLabelRoot = documentClone.getElementById(labelElement.id);\n            if (clonedLabelRoot) {\n              // Style the root of the cloned label for capture\n              clonedLabelRoot.style.width = `${targetWidthPx}px`;\n              clonedLabelRoot.style.height = `${targetHeightPx}px`;\n              clonedLabelRoot.style.border = '1px solid black';\n              clonedLabelRoot.style.padding = `${0.375 * 16}px`; // Approx print:p-1.5\n              clonedLabelRoot.style.display = 'flex';\n              clonedLabelRoot.style.flexDirection = 'column';","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":109,"to":126}}}}],["443",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\nclonedLabelRoot.style.backgroundColor = '#ffffff';\n              clonedLabelRoot.style.color = '#000000';\n              clonedLabelRoot.style.boxSizing = 'border-box';\n              applyRecursivePrintStyles(labelElement, clonedLabelRoot);\n            }\n          },\n        });\n        const imageDataUrl = canvas.toDataURL('image/png', 1.0);\n        \n        if (i > 0) {\n          pdf.addPage([LABEL_WIDTH_MM, LABEL_HEIGHT_MM], 'landscape');\n        }\n        pdf.addImage(imageDataUrl, 'PNG', 0, 0, LABEL_WIDTH_MM, LABEL_HEIGHT_MM);\n        \n        // Small delay to allow UI to update and prevent browser freezing on large jobs\n        if (i < labelElements.length - 1) {\n            await new Promise(resolve => setTimeout(resolve, 250)); \n        }","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":127,"to":144}}}}],["444",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\n} catch (error) {\n        console.error('Error generating image for PDF for label:', labelElement.id, error);\n        toast({\n          title: \"Error Generating Image\",\n          description: `Could not process label for ${shipmentsToLabel[i]?.stsJob}. Skipping.`,\n          variant: \"destructive\",\n        });\n      }\n    }\n\n    pdf.save(`labels_trailer_${selectedTrailer.id}.pdf`);\n    toast({\n      title: \"PDF Generated\",\n      description: \"The PDF with all labels has been downloaded.\",\n    });\n  };","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":146,"to":161}}}}],["445",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <Card className=\"no-print\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center text-2xl\">\n            <ClipboardList className=\"mr-3 h-7 w-7 text-primary\" />\n            Generate Shipment Labels\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-col sm:flex-row items-end gap-4\">\n            <div className=\"flex-grow\">\n              <Label htmlFor=\"trailerIdInput\" className=\"text-lg font-semibold\">Enter Trailer ID:</Label>\n              <Input\n                id=\"trailerIdInput\"\n                value={trailerIdInput}\n                onChange={(e) => setTrailerIdInput(e.target.value)}\n                placeholder=\"e.g., STS2990\"\n                className=\"mt-1 text-base\"\n              />\n            </div>\n            <Button onClick={handleGenerateLabels} disabled={isLoading} className=\"w-full sm:w-auto\">","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":164,"to":185}}}}],["446",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\n{isLoading ? 'Generating...' : 'Generate Labels'}\n            </Button>\n          </div>\n          {error && <p className=\"mt-3 text-sm text-destructive\">{error}</p>}\n        </CardContent>\n      </Card>","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":186,"to":191}}}}],["447",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\n{isLoading && (\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-8 print:block print:space-y-0 print:gap-0 label-grid\" style={{ '--label-width': '150mm' } as React.CSSProperties}>\n          {[...Array(3)].map((_, i) => (\n            <div key={i} className=\"border border-dashed rounded-md p-4 h-[108mm] w-[150mm] flex flex-col items-center justify-center bg-muted/50\">\n              <Skeleton className=\"h-1/3 w-2/3\" />\n              <Skeleton className=\"h-8 w-1/2 mt-4\" />\n            </div>\n          ))}\n        </div>\n      )}","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":193,"to":202}}}}],["448",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\n{isClient && !isLoading && shipmentsToLabel.length > 0 && selectedTrailer && (\n        <>\n          <div className=\"flex justify-end gap-2 no-print mb-4\">\n            <Button onClick={handleDownloadAllLabelsAsPdf} variant=\"outline\">\n              <Download className=\"mr-2 h-4 w-4\" /> Download All Labels as PDF\n            </Button>\n          </div>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-4 gap-y-10 print:block print:space-y-0 print:gap-0 label-grid\" style={{ '--label-width': '150mm' } as React.CSSProperties}>\n            {shipmentsToLabel.map((shipment) => (\n              <ShipmentLabel\n                key={shipment.id}\n                shipment={shipment}\n                trailer={selectedTrailer!}\n                labelDate={labelDateForShipments}\n              />\n            ))}\n          </div>\n        </>\n      )}","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":204,"to":222}}}}],["449",{"pageContent":"File: src/app/labels/generate-shipment-labels/page.tsx\n{isClient && !isLoading && !error && shipmentsToLabel.length === 0 && selectedTrailer && (\n        <Card className=\"mt-6\">\n          <CardContent className=\"pt-6 text-center\">\n            <PackageSearch className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n            <p className=\"mt-4 text-xl text-muted-foreground\">\n              No shipments found for Trailer ID: <span className=\"font-semibold\">{selectedTrailer.id}</span>.\n            </p>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}","metadata":{"source":"src/app/labels/generate-shipment-labels/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":224,"to":236}}}}],["450",{"pageContent":"File: src/app/globals.css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  :root {\n    --background: 0 0% 100%; /* White */\n    --foreground: 240 10% 3.9%; /* Dark Gray - almost black */\n\n    --card: 0 0% 100%;\n    --card-foreground: 240 10% 3.9%;\n\n    --popover: 0 0% 100%;\n    --popover-foreground: 240 10% 3.9%;\n\n    --primary: 222.2 47.4% 11.2%; /* Standard Blue Primary */\n    --primary-foreground: 0 0% 100%; /* White */\n\n    --secondary: 210 40% 96.1%; /* Light Gray */\n    --secondary-foreground: 240 5.9% 10%;\n\n    --muted:  210 40% 96.1%;\n    --muted-foreground: 240 3.8% 46.1%;\n\n    --accent: 210 40% 96.1%;  /* Standard Blue Accent */\n    --accent-foreground: 222.2 47.4% 11.2%;\n\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n\n    --border: 0 0% 89.8%; /* Lighter gray for borders */\n    --input: 0 0% 89.8%;\n    --ring: 222.2 47.4% 11.2%; /* Standard Blue for focus rings */\n\n    --radius: 0.5rem;","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":36}}}}],["451",{"pageContent":"File: src/app/globals.css\n--radius: 0.5rem;\n\n    /* Chart colors */\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 350 75% 50%;\n\n    /* Sidebar colors - Kept original as per previous requirements */\n    --sidebar-background: 240 10% 3.9%; \n    --sidebar-foreground: 0 0% 98%; \n    --sidebar-primary: 0 0% 98%;\n    --sidebar-primary-foreground: 240 5.9% 10%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 0 0% 98%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 240 4.9% 83.9%;\n  }\n\n  .dark {\n    --background: 240 10% 3.9%;\n    --foreground: 0 0% 98%;\n\n    --card: 240 10% 3.9%;\n    --card-foreground: 0 0% 98%;\n\n    --popover: 240 10% 3.9%;\n    --popover-foreground: 0 0% 98%;\n\n    --primary: 217.2 91.2% 59.8%; /* Lighter Blue for dark mode */\n    --primary-foreground: 240 5.9% 10%;\n\n    --secondary: 240 3.7% 15.9%;\n    --secondary-foreground: 0 0% 98%;","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":36,"to":70}}}}],["452",{"pageContent":"File: src/app/globals.css\n--muted: 240 3.7% 15.9%;\n    --muted-foreground: 240 5% 64.9%;\n\n    --accent: 217.2 91.2% 59.8%; /* Lighter Blue accent for dark mode */\n    --accent-foreground: 0 0% 98%;\n\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n\n    --border: 240 3.7% 15.9%;\n    --input: 240 3.7% 15.9%;\n    --ring: 217.2 91.2% 59.8%; /* Lighter Blue for dark mode focus rings */\n\n    /* Chart colors for dark mode */\n    --chart-1: 210 70% 80%;\n    --chart-2: 160 60% 75%;\n    --chart-3: 40 80% 70%;\n    --chart-4: 290 65% 75%;\n    --chart-5: 350 75% 70%;\n    \n    /* Sidebar colors for dark mode - Kept original */\n    --sidebar-background: 240 10% 3.9%; \n    --sidebar-foreground: 0 0% 98%;\n    --sidebar-primary: 0 0% 98%;\n    --sidebar-primary-foreground: 240 5.9% 10%;\n    --sidebar-accent: 240 3.7% 15.9%;\n    --sidebar-accent-foreground: 0 0% 98%;\n    --sidebar-border: 240 3.7% 15.9%;\n    --sidebar-ring: 240 4.9% 83.9%;\n  }\n}","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":72,"to":102}}}}],["453",{"pageContent":"File: src/app/globals.css\n@layer base {\n  html {\n    @apply antialiased;\n    font-family: var(--font-geist-sans);\n    font-feature-settings: \"rlig\" 1, \"calt\" 1;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n  pre, code, kbd, samp {\n    font-family: var(--font-geist-mono);\n  }\n}","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":104,"to":116}}}}],["454",{"pageContent":"File: src/app/globals.css\n/* Custom print styles */\n@media print {\n  .no-print {\n    display: none !important;\n  }\n  .printable-area {\n    box-shadow: none !important;\n    border: none !important;\n    page-break-inside: avoid; /* Attempt to keep the entire printable area on one page */\n  }\n  .print-only-block {\n    display: block !important; /* Ensure it's block, could be other display types too */\n  }\n  /* Hide elements within a printable area that should not be printed */\n  .printable-area .no-print-in-area {\n     display: none !important;\n  }\n   /* Ensure card content prints reasonably */\n  .card-content-print {\n    padding-top: 1rem !important; /* Adjust as needed */\n  }\n  .print-text-foreground {\n    color: #000 !important; /* Ensure text is black for printing */\n  }\n  .print-no-underline {\n    text-decoration: none !important;\n  }","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":118,"to":144}}}}],["455",{"pageContent":"File: src/app/globals.css\n/* Specific for ACP form print and general report printing */\n  .printable-area h1, .printable-area h2, .printable-area h3, .printable-area p, .printable-area span, .printable-area label, .printable-area div {\n    color: black !important; /* Ensure all text is black */\n    font-size: 9pt !important; /* Adjust font size for print */\n    line-height: 1.2 !important;\n  }\n  .printable-area .font-bold {\n    font-weight: bold !important;\n  }\n  .printable-area .border-foreground {\n    border-color: black !important;\n  }\n   .printable-area .border-muted-foreground {\n    border-color: #666 !important; /* A lighter gray for dashed lines */\n  }\n  .printable-area .min-h-\\[1\\.5em\\] { min-height: 1.5em !important; }\n  .printable-area .min-h-\\[2\\.5em\\] { min-height: 2.5em !important; }\n  .printable-area .mb-0\\.5 { margin-bottom: 0.125rem !important; }\n  .printable-area .mb-1 { margin-bottom: 0.25rem !important; }\n  .printable-area .mt-0\\.5 { margin-top: 0.125rem !important; }","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":146,"to":165}}}}],["456",{"pageContent":"File: src/app/globals.css\n.printable-area .mt-1 { margin-top: 0.25rem !important; }\n  .printable-area .p-1 { padding: 0.25rem !important; }\n  .printable-area .pb-1 { padding-bottom: 0.25rem !important; }\n  .printable-area .pt-1 { padding-top: 0.25rem !important; }\n  .printable-area .space-y-0\\.5 > :not([hidden]) ~ :not([hidden]) { margin-top: 0.125rem !important; }\n  .printable-area .space-y-1 > :not([hidden]) ~ :not([hidden]) { margin-top: 0.25rem !important; }","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":166,"to":171}}}}],["457",{"pageContent":"File: src/app/globals.css\n/* Remove page breaks inside important blocks if possible, or manage them */\n  .printable-area .border {\n    page-break-inside: avoid;\n  }","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":173,"to":176}}}}],["458",{"pageContent":"File: src/app/globals.css\n/* Styles for the signature block in print view */\n  .print-signature-block { /* The wrapper div for signature section */\n    padding-top: 1rem !important;\n    padding-bottom: 1rem !important;\n    margin-top: 1rem !important;\n    border-top-color: black !important;\n  }\n  .print-signature-block h3 {\n    font-size: 8pt !important;\n    margin-bottom: 0.5rem !important; \n  }\n  .print-signature-block label {\n    font-size: 7pt !important;\n    margin-bottom: 0.05rem !important; /* minimal space below label */\n  }\n  .print-signature-block .grid {\n    gap: 0.5rem !important; \n  }\n  .print-signature-block .h-12 { /* The signature line */\n    height: 2em !important; \n    margin-bottom: 0.1rem !important; /* minimal space after each line */\n    border-bottom-color: black !important;\n  }\n  .print-signature-block .space-y-1 > :not([hidden]) ~ :not([hidden]) { \n    margin-top: 0.1rem !important; /* reduce space between label and line */\n  }","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":178,"to":203}}}}],["459",{"pageContent":"File: src/app/globals.css\n/* Styles for label generation */\n  .label-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(150mm, 1fr)); /* Approximate label width */\n    gap: 2mm; /* Space between labels */\n  }\n  .label-item {\n    page-break-inside: avoid !important;\n    background-color: white !important; /* Ensure white background for labels */\n    color: black !important; /* Ensure black text for labels */\n  }\n   /* Ensure all text within label-item is black for printing */\n  .label-item, .label-item * {\n    color: black !important;\n  }\n  .print-page-break-after-always {\n    page-break-after: always !important;\n  }\n  .print\\:w-\\[48mm\\] { width: 48mm !important; }\n  .print\\:h-\\[70mm\\] { height: 70mm !important; }\n  .print\\:w-\\[108mm\\] { width: 108mm !important; }\n  .print\\:h-\\[108mm\\] { height: 108mm !important; }\n  .print\\:w-\\[150mm\\] { width: 150mm !important; }\n  .print\\:h-\\[150mm\\] { height: 150mm !important; }","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":205,"to":228}}}}],["460",{"pageContent":"File: src/app/globals.css\n.print\\:p-1\\.5 { padding: 0.375rem !important; } /* approx 1.5mm if 1rem = 16px */\n  .print\\:p-2 { padding: 0.5rem !important; }\n  .print\\:p-3 { padding: 0.75rem !important; }\n  \n  .print\\:text-\\[100pt\\] { font-size: 100pt !important; }\n  .print\\:text-\\[95pt\\] { font-size: 95pt !important; }\n  .print\\:text-\\[52pt\\] { font-size: 52pt !important; }\n  .print\\:text-\\[48pt\\] { font-size: 48pt !important; }\n  .print\\:text-\\[44pt\\] { font-size: 44pt !important; }\n  .print\\:text-\\[40pt\\] { font-size: 40pt !important; }\n  .print\\:text-\\[36pt\\] { font-size: 36pt !important; }\n  .print\\:text-\\[32pt\\] { font-size: 32pt !important; }\n  .print\\:text-\\[28pt\\] { font-size: 28pt !important; }\n  .print\\:text-\\[22pt\\] { font-size: 22pt !important; }\n  .print\\:text-\\[20pt\\] { font-size: 20pt !important; }\n  .print\\:text-\\[18pt\\] { font-size: 18pt !important; }\n  .print\\:text-\\[16pt\\] { font-size: 16pt !important; }\n  .print\\:text-\\[14pt\\] { font-size: 14pt !important; }","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":229,"to":246}}}}],["461",{"pageContent":"File: src/app/globals.css\n.print\\:text-\\[12pt\\] { font-size: 12pt !important; }\n  .print\\:text-\\[10pt\\] { font-size: 10pt !important; }\n  .print\\:text-\\[9pt\\] { font-size: 9pt !important; }\n  .print\\:text-\\[8pt\\] { font-size: 8pt !important; }\n  .print\\:text-\\[7pt\\] { font-size: 7pt !important; }\n  .print\\:text-\\[6pt\\] * { font-size: 6pt !important; } /* Retained for ACP form potentially */\n  .print\\:text-\\[5\\.5pt\\] { font-size: 5.5pt !important; }\n  .print\\:text-\\[5pt\\] { font-size: 5pt !important; }\n  .print\\:text-\\[4\\.5pt\\] { font-size: 4.5pt !important; }\n  \n  .print\\:mb-0\\.5 { margin-bottom: 0.125rem !important; }\n  .print\\:mb-1 { margin-bottom: 0.25rem !important; }\n  .print\\:mb-2 { margin-bottom: 0.5rem !important; }\n  .print\\:mb-3 { margin-bottom: 0.75rem !important; }\n  .print\\:mt-1 { margin-top: 0.25rem !important; }\n  .print\\:mt-2 { margin-top: 0.5rem !important; }\n  .print\\:my-px { margin-top: 1px !important; margin-bottom: 1px !important; }\n  .print\\:pt-0\\.5 { padding-top: 0.125rem !important; }","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":247,"to":264}}}}],["462",{"pageContent":"File: src/app/globals.css\n.print\\:pt-1 { padding-top: 0.25rem !important; }\n  .print\\:h-5 { height: 1.25rem !important; } /* Adjust as needed for barcode visual */\n  .print\\:w-24 { width: 6rem !important; } /* approx 25mm */\n  .print\\:h-24 { height: 6rem !important; } /* approx 25mm */\n  .print\\:w-32 { width: 8rem !important; } /* approx 34mm */\n  .print\\:h-32 { height: 8rem !important; } /* approx 34mm */\n  .print\\:bg-black { background-color: black !important; }","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":265,"to":271}}}}],["463",{"pageContent":"File: src/app/globals.css\n@page {\n    size: A4; /* Or your target paper size */\n    margin: 10mm; /* Adjust margins as needed */\n  }\n  body {\n    -webkit-print-color-adjust: exact !important; /* Chrome, Safari */\n    color-adjust: exact !important; /* Firefox, Edge */\n  }\n}\n\n/* Ensure this is outside @media print if it applies generally */\n.print-only-block {\n  display: none; /* Hidden by default, shown only for print */\n}\n\nhtml {\n  scroll-padding-top: 4rem; /* Adjust based on your fixed header's height */\n}","metadata":{"source":"src/app/globals.css","contentRoot":"/home/user/studio","loc":{"lines":{"from":274,"to":291}}}}],["464",{"pageContent":"File: src/components/label/ShipmentLabel.tsx\n'use client';\n\nimport type { Shipment, Trailer } from '@/types';\nimport { Download } from 'lucide-react';\nimport html2canvas from 'html2canvas';\nimport { useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport Barcode from 'react-barcode'; // Changed from named to default import\nimport { applyRecursivePrintStyles } from '@/lib/dom-to-image-style-utils';\n\ninterface ShipmentLabelProps {\n  shipment: Shipment;\n  trailer: Trailer;\n  labelDate: string; // Expecting DD/MM/YYYY format\n}\n\nexport default function ShipmentLabel({ shipment, trailer, labelDate }: ShipmentLabelProps) {\n  const barcodeValue = shipment.id || 'error-no-id';\n  const labelRef = useRef<HTMLDivElement>(null);\n\n  const handleDownloadImage = async () => {\n    if (!labelRef.current) return;\n\n    const DPI = 150;\n    const MM_TO_INCH = 1 / 25.4;\n    const LABEL_WIDTH_MM = 150; \n    const LABEL_HEIGHT_MM = 108;","metadata":{"source":"src/components/label/ShipmentLabel.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":28}}}}],["465",{"pageContent":"File: src/components/label/ShipmentLabel.tsx\nconst targetWidthPx = Math.round(LABEL_WIDTH_MM * MM_TO_INCH * DPI);\n    const targetHeightPx = Math.round(LABEL_HEIGHT_MM * MM_TO_INCH * DPI);","metadata":{"source":"src/components/label/ShipmentLabel.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":30,"to":31}}}}],["466",{"pageContent":"File: src/components/label/ShipmentLabel.tsx\ntry {\n      const canvas = await html2canvas(labelRef.current, {\n        useCORS: true,\n        backgroundColor: '#ffffff',\n        width: targetWidthPx,\n        height: targetHeightPx,\n        scale: 2,\n        logging: false,\n        onclone: (documentClone) => {\n          const clonedLabelRoot = documentClone.getElementById(labelRef.current?.id || '');\n          if (clonedLabelRoot && labelRef.current) {\n            // Style the root of the cloned label for capture\n            clonedLabelRoot.style.width = `${targetWidthPx}px`;\n            clonedLabelRoot.style.height = `${targetHeightPx}px`;\n            clonedLabelRoot.style.border = '1px solid black';\n            clonedLabelRoot.style.padding = `${0.375 * 16}px`; // Approx print:p-1.5\n            clonedLabelRoot.style.display = 'flex';\n            clonedLabelRoot.style.flexDirection = 'column';\n            clonedLabelRoot.style.backgroundColor = '#ffffff';\n            clonedLabelRoot.style.color = '#000000';","metadata":{"source":"src/components/label/ShipmentLabel.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":33,"to":52}}}}],["467",{"pageContent":"File: src/components/label/ShipmentLabel.tsx\nclonedLabelRoot.style.boxSizing = 'border-box';\n            applyRecursivePrintStyles(labelRef.current, clonedLabelRoot);\n          }\n        },\n      });\n      const image = canvas.toDataURL('image/png', 1.0);\n      const link = document.createElement('a');\n      link.href = image;\n      link.download = `label-${trailer.id || 'unknown_trailer'}-${shipment.stsJob}.png`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error('Error generating image:', error);\n    }\n  };","metadata":{"source":"src/components/label/ShipmentLabel.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":53,"to":68}}}}],["468",{"pageContent":"File: src/components/label/ShipmentLabel.tsx\nconst trailerIdDisplay = trailer.id || 'N/A';\n  const companyDisplay = trailer.company || 'N/A';","metadata":{"source":"src/components/label/ShipmentLabel.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":70,"to":71}}}}],["469",{"pageContent":"File: src/components/label/ShipmentLabel.tsx\nreturn (\n    <div className=\"flex flex-col items-center group\">\n      <div\n        ref={labelRef}\n        id={`shipment-label-${shipment.id}`}\n        className=\"border border-foreground rounded-md shadow-sm w-full bg-background text-foreground\n                   print:shadow-none print:border-black print:w-[150mm] print:h-[108mm] print:p-1.5\n                   label-item flex flex-col print:page-break-after-always\"\n      >\n        {/* Main content area for the label text and barcode */}\n        <div className=\"flex-grow flex flex-col p-1 print:p-0 print:leading-normal\"> {/* Removed justify-around for print */}\n          {/* Date row */}\n          <div className=\"flex justify-between items-baseline print:mb-0.5\">\n            <span className=\"text-sm print:text-[28pt] print:font-semibold\">Date:</span>\n            <span className=\"text-sm print:text-[28pt] print:font-semibold text-right\">{labelDate}</span>\n          </div>","metadata":{"source":"src/components/label/ShipmentLabel.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":73,"to":88}}}}],["470",{"pageContent":"File: src/components/label/ShipmentLabel.tsx\n{/* Agent row */}\n          <div className=\"flex justify-between items-baseline print:mb-0.5\">\n            <span className=\"text-sm print:text-[32pt] print:font-semibold\">Agent:</span>\n            <span className=\"text-sm print:text-[32pt] print:font-semibold text-right\" title={companyDisplay}>{companyDisplay}</span>\n          </div>","metadata":{"source":"src/components/label/ShipmentLabel.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":90,"to":94}}}}],["471",{"pageContent":"File: src/components/label/ShipmentLabel.tsx\n{/* Importer row */}\n          <div className=\"flex justify-between items-baseline print:mb-0.5\">\n            <span className=\"text-sm print:text-[32pt] print:font-semibold\">Importer:</span>\n            <span className=\"text-sm print:text-[32pt] print:font-semibold text-right\" title={shipment.importer}>{shipment.importer}</span>\n          </div>\n          \n          {/* Pieces row */}\n          <div className=\"flex justify-between items-baseline print:mb-2\">\n            <span className=\"text-sm print:text-[48pt] print:font-semibold\">Pieces:</span>\n            <span className=\"text-lg print:text-[48pt] print:font-bold text-right\">{shipment.quantity}</span>\n          </div>\n\n          {/* Trailer ID and Job Number */}\n          <p className=\"print:text-[95pt] print:font-bold text-center print:mb-2\"> {/* Changed from 100pt to 95pt */}\n            {trailerIdDisplay} / {shipment.stsJob}\n          </p>\n        </div>","metadata":{"source":"src/components/label/ShipmentLabel.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":96,"to":112}}}}],["472",{"pageContent":"File: src/components/label/ShipmentLabel.tsx\n{/* Barcode Section - at the bottom */}\n        <div className=\"mt-auto pt-1 border-t border-dashed border-muted-foreground print:border-black print:mt-1 print:pt-1 print:mb-0\">\n          <div className=\"flex justify-center items-center print:mt-0.5\">\n             <Barcode\n                value={barcodeValue}\n                format=\"CODE128\"\n                width={1.8} \n                height={100} \n                displayValue={false}\n                background=\"transparent\"\n                lineColor=\"black\"\n                margin={0}\n             />\n          </div>\n        </div>\n      </div>\n      <Button\n        onClick={handleDownloadImage}\n        variant=\"outline\"\n        size=\"sm\"\n        className=\"mt-2 no-print transition-opacity duration-150 individual-label-download-button\"\n        aria-label={`Download label for shipment ${shipment.stsJob} as image`}\n      >\n        <Download className=\"mr-2 h-4 w-4\" />\n        Download Image\n      </Button>\n    </div>\n  );\n}","metadata":{"source":"src/components/label/ShipmentLabel.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":114,"to":142}}}}],["473",{"pageContent":"File: src/app/layout.tsx\nimport type { Metadata } from 'next';\n// Import Geist fonts using named import syntax\nimport { GeistSans } from 'geist/font/sans';\nimport { GeistMono } from 'geist/font/mono';\nimport './globals.css'; // Ensure this path is correct\nimport { Toaster } from \"@/components/ui/toaster\";\nimport Header from '@/components/layout/Header';\nimport { WarehouseProvider } from '@/contexts/WarehouseContext';\n\n// Applying font variables directly to the <html> tag below.\n// This line can be removed if GeistSans.variable and GeistMono.variable are used directly.\n// const M_ENSURE_FONT_IMPORTS = [GeistSans, GeistMono];\n\nexport const metadata: Metadata = {\n  title: 'Bondzilla - Warehouse Management',\n  description: 'Efficiently manage trailers, shipments, and locations.',\n};","metadata":{"source":"src/app/layout.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":18}}}}],["474",{"pageContent":"File: src/app/layout.tsx\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    // Apply font variable classes directly to the <html> tag.\n    <html lang=\"en\" className={`${GeistSans.variable} ${GeistMono.variable}`}>\n      {/*\n        Styling like antialiasing and base font-family is applied in globals.css to the html selector.\n        The body tag below only needs to contain the application structure.\n      */}\n      <body>\n        <WarehouseProvider>\n          <Header />\n          <main className=\"container mx-auto px-4 py-8\">\n            {children}\n          </main>\n          <Toaster />\n        </WarehouseProvider>\n      </body>\n    </html>\n  );\n}","metadata":{"source":"src/app/layout.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":20,"to":43}}}}],["475",{"pageContent":"File: src/components/layout/Header.tsx\nimport Link from 'next/link';\nimport { ShipShapeLogo } from '@/components/icons/ShipShapeLogo';\nimport { Button } from '@/components/ui/button';\nimport { Package, CalendarDays, Truck, LineChart, ClipboardList, HelpCircle, ListChecks } from 'lucide-react'; // Added ListChecks for Quiz Reports","metadata":{"source":"src/components/layout/Header.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":5}}}}],["476",{"pageContent":"File: src/components/layout/Header.tsx\nconst Header = () => {\n  return (\n    <header className=\"bg-card border-b border-border shadow-sm no-print\">\n      <div className=\"container mx-auto px-4 py-4 flex items-center justify-between\">\n        <Link href=\"/\" className=\"flex items-center gap-2 text-2xl font-bold text-primary\">\n          <ShipShapeLogo className=\"h-8 w-8\" />\n          <span>Bondzilla</span>\n        </Link>\n        <nav className=\"flex items-center gap-1 sm:gap-2 flex-wrap justify-end\">\n          <Button variant=\"ghost\" asChild className=\"px-2 sm:px-3\">\n            <Link href=\"/\" className=\"text-foreground hover:text-primary transition-colors text-xs sm:text-sm\">\n              <Truck className=\"mr-1 sm:mr-2 h-4 w-4\" />\n              Trailers\n            </Link>\n          </Button>\n          <Button variant=\"ghost\" asChild className=\"px-2 sm:px-3\">\n            <Link href=\"/shipments\" className=\"text-foreground hover:text-primary transition-colors text-xs sm:text-sm\">","metadata":{"source":"src/components/layout/Header.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":7,"to":23}}}}],["477",{"pageContent":"File: src/components/layout/Header.tsx\n<Package className=\"mr-1 sm:mr-2 h-4 w-4\" />\n              All Shipments\n            </Link>\n          </Button>\n          <Button variant=\"ghost\" asChild className=\"px-2 sm:px-3\">\n            <Link href=\"/calendar\" className=\"text-foreground hover:text-primary transition-colors text-xs sm:text-sm\">\n              <CalendarDays className=\"mr-1 sm:mr-2 h-4 w-4\" />\n              Calendar\n            </Link>\n          </Button>\n          <Button variant=\"ghost\" asChild className=\"px-2 sm:px-3\">\n            <Link href=\"/reports\" className=\"text-foreground hover:text-primary transition-colors text-xs sm:text-sm\">\n              <LineChart className=\"mr-1 sm:mr-2 h-4 w-4\" />\n              Reports\n            </Link>\n          </Button>\n          <Button variant=\"ghost\" asChild className=\"px-2 sm:px-3\">\n            <Link href=\"/labels/generate-shipment-labels\" className=\"text-foreground hover:text-primary transition-colors text-xs sm:text-sm\">","metadata":{"source":"src/components/layout/Header.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":24,"to":41}}}}],["478",{"pageContent":"File: src/components/layout/Header.tsx\n<ClipboardList className=\"mr-1 sm:mr-2 h-4 w-4\" />\n              Shipment Labels\n            </Link>\n          </Button>\n          <Button variant=\"ghost\" asChild className=\"px-2 sm:px-3\">\n            <Link href=\"/quiz/stock-check\" className=\"text-foreground hover:text-primary transition-colors text-xs sm:text-sm\">\n              <HelpCircle className=\"mr-1 sm:mr-2 h-4 w-4\" />\n              Stock Quiz\n            </Link>\n          </Button>\n          <Button variant=\"ghost\" asChild className=\"px-2 sm:px-3\">\n            <Link href=\"/quiz/reports\" className=\"text-foreground hover:text-primary transition-colors text-xs sm:text-sm\">\n              <ListChecks className=\"mr-1 sm:mr-2 h-4 w-4\" />\n              Quiz Reports\n            </Link>\n          </Button>\n        </nav>\n      </div>\n    </header>\n  );\n};","metadata":{"source":"src/components/layout/Header.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":42,"to":62}}}}],["479",{"pageContent":"File: src/components/layout/Header.tsx\nexport default Header;","metadata":{"source":"src/components/layout/Header.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":64,"to":64}}}}],["480",{"pageContent":"File: next.config.ts\nimport type {NextConfig} from 'next';\n\nconst nextConfig: NextConfig = {\n  typescript: {\n    ignoreBuildErrors: true,\n  },\n  eslint: {\n    ignoreDuringBuilds: true,\n  },\n};\n\nexport default nextConfig;","metadata":{"source":"next.config.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":12}}}}],["481",{"pageContent":"File: package.json (Metadata information about the codebase, including framework dependencies, build scripts, etc)\n{\n  \"name\": \"bondzilla\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"genkit:dev\": \"genkit start -- tsx src/ai/dev.ts\",\n    \"genkit:watch\": \"genkit start -- tsx --watch src/ai/dev.ts\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\",\n    \"typecheck\": \"tsc --noEmit\"\n  },\n  \"dependencies\": {\n    \"@genkit-ai/googleai\": \"^1.7.0\",\n    \"@genkit-ai/next\": \"^1.7.0\",\n    \"@hookform/resolvers\": \"^4.1.3\",\n    \"@radix-ui/react-accordion\": \"^1.2.3\",\n    \"@radix-ui/react-alert-dialog\": \"^1.1.6\",\n    \"@radix-ui/react-avatar\": \"^1.1.3\",\n    \"@radix-ui/react-checkbox\": \"^1.1.4\",\n    \"@radix-ui/react-dialog\": \"^1.1.6\",\n    \"@radix-ui/react-dropdown-menu\": \"^2.1.6\",\n    \"@radix-ui/react-label\": \"^2.1.2\",\n    \"@radix-ui/react-menubar\": \"^1.1.6\",\n    \"@radix-ui/react-popover\": \"^1.1.6\",\n    \"@radix-ui/react-progress\": \"^1.1.2\",\n    \"@radix-ui/react-radio-group\": \"^1.2.3\",\n    \"@radix-ui/react-scroll-area\": \"^1.2.3\",","metadata":{"source":"package.json","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":29}}}}],["482",{"pageContent":"File: package.json (Metadata information about the codebase, including framework dependencies, build scripts, etc)\n\"@radix-ui/react-select\": \"^2.1.6\",\n    \"@radix-ui/react-separator\": \"^1.1.2\",\n    \"@radix-ui/react-slider\": \"^1.2.3\",\n    \"@radix-ui/react-slot\": \"^1.1.2\",\n    \"@radix-ui/react-switch\": \"^1.1.3\",\n    \"@radix-ui/react-tabs\": \"^1.1.3\",\n    \"@radix-ui/react-toast\": \"^1.2.6\",\n    \"@radix-ui/react-tooltip\": \"^1.1.8\",\n    \"@tanstack-query-firebase/react\": \"^1.0.5\",\n    \"@tanstack/react-query\": \"^5.66.0\",\n    \"@types/qrcode.react\": \"^1.0.5\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"date-fns\": \"^3.6.0\",\n    \"dotenv\": \"^16.5.0\",\n    \"firebase\": \"^11.7.0\",\n    \"geist\": \"^1.3.0\",\n    \"genkit\": \"^1.7.0\",\n    \"html2canvas\": \"^1.4.1\",\n    \"jspdf\": \"^2.5.1\",\n    \"lucide-react\": \"^0.475.0\",\n    \"next\": \"14.2.3\",\n    \"qrcode.react\": \"^3.1.0\",\n    \"react\": \"^18.2.0\",\n    \"react-barcode\": \"^1.5.1\",\n    \"react-day-picker\": \"^8.10.1\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-hook-form\": \"^7.54.2\",\n    \"recharts\": \"^2.15.1\",\n    \"tailwind-merge\": \"^3.0.1\",","metadata":{"source":"package.json","contentRoot":"/home/user/studio","loc":{"lines":{"from":30,"to":59}}}}],["483",{"pageContent":"File: package.json (Metadata information about the codebase, including framework dependencies, build scripts, etc)\n\"tailwind-merge\": \"^3.0.1\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"uuid\": \"^10.0.0\",\n    \"zod\": \"^3.24.2\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^18.2.0\",\n    \"@types/react-dom\": \"^18.2.0\",\n    \"@types/uuid\": \"^10.0.0\",\n    \"genkit-cli\": \"^1.7.0\",\n    \"postcss\": \"^8\",\n    \"tailwindcss\": \"^3.4.1\",\n    \"typescript\": \"^5\"\n  }\n}","metadata":{"source":"package.json","contentRoot":"/home/user/studio","loc":{"lines":{"from":59,"to":74}}}}],["484",{"pageContent":"File: src/contexts/WarehouseContext.tsx\n// @ts-nocheck\n'use client';\n\nimport type { ReactNode } from 'react';\nimport React, { createContext, useContext, useCallback } from 'react';\nimport type { Trailer, Shipment, TrailerStatus, ShipmentUpdateData, TrailerUpdateData, LocationInfo, QuizReport } from '@/types';\nimport useLocalStorageState from '@/hooks/useLocalStorageState';\nimport { v4 as uuidv4 } from 'uuid'; // Using uuid for unique shipment IDs\nimport { addDays, subDays } from 'date-fns';","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":10}}}}],["485",{"pageContent":"File: src/contexts/WarehouseContext.tsx\ninterface WarehouseContextType {\n  trailers: Trailer[];\n  addTrailer: (trailer: Omit<Trailer, 'status' | 'arrivalDate' | 'storageExpiryDate' | 'weight' | 'company' | 'customField1' | 'customField2' | 'outturnReportDocumentName' | 't1SummaryDocumentName' | 'manifestDocumentName' | 'acpDocumentName'> & { status?: TrailerStatus; company?: string; arrivalDate?: string; storageExpiryDate?: string; weight?: number; customField1?: string; customField2?: string; }) => void;\n  updateTrailerStatus: (trailerId: string, status: TrailerStatus) => void;\n  updateTrailer: (trailerId: string, data: TrailerUpdateData) => void;\n  deleteTrailer: (trailerId: string) => void;\n  shipments: Shipment[];\n  getShipmentsByTrailerId: (trailerId: string) => Shipment[];","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":12,"to":19}}}}],["486",{"pageContent":"File: src/contexts/WarehouseContext.tsx\naddShipment: (shipment: Omit<Shipment, 'id' | 'locations' | 'released' | 'cleared' | 'importer' | 'exporter' | 'stsJob' | 'customerJobNumber' | 'releasedAt' | 'emptyPalletRequired' | 'mrn' | 'clearanceDate' | 'comments'> & { stsJob: number; customerJobNumber?: string; importer: string; exporter: string; initialLocationName?: string, initialLocationPallets?: number, releaseDocumentName?: string, clearanceDocumentName?: string, released?:boolean, cleared?: boolean, weight?: number, palletSpace?: number, emptyPalletRequired?: number, mrn?: string, comments?: string }) => void;\n  deleteShipment: (shipmentId: string) => void;\n  getTrailerById: (trailerId: string) => Trailer | undefined;\n  getShipmentById: (shipmentId: string) => Shipment | undefined;\n  updateShipmentReleasedStatus: (shipmentId: string, released: boolean) => void;\n  updateShipmentClearedStatus: (shipmentId: string, cleared: boolean) => void;\n  updateShipment: (shipmentId: string, data: ShipmentUpdateData) => void;","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":20,"to":26}}}}],["487",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nmarkShipmentAsPrinted: (shipmentId: string) => void;\n  quizReports: QuizReport[];\n  addQuizReport: (reportData: Omit<QuizReport, 'id'>) => void;\n}","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":27,"to":30}}}}],["488",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst WarehouseContext = createContext<WarehouseContextType | undefined>(undefined);","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":32,"to":32}}}}],["489",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst TRAILER_STATUSES: TrailerStatus[] = ['Scheduled', 'Arrived', 'Loading', 'Offloading', 'Devanned'];\nconst COMPANIES = [\"TCB\", \"Cardinal Maritime\"];\nconst IMPORTERS = [\"ImpAlpha Co\", \"ImpBeta Ltd\", \"ImpGamma Inc\", \"ImpDelta LLC\", \"ImpEpsilon Group\", \"ImpZeta Corp\", \"ImpEta Solutions\", \"ImpTheta Global\"];\nconst EXPORTERS = [\"ExpZeta Co\", \"ExpEta Ltd\", \"ExpTheta Inc\", \"ExpIota LLC\", \"ExpKappa Group\", \"ExpLambda Exports\", \"ExpMu Trading\", \"ExpNu Intl.\"];\nconst LOCATION_PREFIXES = [\"Bay \", \"Shelf \", \"Zone \", \"Rack \", \"Aisle \", \"Area \", \"Dock \", \"Staging \", \"Upper \", \"Lower \", \"East \", \"West \"];\nconst LOCATION_SUFFIXES = [\"A1\", \"B2-Top\", \"C3-Low\", \"D4\", \"E5-Mid\", \"F6\", \"G7-East\", \"H8-West\", \"J9\", \"K10\", \"L11\", \"M12\"];\nconst TRAILER_NAMES_PREFIX = [\"Titan\", \"Voyager\", \"Goliath\", \"Pioneer\", \"Sprinter\", \"Juggernaut\", \"Comet\", \"Stallion\"];","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":34,"to":40}}}}],["490",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst COMMENTS_POOL = [\"Handle with care, item is fragile.\", \"Urgent, needs to be dispatched by EOD.\", \"Check for seal integrity before offloading.\", \"Keep in dry storage only.\", \"Re-palletize on arrival.\"];","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":41,"to":41}}}}],["491",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst getRandomElement = <T,>(arr: T[]): T => arr[Math.floor(Math.random() * arr.length)];\nconst getRandomNumber = (min: number, max: number, isInt = true): number => {\n  const num = Math.random() * (max - min) + min;\n  return isInt ? Math.floor(num) : parseFloat(num.toFixed(2));\n};\nconst getRandomBoolean = (): boolean => Math.random() < 0.5;\nconst getRandomDate = (startOffsetDays: number, endOffsetDays: number): string => {\n  const today = new Date();\n  const offset = getRandomNumber(startOffsetDays, endOffsetDays);\n  return addDays(today, offset).toISOString();\n};","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":44,"to":54}}}}],["492",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst generateRandomLocations = (): LocationInfo[] => {\n  const numLocations = getRandomNumber(1, 3);\n  const locations: LocationInfo[] = [];\n  const usedNames = new Set<string>();\n  for (let i = 0; i < numLocations; i++) {\n    let locName;\n    do {\n      locName = `${getRandomElement(LOCATION_PREFIXES)}${getRandomElement(LOCATION_SUFFIXES)}`;\n    } while (usedNames.has(locName));\n    usedNames.add(locName);\n    locations.push({\n      name: locName,\n      pallets: getRandomNumber(1, 10)\n    });\n  }\n  if (locations.length === 0) return [{ name: 'Pending Assignment' }]; // Ensure at least one location\n  return locations;\n};\n\nconst newInitialTrailers: Trailer[] = [];\nconst newInitialShipments: Shipment[] = [];\nconst baseTrailerIds = [\"STS2990\", \"STS2991\", \"STS2992\", \"STS2993\", \"STS2994\", \"STS2995\", \"STS2996\", \"STS2997\", \"STS2998\", \"STS2999\"];\nlet stsJobCounter = 10001;","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":56,"to":78}}}}],["493",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nbaseTrailerIds.forEach((trailerId, index) => {\n  const arrivalDate = getRandomDate(-10, 10);\n  const newTrailer: Trailer = {\n    id: trailerId,\n    name: `${getRandomElement(TRAILER_NAMES_PREFIX)} Hauler ${index + 1}`,\n    status: getRandomElement(TRAILER_STATUSES),\n    company: getRandomElement(COMPANIES),\n    arrivalDate: arrivalDate,\n    storageExpiryDate: getRandomBoolean() ? getRandomDate(15, 45) : undefined,\n    weight: getRandomNumber(2500, 5500, false),\n    customField1: getRandomBoolean() ? `T1A-${getRandomNumber(100, 999)}` : undefined,\n    customField2: getRandomBoolean() ? `T1B-${getRandomNumber(100, 999)}` : undefined,\n    outturnReportDocumentName: getRandomBoolean() ? `${trailerId}_outturn_${uuidv4().substring(0,4)}.pdf` : null,\n    t1SummaryDocumentName: getRandomBoolean() ? `${trailerId}_t1_${uuidv4().substring(0,4)}.pdf` : null,\n    manifestDocumentName: getRandomBoolean() ? `${trailerId}_manifest_${uuidv4().substring(0,4)}.pdf` : null,","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":80,"to":94}}}}],["494",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nacpDocumentName: getRandomBoolean() ? `ACP_${trailerId}_${new Date().getTime().toString().slice(-5)}.pdf` : null,\n  };\n  newInitialTrailers.push(newTrailer);","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":95,"to":97}}}}],["495",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nfor (let j = 0; j < 5; j++) {\n    const isReleased = getRandomBoolean();\n    const isCleared = getRandomBoolean();\n    const clearanceDate = isCleared ? getRandomDate(-2, 0) : null;","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":99,"to":102}}}}],["496",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst newShipment: Shipment = {\n      id: uuidv4(),\n      trailerId: newTrailer.id,\n      stsJob: stsJobCounter++,\n      customerJobNumber: getRandomBoolean() ? `CUST-${getRandomNumber(1000, 9999)}` : undefined,\n      quantity: getRandomNumber(10, 300),\n      importer: getRandomElement(IMPORTERS),\n      exporter: getRandomElement(EXPORTERS),\n      locations: generateRandomLocations(),\n      releaseDocumentName: isReleased ? `release_doc_${stsJobCounter}_${uuidv4().substring(0,4)}.pdf` : undefined,\n      clearanceDocumentName: isCleared ? `clearance_doc_${stsJobCounter}_${uuidv4().substring(0,4)}.pdf` : undefined,\n      released: isReleased,\n      cleared: isCleared,\n      weight: getRandomNumber(100, 2000, false),\n      palletSpace: getRandomNumber(1, 20),\n      releasedAt: isReleased ? getRandomDate(-1, 0) : undefined,\n      emptyPalletRequired: getRandomNumber(0, 5),\n      mrn: isCleared ? `MRN${getRandomNumber(100000, 999999)}` : undefined,\n      clearanceDate: clearanceDate,","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":104,"to":122}}}}],["497",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nclearanceDate: clearanceDate,\n      comments: getRandomBoolean() ? getRandomElement(COMMENTS_POOL) : undefined,\n    };\n    newInitialShipments.push(newShipment);\n  }\n});","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":122,"to":127}}}}],["498",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst initialQuizReports: QuizReport[] = [];\n\n\nexport const WarehouseProvider = ({ children }: { children: ReactNode }) => {\n  const [trailers, setTrailers] = useLocalStorageState<Trailer[]>('trailers', newInitialTrailers);\n  const [shipments, setShipments] = useLocalStorageState<Shipment[]>('shipments', newInitialShipments);\n  const [quizReports, setQuizReports] = useLocalStorageState<QuizReport[]>('quizReports', initialQuizReports);","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":130,"to":136}}}}],["499",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst addTrailer = useCallback((trailerData: Omit<Trailer, 'status' | 'arrivalDate' | 'storageExpiryDate' | 'weight' | 'company' | 'customField1' | 'customField2' | 'outturnReportDocumentName' | 't1SummaryDocumentName' | 'manifestDocumentName' | 'acpDocumentName'> & { status?: TrailerStatus; company?: string; arrivalDate?: string; storageExpiryDate?: string; weight?: number; customField1?: string; customField2?: string; }) => {\n    const newTrailer: Trailer = {\n      id: trailerData.id,\n      name: trailerData.name,\n      status: trailerData.status || 'Scheduled',\n      company: trailerData.company || undefined,\n      arrivalDate: trailerData.arrivalDate || undefined,\n      storageExpiryDate: trailerData.storageExpiryDate || undefined,\n      weight: trailerData.weight || undefined,\n      customField1: trailerData.customField1 || undefined,\n      customField2: trailerData.customField2 || undefined,\n      outturnReportDocumentName: undefined,\n      t1SummaryDocumentName: undefined,","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":138,"to":150}}}}],["500",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nt1SummaryDocumentName: undefined,\n      manifestDocumentName: undefined,\n      acpDocumentName: undefined,\n    };\n    setTrailers((prev) => [...prev, newTrailer]);\n  }, [setTrailers]);","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":150,"to":155}}}}],["501",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst updateTrailerStatus = useCallback((trailerId: string, status: TrailerStatus) => {\n    setTrailers((prev) =>\n      prev.map((t) => (t.id === trailerId ? { ...t, status } : t))\n    );\n  }, [setTrailers]);\n\n  const updateTrailer = useCallback((trailerId: string, data: TrailerUpdateData) => {\n    setTrailers(prev =>\n      prev.map(t =>\n        t.id === trailerId ? { ...t, ...data } : t\n      )\n    );\n  }, [setTrailers]);\n\n  const deleteTrailer = useCallback((trailerId: string) => {\n    setTrailers(prev => prev.filter(t => t.id !== trailerId));\n    setShipments(prev => prev.filter(s => s.trailerId !== trailerId));\n  }, [setTrailers, setShipments]);\n\n  const getShipmentsByTrailerId = useCallback((trailerId: string) => {\n    return shipments.filter((s) => s.trailerId === trailerId);\n  }, [shipments]);","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":157,"to":178}}}}],["502",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst addShipment = useCallback((shipmentData: Omit<Shipment, 'id' | 'locations' | 'released' | 'cleared' | 'importer' | 'exporter' | 'stsJob' | 'customerJobNumber' | 'releasedAt' | 'emptyPalletRequired' | 'mrn' | 'clearanceDate' | 'comments'> & { stsJob: number; customerJobNumber?: string; importer: string; exporter: string; initialLocationName?: string, initialLocationPallets?: number, releaseDocumentName?: string, clearanceDocumentName?: string, released?:boolean, cleared?: boolean, weight?: number, palletSpace?: number, emptyPalletRequired?: number, mrn?: string, comments?: string }) => {\n\n    let initialLocations: LocationInfo[];\n    if (shipmentData.initialLocationName) {\n      initialLocations = [{ name: shipmentData.initialLocationName, pallets: shipmentData.initialLocationPallets }];\n    } else {\n      initialLocations = [{ name: 'Pending Assignment' }];\n    }","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":180,"to":187}}}}],["503",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst newShipment: Shipment = {\n      ...shipmentData,\n      id: uuidv4(),\n      stsJob: shipmentData.stsJob,\n      customerJobNumber: shipmentData.customerJobNumber || undefined,\n      importer: shipmentData.importer,\n      exporter: shipmentData.exporter,\n      locations: initialLocations,\n      releaseDocumentName: shipmentData.releaseDocumentName,\n      clearanceDocumentName: shipmentData.clearanceDocumentName,\n      released: shipmentData.released ?? false,\n      cleared: shipmentData.cleared ?? false,\n      weight: shipmentData.weight,\n      palletSpace: shipmentData.palletSpace,\n      releasedAt: undefined,\n      emptyPalletRequired: shipmentData.emptyPalletRequired ?? 0,\n      mrn: shipmentData.mrn || undefined,\n      clearanceDate: (shipmentData.cleared || shipmentData.clearanceDocumentName) ? new Date().toISOString() : null,\n      comments: shipmentData.comments || undefined,\n    };\n    setShipments((prev) => [...prev, newShipment]);\n  }, [setShipments]);","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":189,"to":210}}}}],["504",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst updateShipmentReleasedStatus = useCallback((shipmentId: string, released: boolean) => {\n    setShipments((prev) =>\n      prev.map((s) => (s.id === shipmentId ? { ...s, released } : s))\n    );\n  }, [setShipments]);\n\n  const updateShipmentClearedStatus = useCallback((shipmentId: string, cleared: boolean) => {\n     setShipments((prev) =>\n      prev.map((s) => {\n        if (s.id === shipmentId) {\n          return {\n            ...s,\n            cleared,\n            clearanceDate: cleared ? (s.clearanceDate || new Date().toISOString()) : null,\n          };\n        }\n        return s;\n      })\n    );\n  }, [setShipments]);\n\n  const updateShipment = useCallback((shipmentId: string, data: ShipmentUpdateData) => {\n    setShipments(prev =>\n      prev.map(s => {\n        if (s.id === shipmentId) {\n          const updatedShipment = { ...s, ...data };","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":212,"to":237}}}}],["505",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nupdatedShipment.customerJobNumber = data.customerJobNumber !== undefined ? data.customerJobNumber : s.customerJobNumber;\n          updatedShipment.mrn = data.mrn !== undefined ? data.mrn : s.mrn;\n          updatedShipment.comments = data.comments !== undefined ? data.comments : s.comments;","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":239,"to":241}}}}],["506",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nif (data.locations && data.locations.length > 0 && !(data.locations.length === 1 && data.locations[0].name === 'Pending Assignment')) {\n            updatedShipment.locations = data.locations;\n          } else if (!data.locations) { // If data.locations is undefined (not explicitly passed), keep existing\n             updatedShipment.locations = s.locations && s.locations.length > 0 && !(s.locations.length ===1 && s.locations[0].name === 'Pending Assignment')\n                                      ? s.locations\n                                      : [{name: 'Pending Assignment'}];\n          } else { // data.locations is an empty array or [{name: 'Pending Assignment'}]\n            updatedShipment.locations = [{name: 'Pending Assignment'}];\n          }\n\n          if (data.releasedAt !== undefined) {\n            updatedShipment.releasedAt = data.releasedAt;\n          }\n\n          updatedShipment.emptyPalletRequired = data.emptyPalletRequired ?? s.emptyPalletRequired ?? 0;","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":244,"to":258}}}}],["507",{"pageContent":"File: src/contexts/WarehouseContext.tsx\n// Handle clearanceDate\n          let newClearanceDate = s.clearanceDate;","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":260,"to":261}}}}],["508",{"pageContent":"File: src/contexts/WarehouseContext.tsx\n// If clearanceDate is explicitly passed in data, use that value.\n          // This allows manual setting or clearing of the date from the edit dialog.\n          if (Object.prototype.hasOwnProperty.call(data, 'clearanceDate')) {\n            newClearanceDate = data.clearanceDate;\n          } else {\n            // If clearanceDate is not in data, then derive it based on 'cleared' status.\n            if (data.cleared === true) {\n              if (!s.clearanceDate) { // Only set a new date if one wasn't already there\n                newClearanceDate = new Date().toISOString();\n              }\n            } else if (data.cleared === false) {\n              newClearanceDate = null; // Clearing the 'cleared' status also clears the date\n            }\n          }\n          \n          // If it becomes cleared via a document upload AND no date is set or passed, set one.\n          if ((data.cleared === true || (data.cleared === undefined && updatedShipment.cleared)) &&","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":263,"to":279}}}}],["509",{"pageContent":"File: src/contexts/WarehouseContext.tsx\ndata.clearanceDocumentName && !s.clearanceDocumentName && newClearanceDate === null) {\n            newClearanceDate = new Date().toISOString();\n          }","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":280,"to":282}}}}],["510",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nupdatedShipment.clearanceDate = newClearanceDate;\n\n          return updatedShipment;\n        }\n        return s;\n      })\n    );\n  }, [setShipments]);\n\n  const markShipmentAsPrinted = useCallback((shipmentId: string) => {\n    const nowISO = new Date().toISOString();\n    setShipments((prev) =>\n      prev.map((s) =>\n        s.id === shipmentId ? { ...s, releasedAt: nowISO } : s\n      )\n    );\n  }, [setShipments]);\n\n  const deleteShipment = useCallback((shipmentId: string) => {\n    setShipments(prev => prev.filter(s => s.id !== shipmentId));\n  }, [setShipments]);\n\n  const getTrailerById = useCallback((trailerId: string) => {\n    return trailers.find(t => t.id === trailerId);\n  }, [trailers]);\n\n  const getShipmentById = useCallback((shipmentId: string) => {\n    return shipments.find(s => s.id === shipmentId);\n  }, [shipments]);","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":285,"to":313}}}}],["511",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nconst addQuizReport = useCallback((reportData: Omit<QuizReport, 'id'>) => {\n    const newReport: QuizReport = {\n      ...reportData,\n      id: uuidv4(),\n    };\n    setQuizReports(prev => [newReport, ...prev]); // Add to the beginning for recency\n  }, [setQuizReports]);\n\n  return (\n    <WarehouseContext.Provider\n      value={{\n        trailers,\n        addTrailer,\n        updateTrailerStatus,\n        updateTrailer,\n        deleteTrailer,\n        shipments,\n        getShipmentsByTrailerId,\n        addShipment,\n        updateShipment,\n        deleteShipment,\n        getTrailerById,\n        getShipmentById,\n        updateShipmentReleasedStatus,\n        updateShipmentClearedStatus,\n        markShipmentAsPrinted,\n        quizReports,\n        addQuizReport,\n      }}\n    >\n      {children}\n    </WarehouseContext.Provider>\n  );\n};","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":315,"to":348}}}}],["512",{"pageContent":"File: src/contexts/WarehouseContext.tsx\nexport const useWarehouse = (): WarehouseContextType => {\n  const context = useContext(WarehouseContext);\n  if (context === undefined) {\n    throw new Error('useWarehouse must be used within a WarehouseProvider');\n  }\n  return context;\n};","metadata":{"source":"src/contexts/WarehouseContext.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":350,"to":356}}}}],["513",{"pageContent":"File: src/types/index.ts\nexport type TrailerStatus = 'Scheduled' | 'Arrived' | 'Loading' | 'Offloading' | 'Devanned';\n\nexport interface LocationInfo {\n  name: string;\n  pallets?: number;\n}\n\nexport interface Trailer {\n  id: string; // User-defined unique ID\n  name: string; // Optional descriptive name\n  status: TrailerStatus;\n  company?: string; // Optional: Company associated with the trailer\n  arrivalDate?: string; // Optional: Date of arrival, ISO string format\n  storageExpiryDate?: string; // Optional: Date when storage expires, ISO string format\n  weight?: number; // Optional: Weight of the trailer in kg\n  customField1?: string; // Represents T1.1\n  customField2?: string; // Represents T1.2\n  outturnReportDocumentName?: string | null;\n  t1SummaryDocumentName?: string | null;\n  manifestDocumentName?: string | null;\n  acpDocumentName?: string | null;\n}","metadata":{"source":"src/types/index.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":23}}}}],["514",{"pageContent":"File: src/types/index.ts\nexport interface Shipment {\n  id: string; // Auto-generated unique ID\n  trailerId: string;\n  stsJob: number; // STS job number\n  customerJobNumber?: string; // Optional: Customer's job number\n  quantity: number;\n  importer: string; // Consignee\n  exporter: string; // Consignor\n  locations: LocationInfo[];\n  releaseDocumentName?: string; // Optional: Name of the release document\n  clearanceDocumentName?: string; // Optional: Name of the clearance document\n  released: boolean; // Indicates if the shipment has permission to be released\n  cleared: boolean; // Indicates if the shipment is cleared\n  weight?: number; // Optional: Weight of the shipment in kg\n  palletSpace?: number; // Optional: Pallet spaces occupied by the shipment (overall for shipment)\n  releasedAt?: string; // Optional: Timestamp for when the shipment was printed/officially released\n  emptyPalletRequired?: number;\n  mrn?: string; // Movement Reference Number","metadata":{"source":"src/types/index.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":25,"to":42}}}}],["515",{"pageContent":"File: src/types/index.ts\nclearanceDate?: string | null; // Date when clearance document was uploaded/status set\n  comments?: string;\n}","metadata":{"source":"src/types/index.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":43,"to":45}}}}],["516",{"pageContent":"File: src/types/index.ts\n// Used for the form data when creating or updating a shipment\nexport interface ShipmentFormData {\n  stsJob: number;\n  customerJobNumber?: string;\n  quantity: number;\n  importer: string; // Consignee\n  exporter: string; // Consignor\n  initialLocationName?: string;\n  initialLocationPallets?: number;\n  releaseDocument?: FileList | File | null;\n  clearanceDocument?: FileList | File | null;\n  released?: boolean;\n  cleared?: boolean;\n  weight?: number | null;\n  palletSpace?: number | null;\n  emptyPalletRequired?: number | null;\n  mrn?: string;\n  clearanceDate?: Date | null; // Form handles Date object or null\n  comments?: string;\n}","metadata":{"source":"src/types/index.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":47,"to":66}}}}],["517",{"pageContent":"File: src/types/index.ts\n// Specifically for updating an existing shipment via context\nexport interface ShipmentUpdateData {\n  stsJob?: number;\n  customerJobNumber?: string;\n  quantity?: number;\n  importer?: string; // Consignee\n  exporter?: string; // Consignor\n  locations?: LocationInfo[];\n  releaseDocumentName?: string;\n  clearanceDocumentName?: string;\n  released?: boolean;\n  cleared?: boolean;\n  weight?: number;\n  palletSpace?: number;\n  releasedAt?: string;\n  emptyPalletRequired?: number;\n  mrn?: string;\n  clearanceDate?: string | null; // Context handles ISO string or null\n  comments?: string;\n}","metadata":{"source":"src/types/index.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":68,"to":87}}}}],["518",{"pageContent":"File: src/types/index.ts\n// Specifically for updating an existing trailer via context\nexport interface TrailerUpdateData {\n  name?: string;\n  company?: string;\n  status?: TrailerStatus;\n  arrivalDate?: string | null;\n  storageExpiryDate?: string | null;\n  weight?: number;\n  customField1?: string;\n  customField2?: string;\n  outturnReportDocumentName?: string | null; // Allow setting to null to clear\n  t1SummaryDocumentName?: string | null;\n  manifestDocumentName?: string | null;\n  acpDocumentName?: string | null; // Allow setting to null to clear\n}\n\n// For AddTrailerDialog form\nexport interface TrailerFormData {\n  id: string;\n  name: string;\n  company?: string;\n  status: TrailerStatus;\n  arrivalDate?: Date | null;\n  storageExpiryDate?: Date | null;\n  weight?: number | null;\n  customField1?: string;\n  customField2?: string;\n  // Document fields are typically handled in Edit Dialog for simplicity of add flow\n}","metadata":{"source":"src/types/index.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":89,"to":117}}}}],["519",{"pageContent":"File: src/types/index.ts\n// For Stock Check Quiz\nexport interface QuizItem {\n  id: string; // Combination of shipmentId and locationName for uniqueness\n  shipmentId: string;\n  stsJob: number;\n  trailerId: string;\n  trailerCompany?: string;\n  trailerArrivalDateFormatted: string;\n  shipmentQuantity: number;\n  locationName: string;\n  locationPallets?: number;\n}\n\nexport interface AnsweredQuizItem extends QuizItem {\n  userAnswer: 'yes' | 'no';\n}\n\nexport interface QuizReport {\n  id: string;\n  completedAt: string; // ISO string\n  completedBy: string;\n  items: AnsweredQuizItem[];\n}","metadata":{"source":"src/types/index.ts","contentRoot":"/home/user/studio","loc":{"lines":{"from":119,"to":141}}}}],["520",{"pageContent":"File: src/app/calendar/page.tsx\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Trailer } from '@/types';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ArrowLeft, ArrowRight, CalendarDays, Package, Calendar as CalendarIconLucide, Eye } from 'lucide-react'; // Added CalendarIconLucide, Eye\nimport Link from 'next/link';\nimport {\n  addWeeks,\n  subWeeks,\n  addMonths,\n  subMonths,\n  startOfWeek,\n  endOfWeek,\n  startOfMonth,\n  endOfMonth,\n  eachDayOfInterval,\n  format,\n  isToday,\n  parseISO,\n  isSameMonth,\n} from 'date-fns';\nimport { Skeleton } from '@/components/ui/skeleton';\n\n// Helper function to generate a unique key for a date (YYYY-MM-DD)\nconst getDateKey = (date: Date): string => format(date, 'yyyy-MM-dd');","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":29}}}}],["521",{"pageContent":"File: src/app/calendar/page.tsx\n// Define an interface for the enriched trailer data including total pieces\ninterface EnrichedTrailer extends Trailer {\n  totalPieces: number;\n}\n\nexport default function CalendarPage() {\n  const { trailers, getShipmentsByTrailerId } = useWarehouse();\n  const [isClient, setIsClient] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [viewMode, setViewMode] = useState<'week' | 'month'>('week'); // 'week' or 'month'\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  const weekStartsOn: 0 | 1 | 2 | 3 | 4 | 5 | 6 = 1; // Monday","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":31,"to":46}}}}],["522",{"pageContent":"File: src/app/calendar/page.tsx\n// Logic for current display period based on viewMode\n  const currentDisplayInfo = useMemo(() => {\n    if (viewMode === 'week') {\n      const start = startOfWeek(currentDate, { weekStartsOn });\n      const end = endOfWeek(currentDate, { weekStartsOn });\n      return {\n        start,\n        end,\n        daysToDisplay: eachDayOfInterval({ start, end }),\n        title: `${format(start, 'MMM d')} - ${format(end, 'MMM d, yyyy')}`,\n      };\n    } else { // month view\n      const monthStart = startOfMonth(currentDate);\n      const monthEnd = endOfMonth(currentDate);\n      const displayGridStart = startOfWeek(monthStart, { weekStartsOn });\n      const displayGridEnd = endOfWeek(monthEnd, { weekStartsOn });\n      return {\n        start: monthStart, // for checking isSameMonth\n        end: monthEnd, // for checking isSameMonth\n        daysToDisplay: eachDayOfInterval({ start: displayGridStart, end: displayGridEnd }),\n        title: format(currentDate, 'MMMM yyyy'),\n      };\n    }","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":48,"to":70}}}}],["523",{"pageContent":"File: src/app/calendar/page.tsx\n};\n    }\n  }, [currentDate, viewMode, weekStartsOn]);","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":69,"to":71}}}}],["524",{"pageContent":"File: src/app/calendar/page.tsx\nconst trailersByArrivalDate = useMemo(() => {\n    const byDay: { [dateKey: string]: EnrichedTrailer[] } = {};\n    if (!isClient || !getShipmentsByTrailerId) return byDay;\n\n    trailers.forEach(trailer => {\n      if (trailer.arrivalDate) {\n        try {\n          const arrival = parseISO(trailer.arrivalDate);\n          const key = getDateKey(arrival);\n          if (!byDay[key]) {\n            byDay[key] = [];\n          }\n          const shipmentsForTrailer = getShipmentsByTrailerId(trailer.id);\n          const totalPieces = shipmentsForTrailer.reduce((acc, shipment) => acc + shipment.quantity, 0);\n          byDay[key].push({ ...trailer, totalPieces });\n        } catch (error) {\n          console.error(\"Error processing trailer for calendar:\", trailer.id, trailer.arrivalDate, error);\n        }\n      }\n    });\n    return byDay;\n  }, [trailers, isClient, getShipmentsByTrailerId]);","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":73,"to":94}}}}],["525",{"pageContent":"File: src/app/calendar/page.tsx\nconst handlePrevious = () => {\n    setCurrentDate(prev => viewMode === 'week' ? subWeeks(prev, 1) : subMonths(prev, 1));\n  };\n\n  const handleNext = () => {\n    setCurrentDate(prev => viewMode === 'week' ? addWeeks(prev, 1) : addMonths(prev, 1));\n  };\n\n  const handleToday = () => {\n    setCurrentDate(new Date());\n  };\n\n  const toggleViewMode = () => {\n    setViewMode(prevMode => prevMode === 'week' ? 'month' : 'week');\n  }\n\n  const pageTitle = viewMode === 'week' ? 'Weekly Arrival Calendar' : 'Monthly Arrival Calendar';","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":96,"to":112}}}}],["526",{"pageContent":"File: src/app/calendar/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow\">\n        <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n          {viewMode === 'week' ? <CalendarDays className=\"mr-3 h-8 w-8 text-primary\" /> : <CalendarIconLucide className=\"mr-3 h-8 w-8 text-primary\" />}\n          {pageTitle}\n        </h1>\n        <div className=\"flex items-center gap-1 sm:gap-2 flex-wrap justify-center\">\n          <Button variant=\"outline\" onClick={handlePrevious} aria-label={viewMode === 'week' ? 'Previous week' : 'Previous month'}>\n            <ArrowLeft className=\"h-4 w-4 mr-0 sm:mr-2\" /> <span className=\"hidden sm:inline\">{viewMode === 'week' ? 'Prev Week' : 'Prev Month'}</span>\n          </Button>\n          <Button variant=\"outline\" onClick={handleToday}>\n            Today\n          </Button>","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":114,"to":127}}}}],["527",{"pageContent":"File: src/app/calendar/page.tsx\nToday\n          </Button>\n          <Button variant=\"outline\" onClick={handleNext} aria-label={viewMode === 'week' ? 'Next week' : 'Next month'}>\n             <span className=\"hidden sm:inline\">{viewMode === 'week' ? 'Next Week' : 'Next Month'}</span><ArrowRight className=\"h-4 w-4 ml-0 sm:ml-2\" />\n          </Button>\n          <Button variant=\"outline\" onClick={toggleViewMode} className=\"w-full sm:w-auto\">\n            <Eye className=\"mr-0 sm:mr-2 h-4 w-4\" />\n            <span className=\"hidden sm:inline\">View {viewMode === 'week' ? 'Month' : 'Week'}</span>\n            <span className=\"sm:hidden\">{viewMode === 'week' ? 'Month View' : 'Week View'}</span>\n          </Button>\n        </div>\n      </div>","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":126,"to":137}}}}],["528",{"pageContent":"File: src/app/calendar/page.tsx\n<Card className=\"shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-center text-xl sm:text-2xl text-primary\">{currentDisplayInfo.title}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-7 border-t border-l border-border\">\n            {/* Day headers for week view */}\n            {viewMode === 'week' && currentDisplayInfo.daysToDisplay.map(day => (\n              <div key={`header-${getDateKey(day)}`} className={`p-2 text-center font-medium text-sm sm:text-base border-b border-r border-border ${isToday(day) ? 'bg-primary/10 text-primary font-bold' : 'bg-card'}`}>\n                <div>{format(day, 'EEE')}</div>\n                <div className={`text-lg sm:text-xl ${isToday(day) ? 'text-primary' : ''}`}>{format(day, 'd')}</div>\n              </div>\n            ))}\n             {/* Day headers for month view (only EEE) */}\n            {viewMode === 'month' && currentDisplayInfo.daysToDisplay.slice(0, 7).map(day => (","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":139,"to":153}}}}],["529",{"pageContent":"File: src/app/calendar/page.tsx\n<div key={`header-month-${getDateKey(day)}`} className=\"p-2 text-center font-semibold text-sm sm:text-base border-b border-r border-border bg-card\">\n                {format(day, 'EEE')}\n              </div>\n            ))}\n          </div>\n          <div className=\"grid grid-cols-7 border-l border-border\">\n            {currentDisplayInfo.daysToDisplay.map(day => {\n              const dayKey = getDateKey(day);\n              const isCurrentMonthDay = viewMode === 'month' ? isSameMonth(day, currentDisplayInfo.start) : true;\n              return (\n                <div \n                  key={dayKey} \n                  className={`border-b border-r border-border min-h-[100px] sm:min-h-[150px] flex flex-col \n                             ${isToday(day) ? 'bg-primary/5' : ''} \n                             ${!isCurrentMonthDay ? 'bg-muted/30' : ''}`}\n                >\n                  {/* Header for month cells, week view header is separate above */}","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":154,"to":170}}}}],["530",{"pageContent":"File: src/app/calendar/page.tsx\n{viewMode === 'month' && (\n                     <div className={`p-1.5 text-right font-medium text-xs sm:text-sm \n                                    ${isToday(day) ? 'text-primary font-bold' : isCurrentMonthDay ? 'text-foreground' : 'text-muted-foreground/70'}`}>\n                       {format(day, 'd')}\n                     </div>\n                  )}\n                  <div className={`p-1 sm:p-1.5 flex-grow space-y-1 overflow-y-auto max-h-[150px] sm:max-h-[200px] \n                                 ${viewMode === 'month' && !isCurrentMonthDay ? 'opacity-60' : ''}`}>\n                    {isClient && trailersByArrivalDate[dayKey]?.map(trailer => (\n                      <Link href={`/trailers/${trailer.id}`} key={trailer.id} className=\"block p-1 sm:p-1.5 bg-background hover:bg-secondary rounded-md text-xs sm:text-sm shadow-sm transition-all border border-border hover:border-primary/50\">","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":171,"to":180}}}}],["531",{"pageContent":"File: src/app/calendar/page.tsx\n<p className=\"font-semibold text-primary truncate\" title={`ID: ${trailer.id}`}>ID: {trailer.id}</p>\n                          {trailer.name && <p className=\"text-muted-foreground truncate text-[0.65rem] sm:text-xs\" title={`Name: ${trailer.name}`}>{trailer.name}</p>}\n                          <div className=\"flex items-center text-muted-foreground mt-0.5 text-[0.65rem] sm:text-xs\">\n                             <Package className=\"h-3 w-3 sm:h-3.5 sm:w-3.5 mr-1 flex-shrink-0\" /> \n                             <span>Pieces: {trailer.totalPieces}</span>\n                          </div>\n                      </Link>\n                    ))}\n                    {isClient && (!trailersByArrivalDate[dayKey] || trailersByArrivalDate[dayKey]?.length === 0) && isCurrentMonthDay && (\n                      <div className=\"text-xs text-muted-foreground text-center pt-2 sm:pt-4 italic\">","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":181,"to":190}}}}],["532",{"pageContent":"File: src/app/calendar/page.tsx\n{viewMode === 'week' ? 'No arrivals' : ''} {/* Less verbose for month view empty days */}\n                      </div>\n                    )}\n                    {!isClient && (\n                       <div className=\"space-y-1 p-1 sm:p-1.5\">\n                         <Skeleton className=\"h-10 sm:h-12 w-full\" />\n                         <Skeleton className=\"h-10 sm:h-12 w-full\" />\n                       </div>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","metadata":{"source":"src/app/calendar/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":191,"to":209}}}}],["533",{"pageContent":"File: src/app/reports/page.tsx\n'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Shipment, Trailer } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter, CardDescription } from '@/components/ui/card';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { ClipboardList, PackageSearch, Info, Briefcase, CalendarDays, Printer, ArrowRightCircle, Clock, AlertOctagon, BarChart3, Hash, Warehouse } from 'lucide-react';\nimport Link from 'next/link';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Button } from '@/components/ui/button';\nimport { format, parseISO } from 'date-fns';","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":14}}}}],["534",{"pageContent":"File: src/app/reports/page.tsx\ninterface BondCheckReportItem {\n  trailerId: string;\n  trailerName?: string;\n  company?: string;\n  arrivalDate?: string;\n  stsJob: number;\n  shipmentId: string;\n  customerJobNumber?: string;\n  locationsDisplay: string;\n}\n\nexport default function ReportsPage() {\n  const { shipments, getTrailerById } = useWarehouse();\n  const [isClient, setIsClient] = useState(false);\n  const [companyFilter, setCompanyFilter] = useState<string>('all');\n  const [clientGeneratedDate, setClientGeneratedDate] = useState<string | null>(null);\n\n\n  useEffect(() => {\n    setIsClient(true);\n    setClientGeneratedDate(new Date().toLocaleDateString());\n  }, []);\n\n  const formatDateSafe = (dateString?: string) => {\n    if (!dateString) return 'N/A';\n    try {\n      return format(parseISO(dateString), 'PP'); // e.g., Jul 20, 2024\n    } catch (error) {\n      return \"Invalid Date\";\n    }\n  };\n\n  const rawBondCheckReportData = useMemo((): BondCheckReportItem[] => {\n    if (!isClient) return [];","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":16,"to":49}}}}],["535",{"pageContent":"File: src/app/reports/page.tsx\nreturn shipments\n      .filter(shipment => !shipment.releasedAt)\n      .map(shipment => {\n        const trailer = getTrailerById(shipment.trailerId);\n        const locations = shipment.locations || [{ name: 'Pending Assignment' }];\n        const isPendingAssignment = locations.length === 1 && locations[0].name === 'Pending Assignment';\n\n        let locationsDisplay = 'Pending Assignment';\n        if (!isPendingAssignment) {\n            locationsDisplay = locations.map(loc =>\n                `${loc.name}${loc.pallets !== undefined ? ` (${loc.pallets} plts)` : ''}`\n            ).join(', ');\n        }","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":51,"to":63}}}}],["536",{"pageContent":"File: src/app/reports/page.tsx\nreturn {\n          trailerId: shipment.trailerId,\n          trailerName: trailer?.name,\n          company: trailer?.company,\n          arrivalDate: trailer?.arrivalDate,\n          stsJob: shipment.stsJob,\n          shipmentId: shipment.id,\n          customerJobNumber: shipment.customerJobNumber,\n          locationsDisplay: locationsDisplay,\n        };\n      })\n      .sort((a, b) => {\n        // Primary sort by company, then trailerId, then stsJob\n        if (a.company && b.company) {\n          if (a.company.toLowerCase() < b.company.toLowerCase()) return -1;\n          if (a.company.toLowerCase() > b.company.toLowerCase()) return 1;\n        } else if (a.company) {\n          return -1; // a has company, b doesn't\n        } else if (b.company) {\n          return 1; // b has company, a doesn't\n        }","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":65,"to":85}}}}],["537",{"pageContent":"File: src/app/reports/page.tsx\nif (a.trailerId < b.trailerId) return -1;\n        if (a.trailerId > b.trailerId) return 1;\n        if (a.stsJob < b.stsJob) return -1;\n        if (a.stsJob > b.stsJob) return 1;\n        return 0;\n      });\n  }, [shipments, getTrailerById, isClient]);\n\n  const uniqueCompanies = useMemo(() => {\n    if (!isClient) return [];\n    const companies = new Set<string>();\n    rawBondCheckReportData.forEach(item => {\n      if (item.company) {\n        companies.add(item.company);\n      }\n    });\n    return Array.from(companies).sort();\n  }, [rawBondCheckReportData, isClient]);\n\n  const filteredBondCheckReportData = useMemo(() => {\n    if (companyFilter === 'all') {\n      return rawBondCheckReportData;\n    }\n    return rawBondCheckReportData.filter(item =>\n      item.company?.toLowerCase() === companyFilter.toLowerCase()\n    );\n  }, [rawBondCheckReportData, companyFilter]);\n\n  const handlePrintReport = () => {\n    window.print();\n  };","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":87,"to":117}}}}],["538",{"pageContent":"File: src/app/reports/page.tsx\nconst ReportSkeleton = () => (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          <TableHead>Company</TableHead>\n          <TableHead>Trailer ID</TableHead>\n          <TableHead>STS Job</TableHead>\n          <TableHead>Trailer Name</TableHead>\n          <TableHead>Customer Job No.</TableHead>\n          <TableHead>\n            <div className=\"flex items-center\">\n              <CalendarDays className=\"mr-1.5 h-4 w-4 print:hidden\" />\n              Arrival Date\n            </div>\n          </TableHead>\n          <TableHead>Locations</TableHead>\n          <TableHead className=\"text-right\">Shipment ID</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {[...Array(5)].map((_, i) => (\n          <TableRow key={i}>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[80px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[60px]\" /></TableCell>","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":119,"to":143}}}}],["539",{"pageContent":"File: src/app/reports/page.tsx\n<TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[100px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[90px]\" /></TableCell>\n            <TableCell><Skeleton className=\"h-4 w-[150px]\" /></TableCell>\n            <TableCell className=\"text-right\"><Skeleton className=\"h-4 w-[70px] ml-auto\" /></TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":144,"to":153}}}}],["540",{"pageContent":"File: src/app/reports/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 p-4 bg-card rounded-lg shadow no-print\">\n        <h1 className=\"text-3xl font-bold text-foreground flex items-center\">\n          <ClipboardList className=\"mr-3 h-8 w-8 text-primary\" />\n          Reports Dashboard\n        </h1>\n      </div>","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":155,"to":162}}}}],["541",{"pageContent":"File: src/app/reports/page.tsx\n<div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 no-print\">\n        <Card className=\"shadow-lg hover:shadow-xl transition-shadow\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center text-xl text-primary\">\n              <PackageSearch className=\"mr-2 h-6 w-6\" />\n              Bond Check Report\n            </CardTitle>\n            <CardDescription>\n              View current unreleased stock in the warehouse. Detailed below.\n            </CardDescription>\n          </CardHeader>\n          <CardFooter>\n            <p className=\"text-sm text-muted-foreground\">\n              This report is detailed below on this page.\n            </p>\n          </CardFooter>\n        </Card>","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":164,"to":180}}}}],["542",{"pageContent":"File: src/app/reports/page.tsx\n<Link href=\"/reports/weekly-released\">\n          <Card className=\"shadow-lg hover:shadow-xl transition-shadow h-full flex flex-col justify-between cursor-pointer\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center text-xl text-primary\">\n                <Clock className=\"mr-2 h-6 w-6\" />\n                Monthly Released Shipments\n              </CardTitle>\n              <CardDescription>\n                View all shipments that were marked as released this month.\n              </CardDescription>\n            </CardHeader>\n            <CardFooter>\n                <Button variant=\"link\" className=\"p-0 h-auto text-primary\">\n                View Report <ArrowRightCircle className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </CardFooter>\n          </Card>\n        </Link>","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":182,"to":199}}}}],["543",{"pageContent":"File: src/app/reports/page.tsx\n<Link href=\"/reports/monthly-overdue-released\">\n          <Card className=\"shadow-lg hover:shadow-xl transition-shadow h-full flex flex-col justify-between cursor-pointer\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center text-xl text-primary\">\n                <AlertOctagon className=\"mr-2 h-6 w-6\" />\n                Monthly Overdue Released Shipments\n              </CardTitle>\n              <CardDescription>\n                Shipments released this month after their storage expiry date.\n              </CardDescription>\n            </CardHeader>\n            <CardFooter>\n              <Button variant=\"link\" className=\"p-0 h-auto text-primary\">\n                View Report <ArrowRightCircle className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </CardFooter>\n          </Card>\n        </Link>","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":201,"to":218}}}}],["544",{"pageContent":"File: src/app/reports/page.tsx\n<Link href=\"/reports/monthly-company-trailers\">\n          <Card className=\"shadow-lg hover:shadow-xl transition-shadow h-full flex flex-col justify-between cursor-pointer\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center text-xl text-primary\">\n                <BarChart3 className=\"mr-2 h-6 w-6\" />\n                Monthly Trailer Arrivals by Company\n              </CardTitle>\n              <CardDescription>\n                Summary of trailer arrivals per company for the current month.\n              </CardDescription>\n            </CardHeader>\n            <CardFooter>\n              <Button variant=\"link\" className=\"p-0 h-auto text-primary\">\n                View Report <ArrowRightCircle className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </CardFooter>\n          </Card>\n        </Link>","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":220,"to":237}}}}],["545",{"pageContent":"File: src/app/reports/page.tsx\n<Link href=\"/reports/unreleased-stock-locations\">\n          <Card className=\"shadow-lg hover:shadow-xl transition-shadow h-full flex flex-col justify-between cursor-pointer\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center text-xl text-primary\">\n                <Warehouse className=\"mr-2 h-6 w-6\" />\n                Unreleased Stock by Location\n              </CardTitle>\n              <CardDescription>\n                View unreleased stock, their locations, pieces, and arrival dates.\n              </CardDescription>\n            </CardHeader>\n            <CardFooter>\n              <Button variant=\"link\" className=\"p-0 h-auto text-primary\">\n                View Report <ArrowRightCircle className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </CardFooter>\n          </Card>\n        </Link>\n\n      </div>","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":239,"to":258}}}}],["546",{"pageContent":"File: src/app/reports/page.tsx\n{/* Bond Check Report (Existing Report) */}\n      <Card className=\"shadow-lg printable-area\">\n        <CardHeader className=\"no-print\">\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n            <div>\n                <CardTitle className=\"text-xl sm:text-2xl text-primary\">Current Warehouse Stock (Unreleased)</CardTitle>\n                <CardDescription>\n                This report lists all shipments currently in the warehouse that have not been marked as \"Released\".\n                </CardDescription>\n            </div>\n            <div className=\"flex flex-col sm:flex-row gap-2 items-start sm:items-center\">\n                <Select value={companyFilter} onValueChange={(value) => setCompanyFilter(value)}>\n                    <SelectTrigger className=\"w-full sm:w-[220px]\">\n                    <div className=\"flex items-center\">\n                        <Briefcase className=\"mr-2 h-4 w-4 text-muted-foreground\" />","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":260,"to":274}}}}],["547",{"pageContent":"File: src/app/reports/page.tsx\n<SelectValue placeholder=\"Filter by company\" />\n                    </div>\n                    </SelectTrigger>\n                    <SelectContent>\n                    <SelectItem value=\"all\">All Companies</SelectItem>\n                    {isClient && uniqueCompanies.map(company => (\n                        <SelectItem key={company} value={company.toLowerCase()}>{company}</SelectItem>\n                    ))}\n                    {!isClient && <Skeleton className=\"h-8 w-full my-1\" />}\n                    </SelectContent>\n                </Select>\n                 <Button onClick={handlePrintReport} variant=\"outline\" className=\"w-full sm:w-auto\">\n                    <Printer className=\"mr-2 h-4 w-4\" />\n                    Print This Report\n                </Button>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {/* Title and description for printed version */}\n          <div className=\"print-only-block mb-4\">","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":275,"to":295}}}}],["548",{"pageContent":"File: src/app/reports/page.tsx\n<h2 className=\"text-xl font-semibold text-foreground\">Bond Check Report - Current Warehouse Stock (Unreleased)</h2>\n            {companyFilter !== 'all' && <p className=\"text-sm text-muted-foreground\">Filtered by Company: {uniqueCompanies.find(c => c.toLowerCase() === companyFilter) || companyFilter}</p>}\n            {clientGeneratedDate && <p className=\"text-xs text-muted-foreground\">Date Generated: {clientGeneratedDate}</p>}\n          </div>","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":296,"to":299}}}}],["549",{"pageContent":"File: src/app/reports/page.tsx\n{!isClient ? (\n            <ReportSkeleton />\n          ) : filteredBondCheckReportData.length === 0 ? (\n            <div className=\"min-h-[200px] flex flex-col items-center justify-center text-center border-2 border-dashed border-border rounded-md p-8\">\n              <PackageSearch className=\"h-16 w-16 text-muted-foreground mb-4\" />\n              <p className=\"text-xl text-muted-foreground\">\n                No unreleased shipments found for the selected filter.\n              </p>\n              <p className=\"text-sm text-muted-foreground mt-2\">\n                All shipments have been released, or there are no shipments matching your criteria.\n              </p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead className=\"whitespace-nowrap\"><Briefcase className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>Company</TableHead>","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":301,"to":318}}}}],["550",{"pageContent":"File: src/app/reports/page.tsx\n<TableHead className=\"whitespace-nowrap\">Trailer ID</TableHead>\n                    <TableHead className=\"whitespace-nowrap\"><Hash className=\"inline-block mr-1 h-4 w-4 print:hidden\"/>STS Job</TableHead>\n                    <TableHead className=\"whitespace-nowrap\">Trailer Name</TableHead>\n                    <TableHead className=\"whitespace-nowrap\">Customer Job No.</TableHead>\n                    <TableHead className=\"whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <CalendarDays className=\"mr-1.5 h-4 w-4 print:hidden\" />\n                        Arrival Date\n                      </div>\n                    </TableHead>\n                    <TableHead>Locations</TableHead>\n                    <TableHead className=\"text-right whitespace-nowrap\">Shipment ID</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {filteredBondCheckReportData.map((item) => (","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":319,"to":334}}}}],["551",{"pageContent":"File: src/app/reports/page.tsx\n<TableRow key={item.shipmentId}>\n                      <TableCell>{item.company || 'N/A'}</TableCell>\n                      <TableCell className=\"font-medium\">\n                        <Link href={`/trailers/${item.trailerId}`} className=\"text-primary hover:underline print:text-foreground print:no-underline\">\n                          {item.trailerId}\n                        </Link>\n                      </TableCell>\n                      <TableCell>{item.stsJob}</TableCell>\n                      <TableCell>{item.trailerName || 'N/A'}</TableCell>\n                      <TableCell>{item.customerJobNumber || 'N/A'}</TableCell>\n                      <TableCell>{formatDateSafe(item.arrivalDate)}</TableCell>\n                      <TableCell>{item.locationsDisplay}</TableCell>\n                      <TableCell className=\"text-right\">","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":335,"to":347}}}}],["552",{"pageContent":"File: src/app/reports/page.tsx\n<Link href={`/shipments/${item.shipmentId}`} className=\"text-primary hover:underline print:text-foreground print:no-underline\">\n                           {item.shipmentId.substring(0, 8)}...\n                         </Link>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n         {isClient && filteredBondCheckReportData.length > 0 && (\n            <CardFooter className=\"text-sm text-muted-foreground border-t pt-4 no-print\">\n                <Info className=\"h-4 w-4 mr-2 text-primary\" />\n                Displaying {filteredBondCheckReportData.length} unreleased shipment(s) matching filter.\n            </CardFooter>\n        )}\n      </Card>\n    </div>\n  );\n}","metadata":{"source":"src/app/reports/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":348,"to":368}}}}],["553",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\n// Checkbox removed as emptyPalletRequired is now a number\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { FileText, Weight, Box, Users, MapPin, Send, Briefcase, Archive, Fingerprint, MessageSquare } from 'lucide-react';\nimport { Textarea } from '@/components/ui/textarea';","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":20}}}}],["554",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\nconst shipmentSchema = z.object({\n  stsJob: z.coerce.number().positive('STS Job must be a positive number'),\n  customerJobNumber: z.string().max(50, 'Customer job number too long').optional(),\n  quantity: z.coerce.number().min(1, 'Quantity must be at least 1'),\n  importer: z.string().min(1, 'Importer (Consignee) is required').max(50, 'Importer (Consignee) name too long'),\n  exporter: z.string().min(1, 'Exporter (Consignor) is required').max(50, 'Exporter (Consignor) name too long'),\n  initialLocationName: z.string().optional(),\n  initialLocationPallets: z.coerce.number().int().positive().optional().nullable(),\n  releaseDocument: z.any().optional(),\n  clearanceDocument: z.any().optional(),\n  released: z.boolean().optional(),\n  cleared: z.boolean().optional(),\n  weight: z.coerce.number().positive('Weight must be positive').optional().nullable(),\n  palletSpace: z.coerce.number().int('Pallet space must be an integer').positive('Pallet space must be positive').optional().nullable(),","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":22,"to":35}}}}],["555",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\nemptyPalletRequired: z.coerce.number().int(\"Must be a whole number\").min(0, 'Cannot be negative').optional().nullable(),\n  mrn: z.string().max(50, \"MRN too long\").optional(),\n  comments: z.string().max(200, \"Comments are too long\").optional(),\n});","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":36,"to":39}}}}],["556",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\ntype ShipmentFormData = z.infer<typeof shipmentSchema>;\n\ninterface AddShipmentDialogProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  trailerId: string;\n}\n\nexport default function AddShipmentDialog({ isOpen, setIsOpen, trailerId }: AddShipmentDialogProps) {\n  const { addShipment } = useWarehouse();\n  const { toast } = useToast();\n  const { register, handleSubmit, reset, formState: { errors, isSubmitting } } = useForm<ShipmentFormData>({\n    resolver: zodResolver(shipmentSchema),\n    defaultValues: {\n      released: false,\n      cleared: false,\n      weight: null,\n      palletSpace: null,\n      initialLocationName: '',\n      initialLocationPallets: null,\n      customerJobNumber: '',\n      emptyPalletRequired: 0, \n      mrn: '',\n      comments: '',\n    }\n  });","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":41,"to":66}}}}],["557",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\nconst onSubmit: SubmitHandler<ShipmentFormData> = (data) => {\n    const releaseDocumentName = data.releaseDocument && data.releaseDocument.length > 0 ? data.releaseDocument[0]?.name : undefined;\n    const clearanceDocumentName = data.clearanceDocument && data.clearanceDocument.length > 0 ? data.clearanceDocument[0]?.name : undefined;","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":68,"to":70}}}}],["558",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\naddShipment({\n      trailerId,\n      stsJob: data.stsJob,\n      customerJobNumber: data.customerJobNumber || undefined,\n      quantity: data.quantity,\n      importer: data.importer,\n      exporter: data.exporter,\n      initialLocationName: data.initialLocationName || undefined,\n      initialLocationPallets: data.initialLocationPallets ?? undefined,\n      releaseDocumentName,\n      clearanceDocumentName,\n      released: data.released,\n      cleared: data.cleared,\n      weight: data.weight ?? undefined,\n      palletSpace: data.palletSpace ?? undefined,\n      emptyPalletRequired: data.emptyPalletRequired ?? 0,\n      mrn: data.mrn || undefined,\n      comments: data.comments || undefined,\n    });\n    toast({\n      title: \"Success!\",\n      description: `Shipment with STS Job \"${data.stsJob}\" added to trailer ${trailerId}.`,\n    });\n    reset();\n    setIsOpen(false);\n  };","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":72,"to":97}}}}],["559",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\nreturn (\n    <Dialog open={isOpen} onOpenChange={(open) => { setIsOpen(open); if (!open) reset(); }}>\n      <DialogContent className=\"sm:max-w-[520px]\">\n        <DialogHeader>\n          <DialogTitle>Add New Shipment</DialogTitle>\n          <DialogDescription>\n            Enter details for the new shipment to be added to trailer ID: {trailerId}.\n          </DialogDescription>\n        </DialogHeader>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4 py-4 max-h-[70vh] overflow-y-auto pr-2\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"stsJob\">STS Job Number</Label>\n              <Input id=\"stsJob\" type=\"number\" {...register('stsJob')} placeholder=\"e.g., 12345\" />\n              {errors.stsJob && <p className=\"text-sm text-destructive mt-1\">{errors.stsJob.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"customerJobNumber\" className=\"flex items-center\">","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":99,"to":116}}}}],["560",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n<Briefcase className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Customer Job Number (Optional)\n              </Label>\n              <Input id=\"customerJobNumber\" {...register('customerJobNumber')} placeholder=\"e.g., CUST-XYZ-123\" />\n              {errors.customerJobNumber && <p className=\"text-sm text-destructive mt-1\">{errors.customerJobNumber.message}</p>}\n            </div>\n          </div>","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":117,"to":122}}}}],["561",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n<div>\n            <Label htmlFor=\"quantity\">Quantity</Label>\n            <Input id=\"quantity\" type=\"number\" {...register('quantity')} placeholder=\"e.g., 100\" />\n            {errors.quantity && <p className=\"text-sm text-destructive mt-1\">{errors.quantity.message}</p>}\n          </div>\n\n          <div>\n            <Label htmlFor=\"exporter\" className=\"flex items-center\">\n              <Send className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Exporter (Consignor)\n            </Label>\n            <Input id=\"exporter\" {...register('exporter')} placeholder=\"e.g., Local Exporters Co.\" />\n            {errors.exporter && <p className=\"text-sm text-destructive mt-1\">{errors.exporter.message}</p>}\n          </div>","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":125,"to":137}}}}],["562",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n<div>\n            <Label htmlFor=\"importer\" className=\"flex items-center\">\n              <Users className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Importer (Consignee)\n            </Label>\n            <Input id=\"importer\" {...register('importer')} placeholder=\"e.g., Global Importers LLC\" />\n            {errors.importer && <p className=\"text-sm text-destructive mt-1\">{errors.importer.message}</p>}\n          </div>","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":139,"to":145}}}}],["563",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n<div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"weight\" className=\"flex items-center\">\n                <Weight className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Weight (kg) (Optional)\n              </Label>\n              <Input id=\"weight\" type=\"number\" step=\"0.1\" {...register('weight')} placeholder=\"e.g., 1250.5\" />\n              {errors.weight && <p className=\"text-sm text-destructive mt-1\">{errors.weight.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"palletSpace\" className=\"flex items-center\">\n                <Box className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Pallet Spaces (Shipment Total) (Optional)\n              </Label>\n              <Input id=\"palletSpace\" type=\"number\" {...register('palletSpace')} placeholder=\"e.g., 4\" />\n              {errors.palletSpace && <p className=\"text-sm text-destructive mt-1\">{errors.palletSpace.message}</p>}\n            </div>\n          </div>","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":148,"to":163}}}}],["564",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n<div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"initialLocationName\" className=\"flex items-center\">\n                <MapPin className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Initial Location (Optional)\n              </Label>\n              <Input id=\"initialLocationName\" {...register('initialLocationName')} placeholder=\"e.g., Bay C2\" />\n              {errors.initialLocationName && <p className=\"text-sm text-destructive mt-1\">{errors.initialLocationName.message}</p>}\n            </div>\n             <div>\n              <Label htmlFor=\"initialLocationPallets\" className=\"flex items-center\">\n                <Box className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Plt Spaces in Loc. (Optional)\n              </Label>\n              <Input id=\"initialLocationPallets\" type=\"number\" {...register('initialLocationPallets')} placeholder=\"e.g., 2\" />","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":165,"to":177}}}}],["565",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n{errors.initialLocationPallets && <p className=\"text-sm text-destructive mt-1\">{errors.initialLocationPallets.message}</p>}\n            </div>\n          </div>","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":178,"to":180}}}}],["566",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n<div>\n            <Label htmlFor=\"mrn\" className=\"flex items-center\">\n              <Fingerprint className=\"mr-2 h-4 w-4 text-muted-foreground\" /> MRN (Optional)\n            </Label>\n            <Input id=\"mrn\" {...register('mrn')} placeholder=\"e.g., 24GB123...\" />\n            {errors.mrn && <p className=\"text-sm text-destructive mt-1\">{errors.mrn.message}</p>}\n          </div>\n\n          <div>\n            <Label htmlFor=\"comments\" className=\"flex items-center\">\n              <MessageSquare className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Comments (Optional)\n            </Label>\n            <Textarea id=\"comments\" {...register('comments')} placeholder=\"e.g., Special handling instructions...\" rows={3} />\n            {errors.comments && <p className=\"text-sm text-destructive mt-1\">{errors.comments.message}</p>}\n          </div>","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":182,"to":196}}}}],["567",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n<div className=\"space-y-2\">\n            <Label htmlFor=\"releaseDocument\" className=\"flex items-center\">\n              <FileText className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Release Document (Optional)\n            </Label>\n            <Input id=\"releaseDocument\" type=\"file\" {...register('releaseDocument')} className=\"file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"/>\n            {errors.releaseDocument && <p className=\"text-sm text-destructive mt-1\">{(errors.releaseDocument as any)?.message}</p>}\n          </div>","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":198,"to":204}}}}],["568",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n<div className=\"space-y-2\">\n            <Label htmlFor=\"clearanceDocument\" className=\"flex items-center\">\n              <FileText className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Clearance Document (Optional)\n            </Label>\n            <Input id=\"clearanceDocument\" type=\"file\" {...register('clearanceDocument')} className=\"file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"/>\n            {errors.clearanceDocument && <p className=\"text-sm text-destructive mt-1\">{(errors.clearanceDocument as any)?.message}</p>}\n          </div>\n          \n           <div>\n              <Label htmlFor=\"emptyPalletRequired\" className=\"flex items-center\">\n                <Archive className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Empty Pallets Required (Number, Optional)\n              </Label>","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":206,"to":217}}}}],["569",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n</Label>\n              <Input id=\"emptyPalletRequired\" type=\"number\" {...register('emptyPalletRequired')} placeholder=\"e.g., 0 or 2\" />\n              {errors.emptyPalletRequired && <p className=\"text-sm text-destructive mt-1\">{errors.emptyPalletRequired.message}</p>}\n            </div>","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":217,"to":220}}}}],["570",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n<div className=\"grid grid-cols-2 gap-4 pt-2\">\n            <div className=\"flex items-center space-x-2\">\n              <input type=\"checkbox\" id=\"released\" {...register('released')} className=\"h-4 w-4 rounded border-primary text-primary focus:ring-primary\"/>\n              <Label htmlFor=\"released\" className=\"font-normal\">Permitted to be Released</Label>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <input type=\"checkbox\" id=\"cleared\" {...register('cleared')} className=\"h-4 w-4 rounded border-primary text-primary focus:ring-primary\" />\n              <Label htmlFor=\"cleared\" className=\"font-normal\">Mark as Cleared</Label>\n            </div>\n          </div>","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":222,"to":231}}}}],["571",{"pageContent":"File: src/components/shipment/AddShipmentDialog.tsx\n<DialogFooter className=\"pt-4\">\n            <Button type=\"button\" variant=\"outline\" onClick={() => { setIsOpen(false); reset(); }}>Cancel</Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Adding...' : 'Add Shipment'}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}","metadata":{"source":"src/components/shipment/AddShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":233,"to":243}}}}],["572",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\nimport { useEffect } from 'react';\nimport { useForm, type SubmitHandler, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Shipment, ShipmentUpdateData, ShipmentFormData } from '@/types'; // Use ShipmentFormData for form\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { FileText, Weight, Box, Edit, Users, Send, Briefcase, Archive, Fingerprint, CalendarIcon, CalendarClock, MessageSquare } from 'lucide-react';\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":22}}}}],["573",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\nimport { format, parseISO } from \"date-fns\";\nimport { cn } from \"@/lib/utils\";\nimport { Textarea } from '@/components/ui/textarea';","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":23,"to":25}}}}],["574",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n// Using ShipmentFormData as base for the form, which includes clearanceDate as Date | null\nconst editShipmentSchema = z.object({\n  stsJob: z.coerce.number().positive('STS Job must be a positive number'),\n  customerJobNumber: z.string().max(50, 'Customer job number too long').optional(),\n  quantity: z.coerce.number().min(1, 'Quantity must be at least 1'),\n  importer: z.string().min(1, 'Importer (Consignee) is required').max(50, 'Importer (Consignee) name too long'),\n  exporter: z.string().min(1, 'Exporter (Consignor) is required').max(50, 'Exporter (Consignor) name too long'),\n  releaseDocument: z.any().optional(), // Keep as any for FileList or File\n  clearanceDocument: z.any().optional(), // Keep as any for FileList or File\n  released: z.boolean().optional(),\n  cleared: z.boolean().optional(),\n  weight: z.coerce.number().positive('Weight must be positive').optional().nullable(),","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":27,"to":38}}}}],["575",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\npalletSpace: z.coerce.number().int('Pallet space must be an integer').positive('Pallet space must be positive').optional().nullable(),\n  emptyPalletRequired: z.coerce.number().int(\"Must be a whole number\").min(0, 'Cannot be negative').optional().nullable(),\n  mrn: z.string().max(50, \"MRN too long\").optional(),\n  clearanceDate: z.date().nullable().optional(), // Matching ShipmentFormData\n  comments: z.string().max(200, \"Comments are too long\").optional(),\n});","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":39,"to":44}}}}],["576",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n// This type is for what the form's `data` object will look like on submit\ntype EditShipmentFormSubmitData = z.infer<typeof editShipmentSchema>;\n\ninterface EditShipmentDialogProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  shipmentToEdit: Shipment;\n}\n\nexport default function EditShipmentDialog({ isOpen, setIsOpen, shipmentToEdit }: EditShipmentDialogProps) {\n  const { updateShipment } = useWarehouse();\n  const { toast } = useToast();","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":46,"to":57}}}}],["577",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\nconst { register, handleSubmit, reset, control, formState: { errors, isSubmitting }, watch, setValue } = useForm<EditShipmentFormSubmitData>({\n    resolver: zodResolver(editShipmentSchema),\n    // Default values are critical for controlled components\n    defaultValues: {\n      stsJob: 0, // Default to 0 or a sensible number\n      customerJobNumber: '',\n      quantity: 1, // Default to 1 or a sensible number\n      importer: '',\n      exporter: '',\n      released: false,\n      cleared: false,\n      weight: null,\n      palletSpace: null,\n      releaseDocument: null,\n      clearanceDocument: null,\n      emptyPalletRequired: 0,\n      mrn: '',\n      clearanceDate: null,\n      comments: '',\n    }\n  });","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":59,"to":79}}}}],["578",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\nuseEffect(() => {\n    if (shipmentToEdit && isOpen) {\n      reset({\n        stsJob: shipmentToEdit.stsJob,\n        customerJobNumber: shipmentToEdit.customerJobNumber || '',\n        quantity: shipmentToEdit.quantity,\n        importer: shipmentToEdit.importer,\n        exporter: shipmentToEdit.exporter,\n        released: shipmentToEdit.released,\n        cleared: shipmentToEdit.cleared,\n        weight: shipmentToEdit.weight ?? null,\n        palletSpace: shipmentToEdit.palletSpace ?? null,\n        releaseDocument: null, // File inputs are not reset with previous files typically\n        clearanceDocument: null,\n        emptyPalletRequired: shipmentToEdit.emptyPalletRequired ?? 0,\n        mrn: shipmentToEdit.mrn || '',\n        clearanceDate: shipmentToEdit.clearanceDate ? parseISO(shipmentToEdit.clearanceDate) : null,\n        comments: shipmentToEdit.comments || '',\n      });\n    }\n  }, [shipmentToEdit, isOpen, reset]);","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":81,"to":101}}}}],["579",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\nconst onSubmit: SubmitHandler<EditShipmentFormSubmitData> = (data) => {\n    const newReleaseDocumentFile = data.releaseDocument && data.releaseDocument.length > 0 ? data.releaseDocument[0] : null;\n    const newClearanceDocumentFile = data.clearanceDocument && data.clearanceDocument.length > 0 ? data.clearanceDocument[0] : null;","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":104,"to":106}}}}],["580",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\nconst updatedData: ShipmentUpdateData = { \n      stsJob: data.stsJob,\n      customerJobNumber: data.customerJobNumber || undefined,\n      quantity: data.quantity,\n      importer: data.importer,\n      exporter: data.exporter,\n      releaseDocumentName: newReleaseDocumentFile ? newReleaseDocumentFile.name : shipmentToEdit.releaseDocumentName,\n      clearanceDocumentName: newClearanceDocumentFile ? newClearanceDocumentFile.name : shipmentToEdit.clearanceDocumentName,\n      released: data.released ?? false,\n      cleared: data.cleared ?? false,\n      weight: data.weight ?? undefined,\n      palletSpace: data.palletSpace ?? undefined,\n      emptyPalletRequired: data.emptyPalletRequired ?? 0,\n      mrn: data.mrn || undefined,\n      clearanceDate: data.clearanceDate ? data.clearanceDate.toISOString() : null,\n      comments: data.comments,\n    };","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":108,"to":124}}}}],["581",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\nupdateShipment(shipmentToEdit.id, updatedData);\n    toast({\n      title: \"Success!\",\n      description: `Shipment STS Job \"${data.stsJob}\" updated. Locations managed separately.`,\n    });\n    setIsOpen(false);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  }","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":126,"to":136}}}}],["582",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\nreturn (\n    <Dialog open={isOpen} onOpenChange={(open) => { if (!open) handleClose(); else setIsOpen(true); }}>\n      <DialogContent className=\"sm:max-w-[520px]\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center\"><Edit className=\"mr-2 h-5 w-5\" /> Edit Shipment</DialogTitle>\n          <DialogDescription>\n            Modify the details for shipment ID: {shipmentToEdit.id.substring(0,8)}... Location details are managed in a separate dialog.\n          </DialogDescription>\n        </DialogHeader>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4 py-4 max-h-[70vh] overflow-y-auto pr-2\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"stsJob\">STS Job Number</Label>\n              <Input id=\"stsJob\" type=\"number\" {...register('stsJob')} />\n              {errors.stsJob && <p className=\"text-sm text-destructive mt-1\">{errors.stsJob.message}</p>}\n            </div>\n            <div>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":138,"to":154}}}}],["583",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n</div>\n            <div>\n              <Label htmlFor=\"customerJobNumber\" className=\"flex items-center\">\n                <Briefcase className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Customer Job Number\n              </Label>\n              <Input id=\"customerJobNumber\" {...register('customerJobNumber')} />\n              {errors.customerJobNumber && <p className=\"text-sm text-destructive mt-1\">{errors.customerJobNumber.message}</p>}\n            </div>\n          </div>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":153,"to":161}}}}],["584",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n<div>\n            <Label htmlFor=\"quantity\">Quantity</Label>\n            <Input id=\"quantity\" type=\"number\" {...register('quantity')} />\n            {errors.quantity && <p className=\"text-sm text-destructive mt-1\">{errors.quantity.message}</p>}\n          </div>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":163,"to":167}}}}],["585",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n<div>\n            <Label htmlFor=\"exporter\" className=\"flex items-center\">\n              <Send className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Exporter (Consignor)\n            </Label>\n            <Input id=\"exporter\" {...register('exporter')} />\n            {errors.exporter && <p className=\"text-sm text-destructive mt-1\">{errors.exporter.message}</p>}\n          </div>\n          \n          <div>\n            <Label htmlFor=\"importer\" className=\"flex items-center\">\n              <Users className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Importer (Consignee)\n            </Label>\n            <Input id=\"importer\" {...register('importer')} />\n            {errors.importer && <p className=\"text-sm text-destructive mt-1\">{errors.importer.message}</p>}\n          </div>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":169,"to":183}}}}],["586",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n<div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"weight\" className=\"flex items-center\">\n                <Weight className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Weight (kg)\n              </Label>\n              <Input id=\"weight\" type=\"number\" step=\"0.1\" {...register('weight')} />\n              {errors.weight && <p className=\"text-sm text-destructive mt-1\">{errors.weight.message}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"palletSpace\" className=\"flex items-center\">\n                <Box className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Pallet Spaces (Shipment Total)\n              </Label>\n              <Input id=\"palletSpace\" type=\"number\" {...register('palletSpace')} />\n              {errors.palletSpace && <p className=\"text-sm text-destructive mt-1\">{errors.palletSpace.message}</p>}\n            </div>\n          </div>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":185,"to":200}}}}],["587",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n<div>\n            <Label htmlFor=\"mrn\" className=\"flex items-center\">\n              <Fingerprint className=\"mr-2 h-4 w-4 text-muted-foreground\" /> MRN\n            </Label>\n            <Input id=\"mrn\" {...register('mrn')} />\n            {errors.mrn && <p className=\"text-sm text-destructive mt-1\">{errors.mrn.message}</p>}\n          </div>\n          \n          <div>\n            <Label htmlFor=\"comments\" className=\"flex items-center\">\n              <MessageSquare className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Comments\n            </Label>\n            <Textarea id=\"comments\" {...register('comments')} placeholder=\"Special handling instructions...\" rows={3} />\n            {errors.comments && <p className=\"text-sm text-destructive mt-1\">{errors.comments.message}</p>}\n          </div>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":202,"to":216}}}}],["588",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n<div className=\"space-y-2\">\n            <Label htmlFor=\"releaseDocument\" className=\"flex items-center\">\n              <FileText className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Release Document\n            </Label>\n            {shipmentToEdit.releaseDocumentName && !watch('releaseDocument')?.[0] && (\n                <p className=\"text-xs text-muted-foreground\">Current: {shipmentToEdit.releaseDocumentName} (upload new to replace)</p>\n            )}\n            <Input id=\"releaseDocument\" type=\"file\" {...register('releaseDocument')} className=\"file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"/>\n            {errors.releaseDocument && <p className=\"text-sm text-destructive mt-1\">{(errors.releaseDocument as any)?.message}</p>}\n          </div>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":218,"to":227}}}}],["589",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n<div className=\"space-y-2\">\n            <Label htmlFor=\"clearanceDocument\" className=\"flex items-center\">\n              <FileText className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Clearance Document\n            </Label>\n             {shipmentToEdit.clearanceDocumentName && !watch('clearanceDocument')?.[0] && (\n                <p className=\"text-xs text-muted-foreground\">Current: {shipmentToEdit.clearanceDocumentName} (upload new to replace)</p>\n            )}\n            <Input id=\"clearanceDocument\" type=\"file\" {...register('clearanceDocument')} className=\"file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-primary/10 file:text-primary hover:file:bg-primary/20\"/>\n            {errors.clearanceDocument && <p className=\"text-sm text-destructive mt-1\">{(errors.clearanceDocument as any)?.message}</p>}\n          </div>\n          \n          <div>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":229,"to":240}}}}],["590",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n<div>\n            <Label htmlFor=\"clearanceDateForm\" className=\"flex items-center\"> {/* Changed ID to avoid conflict */}\n              <CalendarClock className=\"mr-2 h-4 w-4 text-muted-foreground\" /> Clearance Date (Optional)\n            </Label>\n            <Controller\n              name=\"clearanceDate\"\n              control={control}\n              render={({ field }) => (\n                <Popover>\n                  <PopoverTrigger asChild>\n                    <Button\n                      variant={\"outline\"}\n                      className={cn(\n                        \"w-full justify-start text-left font-normal mt-1\",\n                        !field.value && \"text-muted-foreground\"\n                      )}\n                    >\n                      <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                      {field.value ? format(field.value, \"PPP\") : <span>Pick a date</span>}\n                    </Button>\n                  </PopoverTrigger>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":240,"to":260}}}}],["591",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n</PopoverTrigger>\n                  <PopoverContent className=\"w-auto p-0\">\n                    <Calendar\n                      mode=\"single\"\n                      selected={field.value || undefined} // Pass Date object or undefined\n                      onSelect={(date) => field.onChange(date || null)} // onChange expects Date | undefined, ensure null if no date\n                      initialFocus\n                    />\n                  </PopoverContent>\n                </Popover>\n              )}\n            />\n            {errors.clearanceDate && <p className=\"text-sm text-destructive mt-1\">{errors.clearanceDate.message}</p>}\n            <p className=\"text-xs text-muted-foreground mt-1\">Manually set/clear date. Auto-logic applies if \"Cleared\" status changes elsewhere.</p>\n          </div>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":260,"to":274}}}}],["592",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n<div>\n            <Label htmlFor=\"emptyPalletRequired\">\n              <Archive className=\"mr-2 h-4 w-4 text-muted-foreground inline\" /> Empty Pallets Required (Number)\n            </Label>\n            <Input id=\"emptyPalletRequired\" type=\"number\" {...register('emptyPalletRequired')} />\n            {errors.emptyPalletRequired && <p className=\"text-sm text-destructive mt-1\">{errors.emptyPalletRequired.message}</p>}\n          </div>","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":276,"to":282}}}}],["593",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n<div className=\"grid grid-cols-2 gap-4 pt-2\">\n            <div className=\"flex items-center space-x-2\">\n              <Controller\n                name=\"released\"\n                control={control}\n                render={({ field }) => (\n                    <input type=\"checkbox\" id=\"releasedEdit\" checked={!!field.value} onChange={(e) => field.onChange(e.target.checked)} className=\"h-4 w-4 rounded border-primary text-primary focus:ring-primary\" />\n                )}\n              />\n              <Label htmlFor=\"releasedEdit\" className=\"font-normal\">Permitted to be Released</Label>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n               <Controller\n                name=\"cleared\"\n                control={control}\n                render={({ field }) => (","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":284,"to":299}}}}],["594",{"pageContent":"File: src/components/shipment/EditShipmentDialog.tsx\n<input type=\"checkbox\" id=\"clearedEdit\" checked={!!field.value} onChange={(e) => field.onChange(e.target.checked)} className=\"h-4 w-4 rounded border-primary text-primary focus:ring-primary\" />\n                )}\n              />\n              <Label htmlFor=\"clearedEdit\" className=\"font-normal\">Mark as Cleared</Label>\n            </div>\n          </div>\n          \n          <DialogFooter className=\"pt-4\">\n            <Button type=\"button\" variant=\"outline\" onClick={handleClose}>Cancel</Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Saving...' : 'Save Changes'}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}","metadata":{"source":"src/components/shipment/EditShipmentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":300,"to":317}}}}],["595",{"pageContent":"File: src/components/shipment/ManageCommentDialog.tsx\nimport { useEffect } from 'react';\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Shipment } from '@/types';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { useToast } from '@/hooks/use-toast';\nimport { MessageSquare } from 'lucide-react';\nimport { Textarea } from '@/components/ui/textarea';\n\nconst commentSchema = z.object({\n  comments: z.string().max(200, \"Comments are too long\").optional(),\n});\n\ntype CommentFormData = z.infer<typeof commentSchema>;\n\ninterface ManageCommentDialogProps {\n  isOpen: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  shipmentToManage: Shipment;\n}","metadata":{"source":"src/components/shipment/ManageCommentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":30}}}}],["596",{"pageContent":"File: src/components/shipment/ManageCommentDialog.tsx\nexport default function ManageCommentDialog({ isOpen, setIsOpen, shipmentToManage }: ManageCommentDialogProps) {\n  const { updateShipment } = useWarehouse();\n  const { toast } = useToast();\n\n  const { register, handleSubmit, reset, formState: { errors, isSubmitting } } = useForm<CommentFormData>({\n    resolver: zodResolver(commentSchema),\n  });\n\n  useEffect(() => {\n    if (shipmentToManage && isOpen) {\n      reset({\n        comments: shipmentToManage.comments || '',\n      });\n    }\n  }, [shipmentToManage, isOpen, reset]);\n\n\n  const onSubmit: SubmitHandler<CommentFormData> = (data) => {\n    updateShipment(shipmentToManage.id, { comments: data.comments });\n    toast({\n      title: \"Comment Updated!\",\n      description: `Comment for shipment STS Job \"${shipmentToManage.stsJob}\" has been saved.`,\n    });\n    setIsOpen(false);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  }","metadata":{"source":"src/components/shipment/ManageCommentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":32,"to":60}}}}],["597",{"pageContent":"File: src/components/shipment/ManageCommentDialog.tsx\nreturn (\n    <Dialog open={isOpen} onOpenChange={(open) => { if (!open) handleClose(); else setIsOpen(true); }}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center\"><MessageSquare className=\"mr-2 h-5 w-5\" /> Manage Comment</DialogTitle>\n          <DialogDescription>\n            Edit or add a comment for shipment STS Job: {shipmentToManage.stsJob}.\n          </DialogDescription>\n        </DialogHeader>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4 py-4\">\n          <div>\n            <Textarea\n              id=\"comments\"\n              {...register('comments')}\n              placeholder=\"Enter your comment here...\"\n              rows={5}\n              autoFocus\n            />\n            {errors.comments && <p className=\"text-sm text-destructive mt-1\">{errors.comments.message}</p>}\n          </div>\n          \n          <DialogFooter className=\"pt-4\">","metadata":{"source":"src/components/shipment/ManageCommentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":62,"to":83}}}}],["598",{"pageContent":"File: src/components/shipment/ManageCommentDialog.tsx\n<Button type=\"button\" variant=\"outline\" onClick={handleClose}>Cancel</Button>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Saving...' : 'Save Comment'}\n            </Button>\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}","metadata":{"source":"src/components/shipment/ManageCommentDialog.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":84,"to":93}}}}],["599",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport type { Shipment } from '@/types';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Package, MapPin, Edit3, Trash2, MoreVertical, FileText, CheckCircle2, CircleOff, Weight, Box, Pencil, FileUp, Users, Hash, Send, Briefcase, Truck, Archive, Fingerprint, CalendarClock, Mail, MessageSquare } from 'lucide-react';\nimport ManageLocationsDialog from './ManageLocationsDialog';\nimport EditShipmentDialog from './EditShipmentDialog';\nimport AttachDocumentDialog from './AttachDocumentDialog';\nimport ConfirmationDialog from '@/components/shared/ConfirmationDialog';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":19}}}}],["600",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\nDropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { useToast } from '@/hooks/use-toast';\nimport { format, parseISO } from 'date-fns';","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":19,"to":23}}}}],["601",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\ninterface ShipmentCardProps {\n  shipment: Shipment;\n  onDelete: () => void;\n  viewMode?: 'grid' | 'list'; \n}\n\nexport default function ShipmentCard({ shipment, onDelete, viewMode = 'grid' }: ShipmentCardProps) {\n  const { updateShipment, getTrailerById } = useWarehouse();\n  const { toast } = useToast();\n\n  const [isManageLocationsOpen, setIsManageLocationsOpen] = useState(false);\n  const [isEditShipmentOpen, setIsEditShipmentOpen] = useState(false);\n  const [isAttachDocumentOpen, setIsAttachDocumentOpen] = useState(false);\n  const [attachDocumentType, setAttachDocumentType] = useState<'release' | 'clearance' | null>(null);\n  const [isShipmentDeleteDialogOpen, setIsShipmentDeleteDialogOpen] = useState(false);\n\n  const shipmentIdentifier = `STS Job: ${shipment.stsJob}`; \n  const trailer = getTrailerById(shipment.trailerId);","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":25,"to":42}}}}],["602",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\nconst handleMarkAsPermitted = () => {\n    if (!shipment.released) {\n      setAttachDocumentType('release');\n      setIsAttachDocumentOpen(true);\n    } else {\n      updateShipment(shipment.id, { released: false, releaseDocumentName: undefined });\n      toast({ title: \"Shipment Updated\", description: `${shipmentIdentifier} marked as not permitted. Release document removed.` });\n    }\n  };\n\n  const handleMarkAsCleared = () => {\n    if (!shipment.cleared) {\n      setAttachDocumentType('clearance');\n      setIsAttachDocumentOpen(true);\n    } else {\n      updateShipment(shipment.id, { cleared: false, clearanceDocumentName: undefined, clearanceDate: null });\n      toast({ title: \"Shipment Updated\", description: `${shipmentIdentifier} marked as not cleared. Clearance document & date removed.` });\n    }\n  };","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":44,"to":62}}}}],["603",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\nconst handleDocumentAttached = (\n    attachedShipmentId: string,\n    docType: 'release' | 'clearance',\n    documentName: string\n  ) => {\n    if (docType === 'release') {\n      updateShipment(attachedShipmentId, { releaseDocumentName: documentName, released: true });\n    } else if (docType === 'clearance') {\n      updateShipment(attachedShipmentId, { clearanceDocumentName: documentName, cleared: true, clearanceDate: new Date().toISOString() });\n    }\n    setIsAttachDocumentOpen(false);\n  };\n\n  const handleNotifyMissingDocuments = () => {\n    let missingParts = [];\n    if (!shipment.cleared) {\n      missingParts.push(\"clearance\");\n    }\n    if (!shipment.released) {\n      missingParts.push(\"release permission\");\n    }","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":64,"to":84}}}}],["604",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\nconst missingSubjectPart = missingParts.join(\" & \");\n    const subject = `Missing ${missingSubjectPart} for Trailer ${shipment.trailerId} / Job ${shipment.stsJob}`;\n    const body = `Good Morning,\\n\\nWe have a driver waiting to collect \"${shipment.trailerId} / Job ${shipment.stsJob}\" but we are missing files for above shipment.\\n\\nCan you be able to update us ASAP please?`;\n    const mailtoLink = `mailto:klaudia@mail.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n    window.location.href = mailtoLink;\n  };\n\n\n  const locations = shipment.locations || [{ name: 'Pending Assignment' }];\n  const isPendingAssignment = locations.length === 1 && locations[0].name === 'Pending Assignment';\n\n  const formatDate = (dateString?: string | null, dateFormat = 'PP') => {\n    if (!dateString) return 'N/A';\n    try {\n      return format(parseISO(dateString), dateFormat);\n    } catch (error) {\n      return \"Invalid Date\";\n    }\n  };","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":86,"to":104}}}}],["605",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\nconst cardContent = (\n    <>\n      <div className=\"flex items-start justify-between\">\n        <div>\n          <CardTitle className={viewMode === 'list' ? \"text-base font-semibold\" : \"text-lg\"}>\n            <Link href={`/shipments/${shipment.id}`} className=\"hover:underline text-primary flex items-center group\">\n              <Package className=\"mr-2 h-5 w-5 text-primary group-hover:animate-pulse\" />\n              Trailer {shipment.trailerId} Job: {shipment.stsJob}\n            </Link>\n          </CardTitle>\n          <CardDescription className=\"text-xs mt-0.5\">\n            Shipment ID: {shipment.id.substring(0,8)}...\n          </CardDescription>\n        </div>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7\">\n              <MoreVertical className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":106,"to":126}}}}],["606",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n<DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem asChild>\n               <Link href={`/shipments/${shipment.id}`} className=\"flex items-center w-full\">\n                 <Package className=\"mr-2 h-4 w-4\" /> View Details\n               </Link>\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem onClick={() => setIsEditShipmentOpen(true)}>\n              <Pencil className=\"mr-2 h-4 w-4\" />\n              Edit Shipment Details\n            </DropdownMenuItem>\n             <DropdownMenuItem onClick={() => setIsManageLocationsOpen(true)}>\n              <MapPin className=\"mr-2 h-4 w-4\" />\n              Manage Locations\n            </DropdownMenuItem>\n            <DropdownMenuItem onClick={handleMarkAsPermitted}>\n              {shipment.released ? <CircleOff className=\"mr-2 h-4 w-4\" /> : <FileUp className=\"mr-2 h-4 w-4 text-green-600\" />}","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":127,"to":143}}}}],["607",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n{shipment.released ? 'Mark as Not Permitted' : 'Permit (Attach Doc)'}\n            </DropdownMenuItem>\n            <DropdownMenuItem onClick={handleMarkAsCleared}>\n               {shipment.cleared ? <CircleOff className=\"mr-2 h-4 w-4\" /> : <FileUp className=\"mr-2 h-4 w-4 text-green-600\" />}\n              {shipment.cleared ? 'Mark as Not Cleared' : 'Clear (Attach Doc)'}\n            </DropdownMenuItem>\n            {(!shipment.released || !shipment.cleared) && (\n              <>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem onClick={handleNotifyMissingDocuments}>\n                  <Mail className=\"mr-2 h-4 w-4 text-orange-500\" />\n                  Notify Missing Docs\n                </DropdownMenuItem>\n              </>\n            )}\n            <DropdownMenuSeparator />\n            <DropdownMenuItem onClick={() => setIsShipmentDeleteDialogOpen(true)} className=\"text-destructive focus:text-destructive focus:bg-destructive/10\">","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":144,"to":160}}}}],["608",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n<Trash2 className=\"mr-2 h-4 w-4\" />\n              Delete Shipment\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":161,"to":166}}}}],["609",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n<div className={`space-y-1 text-xs ${viewMode === 'grid' ? 'mt-2' : 'mt-1'}`}>\n        {shipment.customerJobNumber && (\n          <div className=\"flex items-center\">\n            <Briefcase className=\"mr-1.5 h-3.5 w-3.5 text-muted-foreground\" />\n            <span className=\"font-medium text-muted-foreground\">Cust. Job No:</span>\n            <span className=\"ml-1.5\">{shipment.customerJobNumber}</span>\n          </div>\n        )}\n        <p><span className=\"font-medium text-muted-foreground\">Quantity:</span> {shipment.quantity}</p>\n\n        <div className=\"flex items-center\">\n          <Send className=\"mr-1.5 h-3.5 w-3.5 text-muted-foreground\" />\n          <span className=\"font-medium text-muted-foreground\">Exporter (Consignor):</span>\n          <span className=\"ml-1.5\">{shipment.exporter}</span>\n        </div>","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":168,"to":182}}}}],["610",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n<div className=\"flex items-center\">\n          <Users className=\"mr-1.5 h-3.5 w-3.5 text-muted-foreground\" />\n          <span className=\"font-medium text-muted-foreground\">Importer (Consignee):</span>\n          <span className=\"ml-1.5\">{shipment.importer}</span>\n        </div>\n\n        {shipment.mrn && (\n          <div className=\"flex items-center\">\n            <Fingerprint className=\"mr-1.5 h-3.5 w-3.5 text-muted-foreground\" />\n            <span className=\"font-medium text-muted-foreground\">MRN:</span>\n            <span className=\"ml-1.5\">{shipment.mrn}</span>\n          </div>\n        )}\n\n        {shipment.weight !== undefined && shipment.weight !== null && (\n          <div className=\"flex items-center\">\n            <Weight className=\"mr-1.5 h-3.5 w-3.5 text-muted-foreground\" />\n            <span className=\"font-medium text-muted-foreground\">Weight:</span>\n            <span className=\"ml-1.5\">{shipment.weight} kg</span>\n          </div>\n        )}","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":184,"to":204}}}}],["611",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n{shipment.palletSpace !== undefined && shipment.palletSpace !== null && (\n          <div className=\"flex items-center\">\n            <Box className=\"mr-1.5 h-3.5 w-3.5 text-muted-foreground\" />\n            <span className=\"font-medium text-muted-foreground\">Total Pallet Spaces:</span>\n            <span className=\"ml-1.5\">{shipment.palletSpace}</span>\n          </div>\n        )}","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":206,"to":212}}}}],["612",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n<div className=\"flex items-start pt-0.5\">\n          <MapPin className=\"mr-1 h-3.5 w-3.5 text-muted-foreground mt-px flex-shrink-0\" />\n          <span className=\"font-medium text-muted-foreground mr-1\">Locations:</span>\n          <div className=\"flex flex-wrap gap-1\">\n            {isPendingAssignment ? (\n              <Badge variant=\"outline\" className=\"text-xs\">Pending Assignment</Badge>\n            ) : (\n              locations.map((loc, index) => (\n                <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                  {loc.name}\n                  {loc.pallets !== undefined && ` (${loc.pallets} plts)`}\n                  {locations.length > 1 && ` (${index + 1} of ${locations.length})`}\n                </Badge>\n              ))\n            )}\n          </div>\n        </div>","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":214,"to":230}}}}],["613",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n<div className=\"flex items-center pt-0.5\">\n          {shipment.released ? <CheckCircle2 className=\"mr-1.5 h-3.5 w-3.5 text-green-600\" /> : <CircleOff className=\"mr-1.5 h-3.5 w-3.5 text-muted-foreground\" />}\n          <span className=\"font-medium text-muted-foreground\">Permitted:</span>\n          <span className=\"ml-1.5 font-semibold\">{shipment.released ? 'Yes' : 'No'}</span>\n        </div>\n        <div className=\"flex items-center\">\n          {shipment.cleared ? <CheckCircle2 className=\"mr-1.5 h-3.5 w-3.5 text-green-600\" /> : <CircleOff className=\"mr-1.5 h-3.5 w-3.5 text-muted-foreground\" />}\n          <span className=\"font-medium text-muted-foreground\">Cleared:</span>\n          <span className=\"ml-1.5 font-semibold\">{shipment.cleared ? 'Yes' : 'No'}</span>\n        </div>\n        {shipment.cleared && shipment.clearanceDate && (\n           <div className=\"flex items-center text-xs text-muted-foreground\">\n            <CalendarClock className=\"mr-1.5 h-3 w-3\" />","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":232,"to":244}}}}],["614",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n<span>Cleared Date: {formatDate(shipment.clearanceDate, 'PPp')}</span>\n          </div>\n        )}\n        \n         <div className=\"flex items-center\">\n          <Archive className={`mr-1.5 h-3.5 w-3.5 ${shipment.emptyPalletRequired && shipment.emptyPalletRequired > 0 ? 'text-destructive' : 'text-muted-foreground'}`} />\n          <span className=\"font-medium text-muted-foreground\">Empty Pallets Required:</span>\n          <span className={`ml-1.5 font-semibold ${shipment.emptyPalletRequired && shipment.emptyPalletRequired > 0 ? 'text-destructive text-base' : ''}`}>\n            {shipment.emptyPalletRequired && shipment.emptyPalletRequired > 0 ? shipment.emptyPalletRequired : 'No'}\n          </span>\n        </div>\n        \n        {shipment.comments && (\n            <div className=\"flex items-start text-xs text-muted-foreground pt-1\">\n                <MessageSquare className=\"mr-1.5 h-3.5 w-3.5 mt-0.5 flex-shrink-0\" />","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":245,"to":259}}}}],["615",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n<p className=\"italic\">\"{shipment.comments}\"</p>\n            </div>\n        )}","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":260,"to":262}}}}],["616",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n{shipment.releaseDocumentName && (\n          <div className=\"flex items-center pt-0.5\">\n            <FileText className=\"mr-1.5 h-3.5 w-3.5 text-muted-foreground\" />\n            <span className=\"font-medium text-muted-foreground\">Release Doc:</span>\n            <span className=\"ml-1.5 text-foreground truncate\" title={shipment.releaseDocumentName}>{shipment.releaseDocumentName}</span>\n          </div>\n        )}\n        {shipment.clearanceDocumentName && (\n           <div className=\"flex items-center\">\n            <FileText className=\"mr-1.5 h-3.5 w-3.5 text-muted-foreground\" />\n            <span className=\"font-medium text-muted-foreground\">Clearance Doc:</span>\n            <span className=\"ml-1.5 text-foreground truncate\" title={shipment.clearanceDocumentName}>{shipment.clearanceDocumentName}</span>\n          </div>\n        )}\n      </div>\n    </>\n  );","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":264,"to":280}}}}],["617",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\nreturn (\n    <>\n      <Card className={`flex flex-col h-full shadow-md hover:shadow-lg transition-shadow duration-200 ${viewMode === 'list' ? 'w-full' : ''}`}>\n        {viewMode === 'grid' ? (\n          <>\n            <CardHeader className=\"pb-2\">\n              {/* Grid view doesn't typically have its own header for title etc. Title is part of content. */}\n            </CardHeader>\n            <CardContent className=\"text-sm flex-grow p-4 space-y-2\">\n              {cardContent}\n            </CardContent>\n            <CardFooter className=\"pt-3 p-4\">\n              <Button variant=\"outline\" size=\"sm\" className=\"w-full\" onClick={() => setIsManageLocationsOpen(true)}>\n                <MapPin className=\"mr-2 h-4 w-4\" /> Manage Locations\n              </Button>\n            </CardFooter>\n          </>\n        ) : ( // List View\n          <div className=\"p-4 flex flex-col sm:flex-row items-start justify-between gap-4 w-full\">\n            <div className=\"flex-grow space-y-1.5\">","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":282,"to":301}}}}],["618",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n{cardContent}\n            </div>\n            <div className=\"mt-2 sm:mt-0 sm:ml-auto flex-shrink-0\">\n               <Button variant=\"outline\" size=\"sm\" className=\"w-full sm:w-auto\" onClick={() => setIsManageLocationsOpen(true)}>\n                <MapPin className=\"mr-2 h-4 w-4\" /> Manage Locations\n              </Button>\n            </div>\n          </div>\n        )}\n      </Card>","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":302,"to":311}}}}],["619",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n{isManageLocationsOpen && (\n        <ManageLocationsDialog\n          isOpen={isManageLocationsOpen}\n          setIsOpen={setIsManageLocationsOpen}\n          shipmentToManage={shipment}\n        />\n      )}\n\n      {isEditShipmentOpen && ( \n        <EditShipmentDialog\n          isOpen={isEditShipmentOpen}\n          setIsOpen={setIsEditShipmentOpen}\n          shipmentToEdit={shipment}\n        />\n      )}\n\n      {isAttachDocumentOpen && attachDocumentType && (\n        <AttachDocumentDialog\n          isOpen={isAttachDocumentOpen}\n          setIsOpen={setIsAttachDocumentOpen}\n          shipmentId={shipment.id}\n          shipmentIdentifier={shipmentIdentifier} \n          documentType={attachDocumentType}\n          onDocumentAttached={handleDocumentAttached}\n        />\n      )}","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":313,"to":338}}}}],["620",{"pageContent":"File: src/components/shipment/ShipmentCard.tsx\n{isShipmentDeleteDialogOpen && (\n        <ConfirmationDialog\n          isOpen={isShipmentDeleteDialogOpen}\n          setIsOpen={setIsShipmentDeleteDialogOpen}\n          onConfirm={onDelete}\n          title=\"Delete Shipment?\"\n          description={`Are you sure you want to delete shipment STS Job: ${shipment.stsJob} (ID: ${shipment.id.substring(0,8)}...)? This action cannot be undone.`}\n          confirmText=\"Delete\"\n          confirmButtonVariant=\"destructive\"\n        />\n      )}\n    </>\n  );\n}","metadata":{"source":"src/components/shipment/ShipmentCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":340,"to":353}}}}],["621",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport type { Trailer, TrailerStatus } from '@/types';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Truck, Package, Edit, Trash2, MoreVertical, ChevronRight, Briefcase, CalendarDays, Boxes, Weight, Tag } from 'lucide-react';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport EditTrailerDialog from './EditTrailerDialog';\nimport ConfirmationDialog from '@/components/shared/ConfirmationDialog';\nimport { format, parseISO } from 'date-fns';","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":2,"to":21}}}}],["622",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\nimport { Skeleton } from '@/components/ui/skeleton';","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":22,"to":22}}}}],["623",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\ninterface TrailerCardProps {\n  trailer: Trailer;\n  viewMode: 'grid' | 'list';\n  onDelete: () => void;\n  onStatusChange: (newStatus: TrailerStatus) => void;\n}\n\nconst statusColors: Record<TrailerStatus, string> = {\n  Scheduled: 'bg-orange-500',\n  Arrived: 'bg-blue-500',\n  Loading: 'bg-green-500',\n  Offloading: 'bg-purple-500',\n  Devanned: 'bg-gray-500',\n};\nconst allStatuses: TrailerStatus[] = ['Scheduled', 'Arrived', 'Loading', 'Offloading', 'Devanned'];\n\n\nexport default function TrailerCard({ trailer, viewMode, onDelete, onStatusChange }: TrailerCardProps) {\n  const { getShipmentsByTrailerId } = useWarehouse();\n  const [isMounted, setIsMounted] = useState(false);\n\n  const [shipmentCount, setShipmentCount] = useState<number>(0);\n  const [totalPieces, setTotalPieces] = useState<number>(0);\n\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":25,"to":50}}}}],["624",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\nuseEffect(() => {\n    setIsMounted(true);\n    const currentShipments = getShipmentsByTrailerId(trailer.id);\n    setShipmentCount(currentShipments.length);\n    setTotalPieces(currentShipments.reduce((acc, s) => acc + s.quantity, 0));\n  }, [trailer.id, getShipmentsByTrailerId, trailer]); // Added trailer to dependency array for potential updates\n\n\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'N/A';\n    try {\n      return format(parseISO(dateString), 'MMM d, yyyy');\n    } catch (error) {\n      console.error(\"Error formatting date:\", dateString, error);\n      return \"Invalid Date\";\n    }\n  };\n\n  const DateDisplay = ({ label, dateString, icon: Icon }: { label: string, dateString?: string, icon: React.ElementType }) => {\n    return (\n      <div className=\"flex items-center text-xs text-muted-foreground mt-1\">\n        <Icon className=\"mr-1.5 h-3.5 w-3.5\" />\n        <span>{label}: {formatDate(dateString)}</span>\n      </div>\n    );\n  }","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":52,"to":77}}}}],["625",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\nconst CustomFieldDisplay = ({ label, value, icon: Icon }: { label: string, value?: string, icon?: React.ElementType }) => {\n    if (!value) return null;\n    return (\n      <div className=\"flex items-center text-xs text-muted-foreground mt-1\">\n        {Icon && <Icon className=\"mr-1.5 h-3.5 w-3.5\" />}\n        <span>{label}: {value}</span>\n      </div>\n    );\n  }\n\n\n  const GridViewContent = () => (\n    <>\n      <div className=\"flex items-start justify-between\">\n        <CardTitle className=\"text-xl group-hover:text-primary transition-colors mb-1\">\n          ID: {trailer.id}\n        </CardTitle>\n        <Truck className=\"h-7 w-7 text-muted-foreground group-hover:text-primary transition-colors flex-shrink-0\" />\n      </div>","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":79,"to":97}}}}],["626",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n{trailer.arrivalDate ? (\n        isMounted ? (\n          <div className=\"flex items-center text-sm text-foreground mt-0.5 mb-2 font-semibold\">\n            <CalendarDays className=\"mr-1.5 h-4 w-4 text-primary\" />\n            <span>Arrived: {formatDate(trailer.arrivalDate)}</span>\n          </div>\n        ) : (\n          <Skeleton className=\"h-4 w-3/4 mt-1 mb-2\" />\n        )\n      ) : null}\n\n      {trailer.name ? (\n        isMounted ? (\n          <CardDescription className=\"text-xs text-muted-foreground mb-0.5\">Name: {trailer.name}</CardDescription>\n        ) : (\n          <Skeleton className=\"h-3 w-1/2 mb-0.5\" />\n        )\n      ) : null}\n\n      {trailer.company ? (\n        isMounted ? (\n          <div className=\"flex items-center text-xs text-muted-foreground\">\n            <Briefcase className=\"mr-1.5 h-3.5 w-3.5\" />\n            <span>{trailer.company}</span>\n          </div>\n        ) : (\n          <Skeleton className=\"h-3 w-2/3\" />\n        )\n      ) : null}","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":99,"to":127}}}}],["627",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n{trailer.storageExpiryDate ? (\n        isMounted ? (\n          <DateDisplay label=\"Storage Exp\" dateString={trailer.storageExpiryDate} icon={CalendarDays} />\n        ) : (\n          <Skeleton className=\"h-3 w-1/2 mt-1\" />\n        )\n      ) : null}\n\n      {trailer.weight !== undefined && trailer.weight !== null && (\n        isMounted ? (\n          <div className=\"flex items-center text-xs text-muted-foreground mt-1\">\n            <Weight className=\"mr-1.5 h-3.5 w-3.5\" />\n            <span>Weight: {trailer.weight} kg</span>\n          </div>\n        ) : (\n           <Skeleton className=\"h-3 w-1/3 mt-1\" />\n        )\n      )}","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":129,"to":146}}}}],["628",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n{trailer.customField1 && (\n        isMounted ? (\n          <CustomFieldDisplay label=\"T1.1\" value={trailer.customField1} icon={Tag} />\n        ) : (\n          <Skeleton className=\"h-3 w-1/3 mt-1\" />\n        )\n      )}\n      {trailer.customField2 && (\n        isMounted ? (\n          <CustomFieldDisplay label=\"T1.2\" value={trailer.customField2} icon={Tag} />\n        ) : (\n          <Skeleton className=\"h-3 w-1/3 mt-1\" />\n        )\n      )}","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":148,"to":161}}}}],["629",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n<div className=\"mt-4 space-y-2\">\n        <div className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-muted-foreground\">Status:</span>\n           <Select value={trailer.status} onValueChange={(newStatus) => onStatusChange(newStatus as TrailerStatus)}>\n            <SelectTrigger className=\"h-8 text-xs w-[130px]\">\n              <SelectValue placeholder=\"Change status\" />\n            </SelectTrigger>\n            <SelectContent>\n              {allStatuses.map(status => (\n                <SelectItem key={status} value={status} className=\"text-xs\">\n                  <Badge className={`${statusColors[status]} text-white mr-2 w-3 h-3 p-0 inline-block rounded-full`} />\n                  {status}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n        <div className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-muted-foreground\">Shipments:</span>","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":163,"to":181}}}}],["630",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n{isMounted ? (\n            <div className=\"flex items-center\">\n              <Package className=\"h-4 w-4 mr-1 text-muted-foreground\" />\n              <span>{shipmentCount}</span>\n            </div>\n          ) : <Skeleton className=\"h-4 w-10\" />}\n        </div>\n        <div className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-muted-foreground\">Total Pieces:</span>\n          {isMounted ? (\n            <div className=\"flex items-center\">\n              <Boxes className=\"h-4 w-4 mr-1 text-muted-foreground\" />\n              <span>{totalPieces}</span>\n            </div>\n          ): <Skeleton className=\"h-4 w-10\" />}\n        </div>\n      </div>\n    </>\n  );","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":182,"to":200}}}}],["631",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\nconst cardActions = (\n    <div className=\"flex items-center justify-end gap-1 w-full\">\n       <Button variant=\"outline\" size=\"sm\" onClick={() => setIsEditDialogOpen(true)} className=\"h-8\">\n        <Edit className=\"mr-1.5 h-3.5 w-3.5\" /> Edit\n      </Button>\n      <Button asChild variant=\"ghost\" size=\"sm\" className=\"text-primary hover:text-primary-foreground hover:bg-primary h-8\">\n        <Link href={`/trailers/${trailer.id}`}>\n          Manage <ChevronRight className=\"ml-1 h-4 w-4\" />\n        </Link>\n      </Button>\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\n            <MoreVertical className=\"h-4 w-4\" />\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\">\n          <DropdownMenuItem onClick={() => setIsDeleteDialogOpen(true)} className=\"text-destructive focus:text-destructive focus:bg-destructive/10\">\n            <Trash2 className=\"mr-2 h-4 w-4\" />","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":203,"to":221}}}}],["632",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\nDelete Trailer\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </div>\n  );","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":222,"to":227}}}}],["633",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\nif (viewMode === 'list') {\n    return (\n      <>\n        <Card className=\"group transition-all hover:shadow-lg w-full\">\n          <div className=\"p-4 flex items-center justify-between\">\n            <div className=\"flex-grow\">\n              <Link href={`/trailers/${trailer.id}`} className=\"block\">\n                <h3 className=\"text-lg font-semibold group-hover:text-primary transition-colors\">\n                  ID: {trailer.id}\n                </h3>\n                {trailer.arrivalDate ? (\n                  isMounted ? (\n                    <div className=\"flex items-center text-sm text-foreground mt-0.5 font-semibold\">\n                      <CalendarDays className=\"mr-1.5 h-4 w-4 text-primary\" />\n                      <span>Arrived: {formatDate(trailer.arrivalDate)}</span>\n                    </div>\n                  ) : (\n                    <Skeleton className=\"h-4 w-3/4 mt-0.5 mb-1\" />\n                  )\n                ) : null}","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":229,"to":248}}}}],["634",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n{trailer.name ? (\n                  isMounted ? (\n                     <p className=\"text-xs text-muted-foreground mt-0.5\">Name: {trailer.name}</p>\n                  ) : (\n                     <Skeleton className=\"h-3 w-1/2 mt-0.5\" />\n                  )\n                ) : null}\n\n                {trailer.company ? (\n                  isMounted ? (\n                    <div className=\"mt-1 flex items-center text-xs text-muted-foreground\">\n                      <Briefcase className=\"mr-1.5 h-3 w-3\" />\n                      <span>{trailer.company}</span>\n                    </div>\n                  ) : (\n                     <Skeleton className=\"h-3 w-2/3 mt-1\" />\n                  )\n                ) : null}","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":250,"to":267}}}}],["635",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n{trailer.storageExpiryDate ? (\n                  isMounted ? (\n                    <DateDisplay label=\"Storage Exp\" dateString={trailer.storageExpiryDate} icon={CalendarDays} />\n                  ) : (\n                     <Skeleton className=\"h-3 w-1/2 mt-1\" />\n                  )\n                ) : null}","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":269,"to":275}}}}],["636",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n{trailer.weight !== undefined && trailer.weight !== null && (\n                  isMounted ? (\n                    <div className=\"flex items-center text-xs text-muted-foreground mt-1\">\n                      <Weight className=\"mr-1.5 h-3.5 w-3.5\" />\n                      <span>Weight: {trailer.weight} kg</span>\n                    </div>\n                  ) : (\n                    <Skeleton className=\"h-3 w-1/3 mt-1\" />\n                  )\n                )}\n                {trailer.customField1 && (\n                  isMounted ? (\n                    <CustomFieldDisplay label=\"T1.1\" value={trailer.customField1} icon={Tag} />\n                  ) : (\n                    <Skeleton className=\"h-3 w-1/3 mt-1\" />\n                  )\n                )}\n                {trailer.customField2 && (\n                  isMounted ? (\n                    <CustomFieldDisplay label=\"T1.2\" value={trailer.customField2} icon={Tag} />\n                  ) : (","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":277,"to":297}}}}],["637",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n) : (\n                    <Skeleton className=\"h-3 w-1/3 mt-1\" />\n                  )\n                )}\n              </Link>\n              <div className=\"mt-2 flex items-center gap-4 text-sm\">\n                <div className=\"flex items-center\">\n                  <Badge className={`${statusColors[trailer.status]} text-white text-xs px-1.5 py-0.5`}>{trailer.status}</Badge>\n                </div>\n                <div className=\"flex items-center text-muted-foreground\">\n                  <Package className=\"h-4 w-4 mr-1\" />\n                  {isMounted ? <span>{shipmentCount} Shipments</span> : <Skeleton className=\"h-4 w-20\" /> }\n                </div>\n                <div className=\"flex items-center text-muted-foreground\">\n                  <Boxes className=\"h-4 w-4 mr-1\" />\n                  {isMounted ? <span>{totalPieces} Pieces</span> : <Skeleton className=\"h-4 w-16\" />}\n                </div>\n              </div>\n            </div>","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":297,"to":315}}}}],["638",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n</div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Select value={trailer.status} onValueChange={(newStatus) => onStatusChange(newStatus as TrailerStatus)}>\n                <SelectTrigger className=\"h-9 text-xs w-[130px] hidden sm:flex\">\n                  <SelectValue placeholder=\"Change status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {allStatuses.map(status => (\n                    <SelectItem key={status} value={status} className=\"text-xs\">\n                      <Badge className={`${statusColors[status]} text-white mr-2 w-3 h-3 p-0 inline-block rounded-full`} />\n                      {status}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              {cardActions}\n            </div>\n          </div>\n        </Card>\n        {isEditDialogOpen && (\n          <EditTrailerDialog\n            isOpen={isEditDialogOpen}","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":314,"to":336}}}}],["639",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\nisOpen={isEditDialogOpen}\n            setIsOpen={setIsEditDialogOpen}\n            trailerToEdit={trailer}\n          />\n        )}\n        {isDeleteDialogOpen && (\n          <ConfirmationDialog\n            isOpen={isDeleteDialogOpen}\n            setIsOpen={setIsDeleteDialogOpen}\n            onConfirm={onDelete}\n            title=\"Delete Trailer?\"\n            description={`Are you sure you want to delete trailer ID: ${trailer.id} (${trailer.name || 'No Name'})? This will also delete all its ${isMounted ? shipmentCount : '...'} associated shipments. This action cannot be undone.`}\n            confirmText=\"Delete\"\n            confirmButtonVariant=\"destructive\"\n          />\n        )}\n      </>\n    );\n  }","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":336,"to":354}}}}],["640",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\n// Grid View\n  return (\n    <>\n      <Card className=\"group transition-all hover:shadow-lg flex flex-col h-full\">\n        <Link href={`/trailers/${trailer.id}`} className=\"block flex-grow flex flex-col\">\n          <CardHeader className=\"pb-2\">\n            <Badge className={`${statusColors[trailer.status]} text-white text-xs px-1.5 py-0.5 self-start`}>{trailer.status}</Badge>\n          </CardHeader>\n          <CardContent className=\"flex-grow\">\n            <GridViewContent />\n          </CardContent>\n        </Link>\n        <CardFooter className=\"pt-4\">\n          {cardActions}\n        </CardFooter>\n      </Card>\n      {isEditDialogOpen && (\n        <EditTrailerDialog\n          isOpen={isEditDialogOpen}\n          setIsOpen={setIsEditDialogOpen}\n          trailerToEdit={trailer}\n        />\n      )}\n      {isDeleteDialogOpen && (\n        <ConfirmationDialog\n          isOpen={isDeleteDialogOpen}\n          setIsOpen={setIsDeleteDialogOpen}\n          onConfirm={onDelete}","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":356,"to":383}}}}],["641",{"pageContent":"File: src/components/trailer/TrailerCard.tsx\nonConfirm={onDelete}\n          title=\"Delete Trailer?\"\n          description={`Are you sure you want to delete trailer ID: ${trailer.id} (${trailer.name || 'No Name'})? This will also delete all its ${isMounted ? shipmentCount : '...'} associated shipments. This action cannot be undone.`}\n          confirmText=\"Delete\"\n          confirmButtonVariant=\"destructive\"\n        />\n      )}\n    </>\n  );\n}","metadata":{"source":"src/components/trailer/TrailerCard.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":383,"to":392}}}}],["642",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n'use client';","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":1,"to":1}}}}],["643",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { useWarehouse } from '@/contexts/WarehouseContext';\nimport type { Shipment } from '@/types';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { ArrowLeft, Printer, Package, MapPin, CheckCircle2, CircleOff, FileText, Users, Weight, Box, Truck, Hash, Eye, Send, Briefcase, CalendarCheck, Archive, Edit3, Fingerprint, CalendarClock, Mail, MessageSquare } from 'lucide-react';\nimport { format, parseISO } from 'date-fns';\nimport EditShipmentDialog from '@/components/shipment/EditShipmentDialog'; \nimport ConfirmationDialog from '@/components/shared/ConfirmationDialog';","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":3,"to":15}}}}],["644",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nimport ManageCommentDialog from '@/components/shipment/ManageCommentDialog';","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":16,"to":16}}}}],["645",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nexport default function SingleShipmentPage() {\n  const router = useRouter();\n  const params = useParams();\n  const shipmentId = params.shipmentId as string;\n\n  const { getShipmentById, getTrailerById, markShipmentAsPrinted, updateShipment } = useWarehouse();\n\n  const [shipment, setShipment] = useState<Shipment | null | undefined>(undefined);\n  const [isClient, setIsClient] = useState(false);\n  const [printedDateTime, setPrintedDateTime] = useState<string | null>(null);\n  const [isEditShipmentDialogOpen, setIsEditShipmentDialogOpen] = useState(false); \n  const [isReprintConfirmOpen, setIsReprintConfirmOpen] = useState(false);\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":18,"to":30}}}}],["646",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nuseEffect(() => {\n    setIsClient(true);\n    if (shipmentId && getShipmentById) {\n      const currentShipment = getShipmentById(shipmentId);\n      setShipment(currentShipment);\n    }\n  }, [shipmentId, getShipmentById]);\n  \n  useEffect(() => {\n    if (isClient && shipmentId && getShipmentById) {\n      const currentShipment = getShipmentById(shipmentId);\n      setShipment(currentShipment);\n      if (currentShipment?.releasedAt) {\n        setPrintedDateTime(new Date(currentShipment.releasedAt).toLocaleString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' }));\n      } else {\n        setPrintedDateTime(null);\n      }\n    }\n  }, [isClient, shipmentId, getShipmentById, shipment?.releasedAt, shipment?.stsJob, shipment?.mrn, shipment?.clearanceDate, shipment?.comments]);\n\n\n  const trailer = shipment?.trailerId ? getTrailerById(shipment.trailerId) : null;\n\n  const canPrint = shipment?.cleared && shipment?.released;","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":32,"to":55}}}}],["647",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nconst proceedWithPrint = () => {\n    if (!canPrint || !shipment) return;\n    \n    // Always update the 'releasedAt' timestamp on print or reprint.\n    markShipmentAsPrinted(shipment.id);\n    \n    // Use a short timeout to allow the state update to propagate before printing\n    setTimeout(() => {\n      window.print();\n    }, 100);\n  };\n  \n  const handlePrint = () => {\n    if (canPrint && shipment) {\n      if (shipment.releasedAt) {\n        setIsReprintConfirmOpen(true);\n      } else {\n        proceedWithPrint();\n      }\n    }\n  };","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":57,"to":77}}}}],["648",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nconst handleViewDocument = (documentName?: string) => {\n    if (documentName) {\n      const newWindow = window.open(\"\", \"_blank\");\n      if (newWindow) {\n        newWindow.document.write(`\n          <html>\n            <head>\n              <title>Viewing Document: ${documentName}</title>\n              <style>\n                body { font-family: sans-serif; padding: 20px; display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; margin: 0; background-color: #f0f0f0; }\n                .container { background-color: white; padding: 30px; border-radius: 8px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); text-align: center; }\n                h1 { color: #333; }\n                p { color: #666; }\n              </style>\n            </head>\n            <body>\n              <div class=\"container\">\n                <h1>Viewing Document: ${documentName}</h1>","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":79,"to":96}}}}],["649",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<p>(This is a placeholder. In a real application, the document content for \"${documentName}\" would be displayed here.)</p>\n              </div>\n            </body>\n          </html>\n        `);\n        newWindow.document.close();\n      } else {\n        alert(`Could not open new window to view document: ${documentName}. Please check your popup blocker settings.`);\n      }\n    }\n  };","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":97,"to":107}}}}],["650",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nconst formatDate = (dateString?: string, dateFormat = 'PPpp') => {\n    if (!dateString) return 'N/A';\n    try {\n      return format(parseISO(dateString), dateFormat); \n    } catch (error) {\n      return \"Invalid Date\";\n    }\n  };\n\n  const handleNotifyMissingDocuments = () => {\n    if (!shipment) return;\n\n    let missingParts = [];\n    if (!shipment.cleared) {\n      missingParts.push(\"clearance\");\n    }\n    if (!shipment.released) {\n      missingParts.push(\"release permission\");\n    }\n\n    if (missingParts.length === 0) return; // Should not happen if button is visible","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":109,"to":129}}}}],["651",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nconst missingSubjectPart = missingParts.join(\" & \");\n    const subject = `Missing ${missingSubjectPart} for Trailer ${shipment.trailerId} / Job ${shipment.stsJob}`;\n    const body = `Good Morning,\\n\\nWe have a driver waiting to collect \"${shipment.trailerId} / Job ${shipment.stsJob}\" but we are missing files for above shipment.\\n\\nCan you be able to update us ASAP please?`;\n    const mailtoLink = `mailto:klaudia@mail.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n    window.location.href = mailtoLink;\n  };","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":131,"to":136}}}}],["652",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nif (!isClient || shipment === undefined) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex justify-between items-center\">\n          <Skeleton className=\"h-10 w-32\" />\n          <Skeleton className=\"h-10 w-28\" />\n        </div>\n        <Card>\n          <CardHeader>\n            <Skeleton className=\"h-8 w-3/4 mb-2\" />\n            <Skeleton className=\"h-4 w-1/2\" />\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {[...Array(10)].map((_, i) => ( \n              <div key={i} className=\"flex items-center space-x-2\">\n                <Skeleton className=\"h-5 w-5 rounded-full\" />\n                <Skeleton className=\"h-4 w-1/4\" />\n                <Skeleton className=\"h-4 w-1/2\" />\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":139,"to":163}}}}],["653",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nif (shipment === null) {\n    return (\n      <div className=\"flex flex-col justify-center items-center h-[calc(100vh-200px)] space-y-4\">\n        <Package className=\"h-16 w-16 text-muted-foreground\" />\n        <p className=\"text-2xl font-semibold text-destructive\">Shipment Not Found</p>\n        <p className=\"text-xl text-muted-foreground\">Could not find shipment with ID: {shipmentId}</p>\n        <Button variant=\"outline\" onClick={() => router.push('/shipments')}>\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back to All Shipments\n        </Button>\n      </div>\n    );\n  }\n\n  if (!shipment) return null;\n\n  const locations = shipment.locations || [{ name: 'Pending Assignment' }];\n  const isPendingAssignment = locations.length === 1 && locations[0].name === 'Pending Assignment';\n  const showNotifyButton = !shipment.cleared || !shipment.released;","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":165,"to":182}}}}],["654",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\nreturn (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4 no-print\">\n        <Button variant=\"outline\" onClick={() => router.back()} size=\"sm\">\n          <ArrowLeft className=\"mr-2 h-4 w-4\" /> Back\n        </Button>\n        <div className=\"flex gap-2 flex-wrap justify-center sm:justify-end\">\n          <Button onClick={() => setIsCommentDialogOpen(true)} variant=\"outline\" size=\"sm\">\n            <MessageSquare className=\"mr-2 h-4 w-4\" /> {shipment.comments ? 'Edit Comment' : 'Add Comment'}\n          </Button>\n          <Button onClick={() => setIsEditShipmentDialogOpen(true)} variant=\"outline\" size=\"sm\">\n            <Edit3 className=\"mr-2 h-4 w-4\" /> Edit Shipment\n          </Button>\n          {showNotifyButton && (\n            <Button onClick={handleNotifyMissingDocuments} variant=\"outline\" size=\"sm\" className=\"text-orange-600 hover:text-orange-700 border-orange-500 hover:border-orange-600\">","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":185,"to":199}}}}],["655",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<Mail className=\"mr-2 h-4 w-4\" /> Notify Missing Docs\n            </Button>\n          )}\n          <Button onClick={handlePrint} disabled={!canPrint} size=\"sm\">\n            <Printer className=\"mr-2 h-4 w-4\" /> Print Shipment\n            {!canPrint && <span className=\"ml-2 text-xs\">(Requires Cleared & Permitted)</span>}\n          </Button>\n        </div>\n      </div>","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":200,"to":208}}}}],["656",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<Card className=\"printable-area shadow-lg\">\n        <CardHeader className=\"border-b pb-4\">\n          <div className=\"flex items-start justify-between\">\n            <div>\n              <CardTitle className=\"text-2xl md:text-3xl text-primary flex items-center\">\n                <Package className=\"mr-3 h-8 w-8\" />\n                Shipment Details\n              </CardTitle>\n              <CardDescription className=\"mt-1\">\n                STS Job: <span className=\"font-semibold text-foreground\">{shipment.stsJob}</span> | Shipment ID: <span className=\"font-semibold text-foreground\">{shipment.id.substring(0,8)}...</span>\n                {shipment.customerJobNumber && ` | Cust. Job: ${shipment.customerJobNumber}`}\n              </CardDescription>\n            </div>\n             {trailer && (\n              <Link href={`/trailers/${trailer.id}`} className=\"no-print-in-area\">\n                <Badge variant=\"secondary\" className=\"whitespace-nowrap hover:bg-primary/10\">","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":210,"to":225}}}}],["657",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<Truck className=\"mr-1.5 h-4 w-4\"/>\n                  Trailer: {trailer.id}\n                </Badge>\n              </Link>\n            )}\n          </div>\n        </CardHeader>\n        <CardContent className=\"pt-6 grid grid-cols-1 print:grid-cols-2 md:grid-cols-2 print:gap-x-4 print:gap-y-3 gap-x-8 gap-y-6 text-sm card-content-print\">","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":226,"to":233}}}}],["658",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n{trailer && (\n            <div className=\"space-y-1\">\n              <h3 className=\"font-semibold text-muted-foreground flex items-center\"><Truck className=\"mr-2 h-4 w-4\" />Associated Trailer ID</h3>\n              <p className=\"text-2xl font-bold text-foreground\">\n                <Link href={`/trailers/${trailer.id}`} className=\"hover:underline print:text-foreground print:no-underline\">\n                  {trailer.id}\n                </Link>\n              </p>\n            </div>\n          )}","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":235,"to":244}}}}],["659",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<div className=\"space-y-1\">\n            <h3 className=\"font-semibold text-muted-foreground flex items-center\"><Hash className=\"mr-2 h-4 w-4\" />STS Job Number</h3>\n            <p className=\"text-2xl font-bold text-foreground\">{shipment.stsJob}</p>\n          </div>\n          \n          {shipment.customerJobNumber && (\n            <div className=\"space-y-1\">\n              <h3 className=\"font-semibold text-muted-foreground flex items-center\"><Briefcase className=\"mr-2 h-4 w-4\" />Customer Job Number</h3>\n              <p className=\"text-lg font-medium\">{shipment.customerJobNumber}</p>\n            </div>\n          )}\n\n          {shipment.mrn && (\n            <div className=\"space-y-1 no-print\">\n              <h3 className=\"font-semibold text-muted-foreground flex items-center\"><Fingerprint className=\"mr-2 h-4 w-4\" />MRN</h3>\n              <p className=\"text-lg font-medium\">{shipment.mrn}</p>\n            </div>\n          )}","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":246,"to":263}}}}],["660",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<div className=\"space-y-1\">\n            <h3 className=\"font-semibold text-muted-foreground flex items-center\"><Package className=\"mr-2 h-4 w-4\" />Quantity</h3>\n            <p className=\"text-base font-medium\">{shipment.quantity} pieces</p>\n          </div>\n\n          {shipment.palletSpace !== undefined && shipment.palletSpace !== null && (\n            <div className=\"space-y-1\">\n              <h3 className=\"font-semibold text-muted-foreground flex items-center\"><Box className=\"mr-2 h-4 w-4\" />Total Pallet Spaces</h3>\n              <p>{shipment.palletSpace}</p>\n            </div>\n          )}","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":266,"to":276}}}}],["661",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<div className=\"space-y-1\">\n            <h3 className=\"font-semibold text-muted-foreground flex items-center\"><Send className=\"mr-2 h-4 w-4\" />Exporter (Consignor)</h3>\n            <p>{shipment.exporter}</p>\n          </div>\n          \n          <div className=\"space-y-1\">\n            <h3 className=\"font-semibold text-muted-foreground flex items-center\"><Users className=\"mr-2 h-4 w-4\" />Importer (Consignee)</h3>\n            <p>{shipment.importer}</p>\n          </div>\n\n\n          {shipment.weight !== undefined && shipment.weight !== null && (\n             <div className=\"space-y-1\">\n              <h3 className=\"font-semibold text-muted-foreground flex items-center\"><Weight className=\"mr-2 h-4 w-4\" />Weight</h3>\n              <p>{shipment.weight} kg</p>\n            </div>\n          )}","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":278,"to":294}}}}],["662",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n{shipment.releasedAt && (\n            <div className=\"space-y-1 no-print\">\n              <h3 className=\"font-semibold text-muted-foreground flex items-center\"><CalendarCheck className=\"mr-2 h-4 w-4\" />Released At</h3>\n              <p className=\"text-base font-medium\">{formatDate(shipment.releasedAt)}</p>\n            </div>\n          )}\n\n          {shipment.clearanceDate && (\n            <div className=\"space-y-1 no-print\">\n              <h3 className=\"font-semibold text-muted-foreground flex items-center\"><CalendarClock className=\"mr-2 h-4 w-4\" />Clearance Date</h3>\n              <p className=\"text-base font-medium\">{formatDate(shipment.clearanceDate, 'PP')}</p>\n            </div>\n          )}","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":296,"to":308}}}}],["663",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n{shipment.comments && (\n            <div className=\"space-y-1 col-span-1 print:col-span-2 md:col-span-2\">\n                <h3 className=\"font-semibold text-muted-foreground flex items-center\"><MessageSquare className=\"mr-2 h-4 w-4\" />Comments</h3>\n                <blockquote className=\"border-l-4 border-primary pl-4 italic text-base\">\n                    {shipment.comments}\n                </blockquote>\n            </div>\n          )}","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":310,"to":317}}}}],["664",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<div className=\"space-y-1 col-span-1 print:col-span-2 md:col-span-2\">\n            <h3 className=\"font-semibold text-muted-foreground flex items-center\"><MapPin className=\"mr-2 h-4 w-4\" />Warehouse Locations</h3>\n            <div className=\"flex flex-wrap gap-2 mt-1\">\n            {isPendingAssignment ? (\n                <Badge variant=\"outline\" className=\"text-base\">Pending Assignment</Badge>\n              ) : (\n                locations.map((loc, index) => (\n                  <Badge key={index} variant=\"secondary\" className=\"text-base\">\n                    {loc.name}\n                    {loc.pallets !== undefined && ` (${loc.pallets} plts)`}\n                    {locations.length > 1 && ` (${index + 1} of ${locations.length})`}\n                  </Badge>\n                ))\n              )}\n            </div>\n          </div>","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":319,"to":334}}}}],["665",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<div className=\"space-y-3 col-span-1 print:col-span-2 md:col-span-2 border-t pt-4 mt-2\">\n            <h3 className=\"font-semibold text-muted-foreground mb-2\">Status & Documents</h3>\n            <div className=\"grid grid-cols-1 print:grid-cols-2 sm:grid-cols-2 print:gap-2 gap-4\">\n                 <div>\n                    <div className=\"flex items-center mb-1\">\n                      {shipment.released ? <CheckCircle2 className=\"mr-2 h-5 w-5 text-green-600\" /> : <CircleOff className=\"mr-2 h-5 w-5 text-red-500\" />}\n                      <span className=\"font-medium\">Permitted to be Released:</span>\n                      <span className={`ml-2 font-bold ${shipment.released ? 'text-green-600' : 'text-red-500'}`}>\n                        {shipment.released ? 'Yes' : 'No'}\n                      </span>\n                    </div>\n                    {shipment.releaseDocumentName && (\n                      <div className=\"flex items-center text-xs text-muted-foreground ml-7\">","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":336,"to":348}}}}],["666",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<FileText className=\"mr-1 h-3.5 w-3.5\" /> Doc: {shipment.releaseDocumentName}\n                        <Button\n                            variant=\"link\"\n                            size=\"sm\"\n                            className=\"ml-2 h-auto p-0 text-xs no-print-in-area\"\n                            onClick={() => handleViewDocument(shipment.releaseDocumentName)}\n                            aria-label={`View release document ${shipment.releaseDocumentName}`}\n                          >\n                            <Eye className=\"mr-1 h-3 w-3\" /> View\n                          </Button>\n                      </div>\n                    )}\n                 </div>\n                 <div>\n                    <div className=\"flex items-center mb-1\">\n                      {shipment.cleared ? <CheckCircle2 className=\"mr-2 h-5 w-5 text-green-600\" /> : <CircleOff className=\"mr-2 h-5 w-5 text-red-500\" />}\n                      <span className=\"font-medium\">Cleared:</span>","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":349,"to":365}}}}],["667",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<span className={`ml-2 font-bold ${shipment.cleared ? 'text-green-600' : 'text-red-500'}`}>\n                        {shipment.cleared ? 'Yes' : 'No'}\n                      </span>\n                    </div>\n                    {shipment.clearanceDocumentName && (\n                      <div className=\"flex items-center text-xs text-muted-foreground ml-7\">\n                        <FileText className=\"mr-1 h-3.5 w-3.5\" /> Doc: {shipment.clearanceDocumentName}\n                        <Button\n                            variant=\"link\"\n                            size=\"sm\"\n                            className=\"ml-2 h-auto p-0 text-xs no-print-in-area\"\n                            onClick={() => handleViewDocument(shipment.clearanceDocumentName)}\n                            aria-label={`View clearance document ${shipment.clearanceDocumentName}`}\n                          >\n                            <Eye className=\"mr-1 h-3 w-3\" /> View","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":366,"to":380}}}}],["668",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n</Button>\n                      </div>\n                    )}\n                 </div>\n            </div>\n            <div className=\"flex items-center pt-2\">\n              <Archive className={`mr-2 h-5 w-5 ${shipment.emptyPalletRequired && shipment.emptyPalletRequired > 0 ? 'text-destructive' : 'text-muted-foreground'}`} />\n              <span className=\"font-medium\">Empty Pallets Required:</span>\n              <span className={`ml-2 font-bold ${shipment.emptyPalletRequired && shipment.emptyPalletRequired > 0 ? 'text-destructive text-lg' : ''}`}>\n                {shipment.emptyPalletRequired && shipment.emptyPalletRequired > 0 ? shipment.emptyPalletRequired : 'No'}\n              </span>\n            </div>\n          </div>\n        </CardContent>\n        {trailer && trailer.arrivalDate && (\n          <CardFooter className=\"border-t pt-4 text-xs text-muted-foreground no-print\">","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":381,"to":396}}}}],["669",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<p>Associated with Trailer <Link href={`/trailers/${trailer.id}`} className=\"text-primary hover:underline font-semibold print:text-foreground print:no-underline\">{trailer.id}</Link>, arrived on {formatDate(trailer.arrivalDate, 'PP')}.</p>\n          </CardFooter>\n        )}","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":397,"to":399}}}}],["670",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n{/* Signature Block - Print Only */}\n        <div className=\"print-only-block print-signature-block px-6 pb-6 pt-8 mt-8 border-t border-border\">\n          <h3 className=\"text-lg font-semibold mb-8 text-center text-foreground\">Driver's Acknowledgment of Receipt</h3>\n          <div className=\"grid grid-cols-2 gap-x-12 gap-y-12\">\n            <div className=\"space-y-1\">\n              <label className=\"block text-sm font-medium text-muted-foreground\">Signature</label>\n              <div className=\"h-12 border-b border-foreground\"></div>\n            </div>\n            <div className=\"space-y-1\">\n              <label className=\"block text-sm font-medium text-muted-foreground\">Printed Name</label>\n              <div className=\"h-12 border-b border-foreground\"></div>\n            </div>\n            <div className=\"space-y-1\">\n              <label className=\"block text-sm font-medium text-muted-foreground\">Company</label>","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":401,"to":414}}}}],["671",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n<div className=\"h-12 border-b border-foreground\"></div>\n            </div>\n            <div className=\"space-y-1\">\n              <label className=\"block text-sm font-medium text-muted-foreground\">Vehicle Reg:</label>\n              <div className=\"h-12 border-b border-foreground\"></div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Released (printed) on Date - Print Only */}\n        {printedDateTime && (\n          <div className=\"print-only-block mt-4 pt-4 text-center border-t border-border px-6 pb-6\">\n            <p className=\"text-xs text-muted-foreground\">\n              Released (printed) on: {printedDateTime}\n            </p>\n          </div>\n        )}","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":415,"to":431}}}}],["672",{"pageContent":"File: src/app/shipments/[shipmentId]/page.tsx\n</Card>\n\n      {isEditShipmentDialogOpen && shipment && ( \n        <EditShipmentDialog\n          isOpen={isEditShipmentDialogOpen}\n          setIsOpen={setIsEditShipmentDialogOpen}\n          shipmentToEdit={shipment}\n        />\n      )}\n\n      {isCommentDialogOpen && shipment && (\n        <ManageCommentDialog\n            isOpen={isCommentDialogOpen}\n            setIsOpen={setIsCommentDialogOpen}\n            shipmentToManage={shipment}\n        />\n      )}\n\n      {isReprintConfirmOpen && (\n        <ConfirmationDialog\n          isOpen={isReprintConfirmOpen}\n          setIsOpen={setIsReprintConfirmOpen}\n          onConfirm={proceedWithPrint}\n          title=\"Reprint Shipment?\"\n          description={`This shipment was already released on ${printedDateTime}. Are you sure you want to print it again? This will update the release date to now.`}\n          confirmText=\"Yes, Reprint\"\n        />\n      )}\n    </div>\n  );\n}","metadata":{"source":"src/app/shipments/[shipmentId]/page.tsx","contentRoot":"/home/user/studio","loc":{"lines":{"from":433,"to":463}}}}]]